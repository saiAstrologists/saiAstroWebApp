{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/forgot-password/forgot-password.component.ts","webpack:///src/app/forgot-password/forgot-password.component.html","webpack:///src/app/forgot-password/forgot-password.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.service.ts","webpack:///src/app/material-module.ts","webpack:///src/app/observables/behaviourSubject.service.ts","webpack:///src/app/shared/constant/regex-constant.ts","webpack:///src/app/shared/constant/rest-url.constants.ts","webpack:///src/app/shared/service/authentication/authentication.service.ts","webpack:///src/app/shared/service/commonService/common.service.ts","webpack:///src/app/shared/service/http/http-intercepter-basic-auth.service.ts","webpack:///src/app/shared/service/http/loader-interceptor.service.ts","webpack:///src/app/shared/service/loader/loader.service.ts","webpack:///src/app/shared/service/restApi/rest.service.ts","webpack:///src/app/sign-up/sign-up.component.ts","webpack:///src/app/sign-up/sign-up.component.html","webpack:///src/app/sign-up/sign-up.service.ts","webpack:///src/app/spinner/spinner.component.ts","webpack:///src/app/spinner/spinner.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","loadChildren","m","PagesModule","AppRoutingModule","forRoot","imports","AppComponent","_commonService","dialog","_route","_observableDataService","title","isUserLogin","reason","checkUser","JSON","parse","sessionStorage","getItem","console","log","sidenav","close","dialogRef","open","width","afterClosed","subscribe","result","userData","setItem","token","stringify","checkUserOperation","navigate","tostMessage","clear","talkToAstro","chatToAstro","viewReport","viewQA","logOut","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","ForgotPasswordComponent","_formBuilder","_forgotPasswordService","isVisible","isOtp","outputResetData","mobileNumber","control","value","required","match","ONLY_NUMBER","mobileErr","error","passwordPattern","PASSWORD_REGEX","passErr","validateForm","group","contactNo","otp","disabled","userType","resetForm","password","key","controls","markAsDirty","updateValueAndValidity","forgetPassword","responseData","resonseMessage","message","status","setValue","data","onlySelf","enable","alert","verifyOTP","resetUser","reset","emit","ForgotPasswordService","restService","create","providedIn","LoginComponent","router","_loginService","isForgotPassVisible","otpForm","login","responseBody","profileUpdated","event","loginService","MaterialModule","ObservableDataService","messageSource","checkOperationSource","astroDetail","checkUserData","asObservable","checkUserOperationFlag","observedAstroDetail","next","RegexConstant","RestUrl","AuthenticationService","http","CommonService","_snackBar","duration","horizontalPosition","verticalPosition","makeCall","HttpIntercepterBasicAuthService","basicAuthenticationService","request","basicAuthHeaderString","getAuthenticatedToken","clone","setHeaders","handle","pipe","handleResponse","handleError","headers","get","errorMessage","ErrorEvent","LoaderInterceptorService","loaderService","showLoader","onEnd","err","hideLoader","show","hide","LoaderService","loaderSubject","RestService","route","body","post","urlAddress","SignUpComponent","_signUpService","outputSignUpData","signUpValidateForm","name","email","signUp","requestData","signUpService","SpinnerComponent","spinner","isSpinning$","loaderState","res","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page/home-page.component'\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'home' },\n  { path: 'home' , loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)}\n  // { path: '' , component: HomePageComponent}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport {MatSidenav} from '@angular/material/sidenav';\r\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { LoginComponent } from './login/login.component'\r\nimport {CommonService} from './shared/service/commonService/common.service'\r\nimport {Router} from '@angular/router'\r\nimport { ObservableDataService } from './observables/behaviourSubject.service';\r\nimport { ResourceLoader } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\n\r\nexport class AppComponent implements OnInit {\r\n  title = 'saiAstroWorld';\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n  isUserLogin : boolean = false;\r\n  checkUser;\r\n  constructor(private _commonService: CommonService, public dialog: MatDialog, private _route : Router, private _observableDataService : ObservableDataService){}\r\n\r\n  reason = '';\r\n\r\n  ngOnInit() {\r\n\r\n      this.checkUser = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\n      console.log(\"checkUser ++\",this.checkUser);\r\n      if(this.checkUser != null) {\r\n        this.isUserLogin = true;\r\n      } else {\r\n        this.isUserLogin = false;\r\n      }\r\n      console.log(\"this.isUserLogin ++++ \",this.isUserLogin);\r\n\r\n  }\r\n\r\n  close(reason: string) {\r\n    this.reason = reason;\r\n    this.sidenav.close();\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(LoginComponent, {\r\n      width: '500px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed',result);\r\n      if(typeof result != 'undefined' || result != null) {\r\n        this.isUserLogin = true;\r\n        this.checkUser = result.userData;\r\n        this._observableDataService.checkUser(result.userData);\r\n        sessionStorage.setItem('token',result.token);\r\n        sessionStorage.setItem('userData',JSON.stringify(result.userData));\r\n      }\r\n    });\r\n  }\r\n\r\n  viewReport(){\r\n    console.log(\"this.checkUser \", this.checkUser);\r\n\r\n    if(this.checkUser != null) {\r\n      console.log(\"view report\");\r\n      this._observableDataService.checkUserOperation('Report');\r\n      this._route.navigate(['home/astrologer']);\r\n    } else {\r\n    this._commonService.tostMessage(\"Please Login to ask report to Astrologers!\")\r\n    }\r\n  }\r\n\r\n  viewQA(){\r\n    if(this.checkUser != null) {\r\n      console.log(\"QA report\");\r\n      this._observableDataService.checkUserOperation('Q&A');\r\n      this._route.navigate(['home/astrologer']);\r\n    } else {\r\n    this._commonService.tostMessage(\"Please Login to ask question to Astrologers!\")\r\n    }\r\n  }\r\n\r\n  talkToAstro(){\r\n    if(this.checkUser != null) {\r\n      console.log(\"QA report\");\r\n      this._observableDataService.checkUserOperation('Call');\r\n      this._route.navigate(['home/astrologer']);\r\n    } else {\r\n    this._commonService.tostMessage(\"Please Login to talk with Astrologers!\")\r\n    }\r\n  }\r\n\r\n  chatToAstro(){\r\n    if(this.checkUser != null) {\r\n      console.log(\"QA report\");\r\n      this._observableDataService.checkUserOperation('Chat');\r\n      this._route.navigate(['home/astrologer']);\r\n    } else {\r\n    this._commonService.tostMessage(\"Please Login to chat with Astrologers!\")\r\n    }\r\n  }\r\n\r\n\r\n  logOut(){\r\n    sessionStorage.clear();\r\n    this._route.navigate(['']);\r\n    this.isUserLogin = false;\r\n    this._commonService.tostMessage(\"Log Out Successfully!\")\r\n\r\n  }\r\n}\r\n","<mat-sidenav-container\r\n    class=\"sidenav-container\" (backdropClick)=\"close('backdrop')\">\r\n\r\n  <mat-sidenav class=\"drawer-container\" #sidenav [fixedInViewport]=\"true\" (keydown.escape)=\"close('escape')\" disableClose>\r\n    <!-- <button mat-button  (click)=\"close('toggle button')\">X</button> -->\r\n      <div class=\"side-bar-logo\"><img class=\"mb-2\" src=\"../assets/images/logo/PNG/font120px.png\"></div>\r\n      <div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\r\n        <a class=\"list-group-item list-group-item-action active\" id=\"astro-talk\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"talkToAstro()\" role=\"tab\" aria-controls=\"astro-talk\">Talk to Astrologer</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-chat\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"chatToAstro()\" role=\"tab\" aria-controls=\"astro-chat\">Chat with Astrologer</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-report\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"viewReport()\" role=\"tab\" aria-controls=\"astro-report\">Get Reports</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-question\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"viewQA()\" role=\"tab\" aria-controls=\"astro-question\">Ask Question</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"horoscope\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"horoscope\">Horoscope 2020</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"kundli\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"kundli\">Kundli</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-mall\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"astro-mall\">AstroMall</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"blog\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"blog\">Blog</a>\r\n      </div>\r\n\r\n      <!-- <li><a>Talk to Astrologer</a></li>\r\n      <li><a>Horoscope 2020</a></li>\r\n      <li><a>Kundli</a></li>\r\n      <li><a>AstroMall</a></li>\r\n      <li><a>Blog</a></li> -->\r\n\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n\r\n    <mat-toolbar class=\"toolbar-wrapper\">\r\n\r\n      <mat-toolbar-row>\r\n\r\n        <button mat-button class=\"menu-button\" (click)=\"sidenav.open()\"><mat-icon aria-hidden=\"false\">view_headline</mat-icon></button>\r\n        <span class=\"hm-logo\"><a href=\"\"><img src=\"../assets/images/logo/PNG/font120px.png\"></a></span>\r\n        <span class=\"example-spacer\"></span>\r\n\r\n        <div class=\"quick-link\">\r\n\r\n        <span class=\"example-spacer\"></span>\r\n        <span class=\"highlight-menu\"><a href=\"javascript:;\" (click)=\"talkToAstro()\">Talk to Astrologer</a></span>\r\n        <span class=\"highlight-menu\"><a href=\"javascript:;\" (click)=\"chatToAstro()\">Chat with Astrologer</a></span>\r\n        <span class=\"highlight-menu\"><a href=\"javascript:;\" (click)=\"viewReport()\">Get Reports</a></span>\r\n        <span class=\"highlight-menu\"><a href=\"javascript:;\" (click)=\"viewQA()\">Ask Question</a></span>\r\n        <span><a href=\"javascript:;\">Horoscope 2020</a> </span>\r\n\r\n\r\n       </div>\r\n        <!-- <button mat-button><mat-icon aria-hidden=\"false\">notifications</mat-icon></button> -->\r\n        <mat-icon class=\"hm-user-icon\" *ngIf=\"isUserLogin\" mat-button [matMenuTriggerFor]=\"menu\" mat-raised-button>face</mat-icon>\r\n        <mat-menu #menu=\"matMenu\" backdropClass=\"hm-user-menu-item\" >\r\n          <h4 *ngIf=\"isUserLogin\">{{checkUser.name}}</h4>\r\n          <!-- <h4>{{checkUser.email}}</h4> -->\r\n          <h4 *ngIf=\"isUserLogin\">{{checkUser.conatctNo}}</h4>\r\n          <mat-divider></mat-divider>\r\n          <button mat-menu-item (click)=\"logOut()\">Log Out</button>\r\n          <!-- <button mat-menu-item>Info</button> -->\r\n        </mat-menu>\r\n        <button mat-raised-button color=\"primary\" (click)=\"openDialog()\" *ngIf=\"!isUserLogin\">Login</button>\r\n        <mat-icon class=\"hm-wallet mt-3\" mat-raised-button>account_balance_wallet</mat-icon>\r\n        <!-- <mat-icon  mat-raised-button>login</mat-icon> -->\r\n\r\n        <mat-icon class=\"hm-cart mt-3\" mat-raised-button>shopping_cart</mat-icon>\r\n        <!-- <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example heart icon\">favorite</mat-icon>\r\n        <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example delete icon\">delete</mat-icon> -->\r\n      </mat-toolbar-row>\r\n      <div class=\"header-social\">\r\n        <a href=\"javascript:;\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n        <a href=\"javascript:;\"><i class=\"fa fa-twitter\"></i></a>\r\n        <a href=\"javascript:;\"><i class=\"fa fa-instagram\"></i></a>\r\n      </div>\r\n    </mat-toolbar>\r\n\r\n      <div class=\"fixed-plugin\">\r\n\r\n          <div class=\"example-button-row\">\r\n\r\n            <button matTooltip=\"Chat\" matTooltipPosition=\"left\"  mat-mini-fab (click)=\"chatToAstro()\" aria-label=\"chat icon\">\r\n              <mat-icon>chat</mat-icon>\r\n            </button>\r\n            <button matTooltip=\"Call\" matTooltipPosition=\"before\" mat-mini-fab (click)=\"talkToAstro()\"  aria-label=\"call icon\">\r\n              <mat-icon>phone</mat-icon>\r\n            </button>\r\n            <button matTooltip=\"Report\" matTooltipPosition=\"before\" mat-mini-fab  (click)=\"viewReport()\" aria-label=\"report icon\">\r\n              <mat-icon>assignment</mat-icon>\r\n            </button>\r\n            <button matTooltip=\"Ask Question\" matTooltipPosition=\"before\" mat-mini-fab (click)=\"viewQA()\"  aria-label=\"Q&A icon\">\r\n              <mat-icon>question_answer</mat-icon>\r\n            </button>\r\n          </div>\r\n       </div>\r\n\r\n     <app-spinner></app-spinner>\r\n    <router-outlet></router-outlet>\r\n\r\n\r\n    <footer class=\"footer-wrapper py-5\">\r\n      <div class=\"footer-top\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-3 footer-about wow fadeInUp animated\" style=\"visibility: visible; animation-name: fadeInUp;\">\r\n              <h3><b>About us</b></h3>\r\n              <p>\r\n                We are a young company always looking for new and creative ideas to help you with our products in your everyday work.\r\n              </p>\r\n              <p>© Company Inc.</p>\r\n                  </div>\r\n            <div class=\"col-md-4 offset-md-1 footer-contact wow fadeInDown animated\" style=\"visibility: visible; animation-name: fadeInDown;\">\r\n              <h3><b>Contact</b></h3>\r\n                  <p><i class=\"fa fa-map-marker-alt\"></i> Demo Address 10, 10136 Turin Italy</p>\r\n                  <p><i class=\"fa fa-phone\"></i> Phone: (0039) 123 45 67 890</p>\r\n                  <p><i class=\"fa fa-envelope\"></i> Email: <a href=\"mailto:hello@domain.com\">hello@domain.com</a></p>\r\n                  <p><i class=\"fa fa-skype\"></i> Skype: you_online</p>\r\n                  </div>\r\n                  <div class=\"col-md-4 footer-links wow fadeInUp animated\" style=\"visibility: visible; animation-name: fadeInUp;\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col\">\r\n                        <h3><b>Links</b></h3>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-6\">\r\n                        <p><a class=\"scroll-link\" href=\"#top-content\">Home</a></p>\r\n                        <p><a href=\"#\">Features</a></p>\r\n                        <p><a href=\"#\">How it works</a></p>\r\n                        <p><a href=\"#\">Our clients</a></p>\r\n                      </div>\r\n                      <div class=\"col-md-6\">\r\n                        <p><a href=\"#\">Plans &amp; pricing</a></p>\r\n                        <p><a href=\"#\">Affiliates</a></p>\r\n                        <p><a href=\"#\">Terms</a></p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"footer-bottom pt-5\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n               <div class=\"col footer-social\">\r\n                    <a href=\"#\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n                    <a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\r\n                    <a href=\"#\"><i class=\"fa fa-instagram\"></i></a>\r\n                  </div>\r\n             </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n\r\n  </mat-sidenav-content>\r\n\r\n  <!-- <button mat-button><mat-icon aria-hidden=\"false\">notifications</mat-icon></button> -->\r\n\r\n</mat-sidenav-container>\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from './material-module';\r\nimport { LoginComponent } from './login/login.component'\r\nimport { HttpIntercepterBasicAuthService } from './shared/service/http/http-intercepter-basic-auth.service';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { LoaderInterceptorService } from './shared/service/http/loader-interceptor.service';\nimport { SpinnerComponent } from './spinner/spinner.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignUpComponent,\r\n    ForgotPasswordComponent,\r\n    SpinnerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    CarouselModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: HttpIntercepterBasicAuthService,\r\n    multi: true\r\n  }, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: LoaderInterceptorService,\r\n    multi: true\r\n  }\r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant';\r\nimport { ForgotPasswordService } from './forgot-password.service';\r\nimport {CommonService} from '../shared/service/commonService/common.service'\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  validateForm: FormGroup;\r\n  resetForm: FormGroup;\r\n\r\n  isVisible:boolean = true;\r\n  isOtp:boolean = false;\r\n\r\n  @Output() outputResetData: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _forgotPasswordService : ForgotPasswordService, private _commonService : CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.validateForm = this._formBuilder.group({\r\n      contactNo   : ['', [Validators.required, this.mobileNumber]],\r\n      otp: [{value:'', disabled: true}],\r\n      userType: ['']\r\n    });\r\n\r\n    this.resetForm = this._formBuilder.group({\r\n      contactNo   : [{value:'', disabled:true}, [Validators.required, this.mobileNumber]],\r\n      userType : [{value:'', disabled:true}, [Validators.required]],\r\n      password : ['', [Validators.required, this.passwordPattern]]\r\n    });\r\n  }\r\n\r\n  submitForm(value: any){\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n      this._forgotPasswordService.forgetPassword(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n\r\n        let resonseMessage = responseData.message;\r\n\r\n        if(responseData.status == 200) {\r\n          // this.isVisible = true;\r\n          this.validateForm.controls['userType'].setValue(responseData.data.userType, {onlySelf:true});\r\n          this.validateForm.controls['otp'].enable();\r\n          this.isOtp = true;\r\n          console.log(\"this.validateForm ++++++++++++\",this.validateForm)\r\n\r\n\r\n        } else {\r\n          alert(resonseMessage);\r\n        }\r\n\r\n      })\r\n  }\r\n\r\n  verifyOTP(value) {\r\n\r\n    console.log(\"verifyOTP login \",value);\r\n\r\n    this._commonService.verifyOTP(value).subscribe((responseData)=>{\r\n      console.log(\"responseData ------> \",responseData);\r\n      let resonseMessage = responseData.message;\r\n\r\n      if(responseData.status == 200) {\r\n        this.isVisible = false;\r\n        this.resetForm.controls['contactNo'].setValue(this.validateForm.value.contactNo, {onlySelf:true});\r\n        this.resetForm.controls['userType'].setValue(this.validateForm.value.userType == 1 ? \"User\" : \"Astrologer\", {onlySelf:true});\r\n        console.log(\"this.resetForm ----->\",this.resetForm);\r\n\r\n      } else {\r\n        alert(resonseMessage);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  resetUser(value){\r\n    value['contactNo'] = this.resetForm.controls.contactNo.value;\r\n    value['userType'] = this.resetForm.controls.userType.value == \"User\" ? '1' : '2';\r\n\r\n    console.log(\"resetUser is \", value, \"And\", this.resetForm);\r\n    this._forgotPasswordService.resetUser(value).subscribe((responseData)=>{\r\n      console.log(\"responseData ------> \",responseData);\r\n      let resonseMessage = responseData.message;\r\n\r\n      if(responseData.status == 200) {\r\n        this.validateForm.reset();\r\n        this.resetForm.reset();\r\n        this.outputResetData.emit(true);\r\n      } else {\r\n        alert(resonseMessage);\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  mobileNumber= (control: FormControl): {[s: string]: boolean} => {\r\n\r\n    console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n      return {};\r\n    } else {\r\n\r\n      return { mobileErr: true, error: true };\r\n    }\r\n  }\r\n\r\n  passwordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n    console.log(\"passwordPattern ----->\",control.value)\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n      return {};\r\n    }else{\r\n      return { passErr: true, error: true };\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<p>forgot-password works!</p>\r\n\r\n<div class=\"form-wrapper\">\r\n<form *ngIf=\"isVisible\" name=\"validateForm\" [formGroup]=\"validateForm\" novalidate>\r\n\r\n  <mat-form-field class=\"form-field-width\">\r\n    <mat-label>Mobile Number</mat-label>\r\n    <input matInput formControlName=\"contactNo\" minlength=\"10\" maxlength=\"10\">\r\n    <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n    <mat-error *ngIf=\"validateForm.get('contactNo').hasError('required')\">\r\n        Mobile number is required!\r\n    </mat-error>\r\n    <mat-error\r\n        *ngIf=\"!validateForm.get('contactNo').hasError('required') &&\r\n                validateForm.get('contactNo').hasError('mobileErr')\">\r\n        Please enter a valid mobile number!\r\n    </mat-error>\r\n</mat-form-field>\r\n\r\n<mat-form-field class=\"form-field-width mt-2\">\r\n  <mat-label>OTP</mat-label>\r\n  <input matInput formControlName=\"otp\">\r\n  <mat-icon matSuffix class=\"secondary-text\">code</mat-icon>\r\n  <mat-error *ngIf=\"validateForm.get('otp').hasError('required')\">\r\n      OTP is required!\r\n  </mat-error>\r\n\r\n</mat-form-field>\r\n\r\n<button *ngIf=\"!isOtp\" mat-raised-button color=\"primary\" class=\"submit-button mt-3\"\r\n            [disabled]=\"validateForm.invalid\" (click)=\"submitForm(validateForm.value)\">\r\n        Get OTP\r\n    </button>\r\n    <button *ngIf=\"isOtp\" mat-raised-button color=\"primary\" class=\"submit-button mt-3\" (click)=\"verifyOTP(validateForm.value)\">\r\n        Verify OTP\r\n    </button>\r\n</form>\r\n\r\n<form *ngIf=\"!isVisible\" name=\"resetForm\" [formGroup]=\"resetForm\" novalidate>\r\n\r\n      <mat-form-field class=\"form-field-width\">\r\n        <mat-label>Mobile Number</mat-label>\r\n        <input matInput formControlName=\"contactNo\" minlength=\"10\" maxlength=\"10\">\r\n        <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n        <mat-error *ngIf=\"resetForm.get('contactNo').hasError('required')\">\r\n            Mobile number is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!resetForm.get('contactNo').hasError('required') &&\r\n                    resetForm.get('contactNo').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Select Type</mat-label>\r\n      <input matInput formControlName=\"userType\" minlength=\"10\" maxlength=\"10\">\r\n        <mat-error *ngIf=\"resetForm.get('userType').hasError('required')\">\r\n          Login type is required!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>New Password</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\">\r\n        <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n        <mat-error *ngIf=\"resetForm.get('password').hasError('required')\">\r\n          Password is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!resetForm.get('password').hasError('required') &&\r\n                    resetForm.get('password').hasError('passErr')\">\r\n            Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <button *ngIf=\"isOtp\" [disabled]=\"resetForm.invalid\" mat-raised-button color=\"primary\" class=\"submit-button mt-5\" (click)=\"resetUser(resetForm.value)\">\r\n      Reset\r\n    </button>\r\n\r\n</form>\r\n\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ForgotPasswordService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  forgetPassword(data): Observable<any> {\r\n    return this.restService.create(RestUrl.forgetPassword, data)\r\n  }\r\n\r\n  resetUser(data): Observable<any> {\r\n    return this.restService.create(RestUrl.resetUser, data);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant'\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { loginService } from './login.service'\r\nimport {CommonService} from '../shared/service/commonService/common.service'\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  validateForm: FormGroup;\r\n  otpForm: FormGroup;\r\n  isVisible:boolean = false;\r\n  isForgotPassVisible: boolean = false;\r\n\r\n\r\n\r\n  constructor(private router: Router, private _commonService: CommonService, private _formBuilder: FormBuilder, public dialogRef: MatDialogRef<LoginComponent>, private _loginService : loginService\r\n   ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validateForm = this._formBuilder.group({\r\n      contactNo   : ['', [Validators.required, this.mobileNumber]],\r\n      password: ['', [Validators.required, this.passwordPattern]],\r\n      userType: [null, Validators.required]\r\n\r\n    });\r\n\r\n    this.otpForm = this._formBuilder.group({\r\n      otp : ['', Validators.required]\r\n     });\r\n\r\n  }\r\n\r\n  submitForm(value: any){\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n      // this._route.navigate(['/profile']);\r\n\r\n      this._loginService.login(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n\r\n        let resonseMessage = responseData.message;\r\n        let responseBody = responseData.data;\r\n\r\n        if(responseData.status == 200) {\r\n          // this.isVisible = true;\r\n          this._commonService.tostMessage(resonseMessage)\r\n\r\n          if(!responseBody.profileUpdated && typeof responseBody.profileUpdated != 'undefined'){\r\n            this.router.navigate(['astroRegistration']);\r\n            this.dialogRef.close(responseData.data);\r\n          } else {\r\n            this.dialogRef.close(responseData.data);\r\n          }\r\n\r\n        } else {\r\n          this._commonService.tostMessage(resonseMessage);\r\n        }\r\n\r\n        })\r\n  }\r\n\r\n\r\n\r\n\r\n  otpSubmitForm(value: any) {\r\n\r\n    this.dialogRef.close(value);\r\n  }\r\n\r\n  forgotPassword() {\r\n    this.isVisible = true;\r\n  }\r\n\r\n  resetLogin(event){\r\n\r\n    if(event){\r\n      this.isVisible = false;\r\n    } else {\r\n      this.isVisible = true;\r\n    }\r\n  }\r\n// signUpSubmitForm(value: any){\r\n//   alert(\"Registered Successfuly\")\r\n//   console.log(\"value User ++++++++ \",value)\r\n//   if(value) {\r\n//     this.message = \"User registered and verified Successfully\"\r\n//   } else {\r\n//     this.message = \"User not verified, please try to register again\"\r\n//   }\r\n//   // this.dialogRef.close(value);\r\n// }\r\n\r\nmobileNumber= (control: FormControl): {[s: string]: boolean} => {\r\n\r\n  console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n  if(!control.value) {\r\n    return { required: true };\r\n  } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n    return {};\r\n  } else {\r\n\r\n    return { mobileErr: true, error: true };\r\n  }\r\n}\r\n\r\npasswordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n  console.log(\"passwordPattern ----->\",control.value)\r\n\r\n  if(!control.value) {\r\n    return { required: true };\r\n  }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n    return {};\r\n  }else{\r\n    return { passErr: true, error: true };\r\n  }\r\n}\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\">\r\n  <mat-tab label=\"Login\">\r\n    <div class=\"form-wrapper\">\r\n    <form *ngIf=\"!isVisible\" name=\"validateForm\" [formGroup]=\"validateForm\" novalidate (ngSubmit)=\"submitForm(validateForm.value)\">\r\n\r\n      <mat-form-field class=\"form-field-width\">\r\n        <mat-label>Mobile Number</mat-label>\r\n        <input matInput formControlName=\"contactNo\" minlength=\"10\" maxlength=\"10\">\r\n        <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n        <mat-error *ngIf=\"validateForm.get('contactNo').hasError('required')\">\r\n            Mobile number is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!validateForm.get('contactNo').hasError('required') &&\r\n                    validateForm.get('contactNo').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Select Type</mat-label>\r\n      <mat-select name=\"userType\" formControlName=\"userType\">\r\n        <mat-option value=1>User</mat-option>\r\n        <mat-option value=2>Astrolloger</mat-option>\r\n      </mat-select>\r\n        <mat-error>\r\n          Login type is required!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\">\r\n        <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n        <mat-error *ngIf=\"validateForm.get('password').hasError('required')\">\r\n          Password is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!validateForm.get('password').hasError('required') &&\r\n                    validateForm.get('password').hasError('passErr')\">\r\n            Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n\r\n\r\n    <div class=\"remember-forgot-password\" class=\"d-flex mt-5  justify-content-end\">\r\n        <a href=\"javascript:;\" class=\"forgot-password\" (click)=\"forgotPassword()\">\r\n            Forgot Password?\r\n        </a>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"primary\" class=\"submit-button mt-3\" aria-label=\"LOGIN\"\r\n            [disabled]=\"validateForm.invalid\">\r\n        LOGIN\r\n    </button>\r\n    </form>\r\n\r\n    <!-- OTP Form -->\r\n   <div class=\"otp-wrapper\" *ngIf=\"isVisible\">\r\n    <app-forgot-password *ngIf=\"isVisible\" (outputResetData)=\"resetLogin($event)\"> </app-forgot-password>\r\n  </div>\r\n\r\n    <div class=\"separator login\">\r\n      <span class=\"text\">OR</span>\r\n    </div>\r\n\r\n    <div class=\"d-flex  justify-content-center\">\r\n\r\n      <button mat-stroked-button class=\"google\"><i><img src=\"../../assets/images/social/google.png\"></i>\r\n          <b>Log in with Google</b>\r\n      </button>\r\n\r\n      <!-- <button mat-raised-button class=\"facebook\">\r\n          Log in with Facebook\r\n      </button> -->\r\n\r\n    </div>\r\n  </div>\r\n   <!-- loginform ends -->\r\n\r\n\r\n  </mat-tab>\r\n  <mat-tab label=\"Sign Up\">\r\n    <app-sign-up></app-sign-up>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class loginService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  login(data): Observable<any> {\r\n    return this.restService.create(RestUrl.login, data)\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MaterialFileInputModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ObservableDataService {\r\n\r\n  private messageSource = new BehaviorSubject<any>(null);\r\n  private checkOperationSource = new BehaviorSubject<any>(null);\r\n  private astroDetail = new BehaviorSubject<any>(null);\r\n\r\n\r\n  checkUserData = this.messageSource.asObservable();\r\n  checkUserOperationFlag = this.checkOperationSource.asObservable();\r\n  observedAstroDetail = this.astroDetail.asObservable();\r\n\r\n\r\n\r\n  constructor() { }\r\n\r\n  checkUser(message: any) {\r\n    this.messageSource.next(message)\r\n  }\r\n\r\n  checkUserOperation(message: any) {\r\n    this.checkOperationSource.next(message)\r\n  }\r\n\r\n  passAstroDetails(message: any) {\r\n    this.astroDetail.next(message)\r\n  }\r\n\r\n}\r\n","export class RegexConstant {\r\n    public static get PASSWORD_REGEX() : any { return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/; };\r\n    public static get ONLY_NUMBER() : any {return /^[0-9]{10}$/};\r\n    public static get ONLY_DIGITS() : any {return /^[0-9]*$/};\r\n    public static get EMAIL_REGEX() : any { return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/}\r\n    public static get TWINTYFOUR_HOURS_REGEX() : any { return /^([0-1]{1}[0-9]|2[0-3]):[0-5][0-9]$/}\r\n\r\n\r\n  }\r\n","export class RestUrl {\r\n    public static get login(): string { return `/users/login`; }\r\n    public static get signUp(): string { return `/users/register`; }\r\n    public static get verifyOTP(): string { return `/users/verifyotp`; }\r\n    public static get forgetPassword(): string { return `/users/forgetPwd`; }\r\n    public static get resetUser(): string { return '/users/resetPwd'; }\r\n    public static get astroCreateProfile(): string { return '/users/updateprofile'; }\r\n    public static get getAstroListingApi(): string { return '/users/getastrologerslist'; }\r\n\r\n    public static get getAstro(): string { return '/users/listOfAstrologers'; }\r\n    public static get makeCall(): string { return '/users/call'; }\r\n\r\n\r\n\r\n}\r\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RestService } from '../restApi/rest.service';\n// import { RestUrl } from '../../constant/rest-url.constants';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthenticationService {\n\n  constructor(private http: HttpClient, private restService: RestService) { }\n\n//   login(data) {\n//     return this.restService.create(RestUrl.login, data);\n//  }\n\n\n\n  getAuthenticatedToken() {\n    let token = JSON.parse(JSON.stringify(sessionStorage.getItem('token')));\n    console.log(\"get token console \",token);\n      return token\n  }\n\n  // getUserRole() {\n  //   if (this.getAuthenticatedUser()) {\n  //     return sessionStorage.getItem('role');\n  //   }\n  // }\n\n  // isUserLoggedIn() {\n  //   const user = sessionStorage.getItem('username');\n  //   return !(user === null);\n  // }\n\n  // logout() {\n  //   return this.restService.getData(RestUrl.logout, false);\n  // }\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n} from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../restApi/rest.service';\r\nimport { RestUrl } from '../../constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CommonService {\r\n\r\n  horizontalPosition: MatSnackBarHorizontalPosition;\r\n  verticalPosition: MatSnackBarVerticalPosition;\r\n\r\n  constructor(private _snackBar: MatSnackBar,private restService: RestService) {}\r\n\r\n  tostMessage(message) {\r\n    this._snackBar.open(message,'close', {\r\n      duration: 10 * 1000,\r\n      horizontalPosition : \"center\",\r\n      verticalPosition : \"top\"\r\n  })\r\n  }\r\n\r\n  // getOTP(data){\r\n  //   console.log(\"data in sign up\", data)\r\n  //   return this.restService.create(RestUrl.verifyOTP, data)\r\n  // }\r\n\r\n  verifyOTP(data): Observable<any> {\r\n    console.log(\"data in sign up\", data)\r\n    return this.restService.create(RestUrl.verifyOTP, data)\r\n  }\r\n\r\n  makeCall(data): Observable<any> {\r\n    return this.restService.create(RestUrl.makeCall, data)\r\n  }\r\n\r\n\r\n}\r\n","import {\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpEvent,\r\n    HttpErrorResponse\r\n  } from \"@angular/common/http\";\r\n  import { Injectable } from \"@angular/core\";\r\n  import { AuthenticationService } from \"../authentication/authentication.service\";\r\n  import { tap, retry, catchError } from 'rxjs/operators';\r\n  import { Observable, throwError } from 'rxjs';\r\n  import { CommonService } from '../commonService/common.service';\r\n\r\n\r\n  @Injectable({\r\n    providedIn: \"root\"\r\n  })\r\n  export class HttpIntercepterBasicAuthService implements HttpInterceptor {\r\n\r\n    constructor(private _commonService: CommonService, private basicAuthenticationService: AuthenticationService) {\r\n\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler) : Observable<HttpEvent<any>>  {\r\n\r\n      let basicAuthHeaderString = this.basicAuthenticationService.getAuthenticatedToken();\r\n      console.log(\"basicAuthHeaderString +++++++++++++ \",basicAuthHeaderString)\r\n        // request = request.clone({\r\n        //   setHeaders: {\r\n        //     'content-type': 'application/json'\r\n        //   }\r\n        // });\r\n\r\n      if (basicAuthHeaderString) {\r\n        console.log(\"if condition\");\r\n        request = request.clone({\r\n          setHeaders: {\r\n            'Authorization': basicAuthHeaderString,\r\n            // 'token': basicAuthHeaderString,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n      } else {\r\n        console.log(\"else condition\");\r\n        request = request.clone({\r\n          setHeaders: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n      }\r\n\r\n      return next.handle(request).pipe(\r\n        tap(\r\n          event => this.handleResponse(request, event),\r\n          error => this.handleError(request, error)\r\n        )\r\n      );\r\n    }\r\n\r\n    handleResponse(req: HttpRequest<any>, event) {\r\n      if (event instanceof HttpResponse) {\r\n           if (event.headers.get('Authorization')) {\r\n                sessionStorage.setItem('token', event.headers.get('Authorization'));\r\n           }\r\n      }\r\n    }\r\n\r\n    handleError(req: HttpRequest<any>, error) {\r\n      let errorMessage = '';\r\n\r\n      if (error.error instanceof ErrorEvent) {\r\n\r\n        // client-side error\r\n\r\n        errorMessage = `Error: ${error.error.message}`;\r\n\r\n      } else {\r\n\r\n        // server-side error\r\n        // this._commonService.tostMessage(errorMessage)\r\n        errorMessage = `Error Code: ${error.error.status}\\nMessage: ${error.error.message}`;\r\n\r\n      }\r\n\r\n      this._commonService.tostMessage(errorMessage)\r\n\r\n\r\n      return throwError(errorMessage);\r\n\r\n      //   if (event instanceof HttpErrorResponse) {\r\n      //       if(event.headers.get('Authorization')){\r\n      //       //  console.log('handleError',event.headers.get('Authorization'));\r\n      //           sessionStorage.setItem('token', event.headers.get('Authorization'));\r\n      //       }\r\n      // }\r\n    }\r\n  }\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable, pipe } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { LoaderService } from '../loader/loader.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderInterceptorService {\r\n\r\n     constructor(private loaderService: LoaderService) { }\r\n\r\n      intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        //  console.log('HttpRequestHttpRequest');\r\n\r\n        this.showLoader();\r\n\r\n        return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\r\n          if (event instanceof HttpResponse) {\r\n            this.onEnd();\r\n          }\r\n        },\r\n          (err: any) => {\r\n            this.onEnd();\r\n        }));\r\n      }\r\n\r\n      private onEnd(): void {\r\n        this.hideLoader();\r\n      }\r\n\r\n      private showLoader(): void {\r\n        this.loaderService.show();\r\n      }\r\n\r\n      private hideLoader(): void {\r\n        this.loaderService.hide();\r\n      }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n  private loaderSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  get loaderState(){\r\n    return this.loaderSubject.asObservable();\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  show() {\r\n\r\n    this.loaderSubject.next( true );\r\n    // console.log(\"this.loaderSubject show \",this.loaderSubject.subscribe(res=>{\r\n    //   console.log(\"ressssss\",res);\r\n    // }))\r\n  }\r\n\r\n  hide() {\r\n\r\n    this.loaderSubject.next( false );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\n// import { callBackendApi } from '../../constant/rest-url.constants';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n  private messageSource = new BehaviorSubject(null);\r\n  checkUserData = this.messageSource.asObservable();\r\n\r\n\r\n\r\n  constructor(private http: HttpClient ) { }\r\n\r\n  checkUser(message: string) {\r\n    this.messageSource.next(message)\r\n  }\r\n\r\n\r\n  public create = (route: string, body) => {\r\n    console.log(\"route\",route,\"body\",body);\r\n    return this.http.post(environment.urlAddress + route, body);\r\n  };\r\n\r\n  public get = (route: string) => {\r\n    console.log(\"**GET**\", \"route\",route);\r\n    return this.http.get(environment.urlAddress + route);\r\n  };\r\n\r\n  // public delete = (route: string) => {\r\n  //   return this.http.delete(\r\n  //     this.createCompleteRoute(route, environment.urlAddress)\r\n  //   );\r\n  // };\r\n\r\n  // private createCompleteRoute = (route: string, envAddress: string) => {\r\n  //   if (callBackendApi) {\r\n  //     return `${envAddress + route}`;\r\n  //   } else {\r\n  //     return `${route}`;\r\n  //   }\r\n  // };\r\n}\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant';\r\nimport { signUpService } from './sign-up.service';\r\nimport {CommonService} from '../shared/service/commonService/common.service'\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  signUpValidateForm: FormGroup;\r\n  otpForm: FormGroup;\r\n  isVisible:boolean = false;\r\n  loginResponseData;\r\n  message;\r\n\r\n  @Output()\r\n  outputSignUpData: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _signUpService : signUpService, private _commonService : CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.signUpValidateForm = this._formBuilder.group({\r\n      name           : ['', [Validators.required]],\r\n      email          : ['', [Validators.required, Validators.email]],\r\n      contactNo          : ['', [Validators.required, this.mobileNumber]],\r\n      password       : ['', [Validators.required, this.passwordPattern]],\r\n      userType          : ['', [Validators.required]]\r\n    });\r\n\r\n    this.otpForm = this._formBuilder.group({\r\n      otp : ['',[Validators.required]]\r\n    });\r\n\r\n  }\r\n\r\n\r\n  submitForm(value: any){\r\n    for (const key in this.signUpValidateForm.controls) {\r\n        this.signUpValidateForm.controls[key].markAsDirty();\r\n        this.signUpValidateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n\r\n      this._signUpService.signUp(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n        // responseData.status = 200;\r\n        let resonseMessage = responseData.message;\r\n\r\n        if(responseData.status == 200) {\r\n          this.isVisible = true;\r\n        } else {\r\n          this._commonService.tostMessage(resonseMessage)\r\n        }\r\n\r\n        })\r\n  }\r\n\r\n  otpSubmitForm(value: any) {\r\n    console.log(\"submit Form \",value);\r\n\r\n    let requestData = {\r\n      contactNo : this.signUpValidateForm.value.contactNo,\r\n      otp : value.otp,\r\n      userType : this.signUpValidateForm.value.userType\r\n    }\r\n\r\n    this._commonService.verifyOTP(requestData).subscribe((responseData) => {\r\n      console.log(\"responseData login \",responseData);\r\n      responseData.status = 200;\r\n\r\n      let resonseMessage = responseData.message;\r\n\r\n      if(responseData.status == 200) {\r\n        this._commonService.tostMessage(resonseMessage)\r\n        this.isVisible = false;\r\n        this.message = \"User registered and verified Successfully, Please Login!\"\r\n        this.signUpValidateForm.reset();\r\n        // this.outputSignUpData.emit(true);\r\n      } else {\r\n        this._commonService.tostMessage(resonseMessage)\r\n        this.message = \"OTP invalid, please resend your OTP!\"\r\n        this.signUpValidateForm.reset();\r\n        // this.outputSignUpData.emit(false);\r\n      }\r\n\r\n    });\r\n\r\n\r\n    // this.dialogRef.close(value);\r\n  }\r\n\r\n  passwordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n    console.log(\"passwordPattern ----->\",control.value)\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n      return {};\r\n    }else{\r\n      return { passErr: true, error: true };\r\n    }\r\n  }\r\n\r\n  mobileNumber = (control: FormControl): {[s: string]: boolean} => {\r\n\r\n    console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n      return {};\r\n    } else {\r\n\r\n      return { mobileErr: true, error: true };\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-wrapper\">\r\n<h2 >{{message}}</h2>\r\n\r\n<form name=\"validateForm\" *ngIf=\"!isVisible\" [formGroup]=\"signUpValidateForm\" novalidate (ngSubmit)=\"submitForm(signUpValidateForm.value)\">\r\n\r\n  <mat-form-field class=\"form-field-width\">\r\n      <mat-label>Full Name</mat-label>\r\n      <input matInput formControlName=\"name\">\r\n      <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n      <mat-error>\r\n          Name is required\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width mt-2\">\r\n    <mat-label>Select Type</mat-label>\r\n    <mat-select name=\"userType\" formControlName=\"userType\">\r\n      <mat-option value=1 >User</mat-option>\r\n      <mat-option value=2 >Astrolloger</mat-option>\r\n    </mat-select>\r\n    <mat-error *ngIf=\"signUpValidateForm.get('userType').hasError('required')\">\r\n      Login type is required!\r\n  </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n      <mat-label>Mobile Number</mat-label>\r\n      <input matInput formControlName=\"contactNo\">\r\n      <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('contactNo').hasError('required')\">\r\n          Mobile number is required!\r\n      </mat-error>\r\n      <mat-error\r\n          *ngIf=\"!signUpValidateForm.get('contactNo').hasError('required') &&\r\n                  signUpValidateForm.get('contactNo').hasError('mobileErr')\">\r\n          Please enter a valid mobile number!\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput formControlName=\"email\">\r\n      <mat-icon matSuffix class=\"secondary-text\">mail</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('email').hasError('required')\">\r\n          Email is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('email').hasError('email')\">\r\n          Please enter a valid email address\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Password</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"password\">\r\n      <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('password').hasError('required')\">\r\n        Password is required!\r\n      </mat-error>\r\n      <mat-error\r\n            *ngIf=\"!signUpValidateForm.get('password').hasError('required') &&\r\n                    signUpValidateForm.get('password').hasError('passErr')\">\r\n            *Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n\r\n\r\n  <!-- <mat-form-field class=\"form-field-width\">\r\n      <mat-label>Password (Confirm)</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"passwordConfirm\">\r\n      <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('passwordConfirm').hasError('required')\">\r\n          Password confirmation is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"!signUpValidateForm.get('passwordConfirm').hasError('required') &&\r\n                         signUpValidateForm.get('passwordConfirm').hasError('passwordsNotMatching')\">\r\n          Passwords must match\r\n      </mat-error>\r\n  </mat-form-field> -->\r\n\r\n  <!-- <div class=\"terms\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <mat-checkbox name=\"terms\" aria-label=\"Accept\" required>\r\n          <span>Accept</span>\r\n      </mat-checkbox>\r\n      <a href=\"#\">terms and conditions</a>\r\n  </div> -->\r\n\r\n  <button mat-raised-button color=\"primary\" class=\"submit-button mt-5\" aria-label=\"CREATE AN ACCOUNT\"\r\n          [disabled]=\"signUpValidateForm.invalid\">\r\n      Sign Up\r\n  </button>\r\n\r\n</form>\r\n\r\n <!-- OTP Form -->\r\n <div class=\"otp-wrapper\" *ngIf=\"isVisible\">\r\n  <form name=\"otpForm\" [formGroup]=\"otpForm\" novalidate (ngSubmit)=\"otpSubmitForm(otpForm.value)\">\r\n\r\n      <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>OTP</mat-label>\r\n        <input matInput formControlName=\"otp\">\r\n        <mat-icon matSuffix class=\"secondary-text\">code</mat-icon>\r\n        <mat-error *ngIf=\"otpForm.get('otp').hasError('required')\">\r\n            OTP is required!\r\n        </mat-error>\r\n        <!-- <mat-error\r\n            *ngIf=\"!otpForm.get('mobile').hasError('required') &&\r\n                    otpForm.get('mobile').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <button mat-raised-button color=\"primary\" class=\"submit-button mt-3\" aria-label=\"LOGIN\"\r\n        [disabled]=\"otpForm.invalid\">\r\n            Submit\r\n      </button>\r\n\r\n  </form>\r\n</div>\r\n\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class signUpService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  signUp(data): Observable<any> {\r\n    console.log(\"data in sign up\", data)\r\n    return this.restService.create(RestUrl.signUp, data)\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { Observable } from 'rxjs';\nimport { LoaderService } from '../shared/service/loader/loader.service';\n\n\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n  isSpinning$: Observable<boolean>;\n  show : boolean;\n  constructor(private spinner: NgxSpinnerService,   private loaderService: LoaderService) { }\n\n  ngOnInit(): void {\n\n    // console.log(\"oninit spinner \");\n\n    // this.show = true;\n    // this.spinner.show();\n\n    this.isSpinning$ = this.loaderService.loaderState;\n\n    this.isSpinning$.subscribe(res=> {\n      console.log(\"res of loader \",res);\n      if(res){\n        this.show = true;\n        this.spinner.show();\n      } else {\n        this.show = false;\n        this.spinner.hide();\n      }\n    });\n\n\n  }\n\n}\n","<div class=\"center\" *ngIf=\"show\">\n  <ngx-spinner> </ngx-spinner>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  urlAddress: 'http://ec2-3-21-75-140.us-east-2.compute.amazonaws.com:3000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}