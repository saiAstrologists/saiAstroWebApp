{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/canActivateAuth.gaurd.ts","webpack:///src/app/chat/chat.component.ts","webpack:///src/app/chat/chat.component.html","webpack:///src/app/confirmation/confirmation.component.ts","webpack:///src/app/confirmation/confirmation.component.html","webpack:///src/app/forgot-password/forgot-password.component.ts","webpack:///src/app/forgot-password/forgot-password.component.html","webpack:///src/app/forgot-password/forgot-password.service.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.service.ts","webpack:///src/app/material-module.ts","webpack:///src/app/observables/behaviourSubject.service.ts","webpack:///src/app/shared/constant/regex-constant.ts","webpack:///src/app/shared/constant/rest-url.constants.ts","webpack:///src/app/shared/service/authentication/authentication.service.ts","webpack:///src/app/shared/service/commonService/common.service.ts","webpack:///src/app/shared/service/firebase/firebase.service.ts","webpack:///src/app/shared/service/http/http-intercepter-basic-auth.service.ts","webpack:///src/app/shared/service/http/loader-interceptor.service.ts","webpack:///src/app/shared/service/loader/loader.service.ts","webpack:///src/app/shared/service/payment/payment.service.ts","webpack:///src/app/shared/service/restApi/profileUpdate.service.ts","webpack:///src/app/shared/service/restApi/rest.service.ts","webpack:///src/app/sign-up/sign-up.component.ts","webpack:///src/app/sign-up/sign-up.component.html","webpack:///src/app/sign-up/sign-up.service.ts","webpack:///src/app/spinner/spinner.component.ts","webpack:///src/app/spinner/spinner.component.html","webpack:///src/app/wallet/wallet.component.ts","webpack:///src/app/wallet/wallet.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","loadChildren","m","PagesModule","DashboardModuleModule","AppRoutingModule","forRoot","useHash","imports","AppComponent","_commonService","authService","dialog","_route","_observableDataService","title","chatList","userList","isUserLogin","reason","messaging","typing","checkUser","JSON","parse","sessionStorage","getItem","isAstrologerLoggedIn$","isAstrologerLoggedIn","isLoggedIn$","isLoggedIn","console","log","home","subscribe","res","AdminLoginHideFlag","getIPAddress","navigate","Ip","ip","sidenav","close","dialogRef","open","width","disableClose","afterClosed","result","undefined","userData","setItem","token","stringify","isAdminUser","checkAccess","checkUserOperation","logOut","auth","createUserWithEmailAndPassword","response","user","uid","imageURL","status","username","database","ref","child","set","signInWithEmailAndPassword","senderId","on","snapshot","snapvalue","val","Object","values","forEach","list","push","sender","receiver","receiverId","convId","once","snapShot","reqObj","isseen","message","value","key","sendVal","orderByKey","limitToLast","wallet","selector","templateUrl","styleUrls","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initializeApp","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthService","loggedIn","AstrologerLoggedIn","userType","next","location","reload","clear","tostMessage","asObservable","AuthGuard","route","state","date","Date","userValue","userFlag","checkSession","ChatComponent","firebaseService","observableService","paymentService","chatName","allChatList","viewChatScreen","viewChatOption","chatForm","required","getFirebaseUserData","getMessage","messageRes","setTimeout","element","document","getElementById","scrollTop","scrollHeight","chatListDetail","getChatList","getAllMessages","sendMessages","reset","chatInfo","name","getAllMessage","removeItem","makeOrderid","orderPlace","options","amount","currency","description","image","order_id","modal","escape","notes","theme","color","handler","error","verifySignature","ondismiss","rzp","window","params","walletInfo","orderDetail","razorpay_signature","razorpay_order_id","razorpay_payment_id","signatureVerify","updateWallet","orderInfo","userId","orderId","updateWalletInfo","characters","charactersLength","length","i","charAt","Math","floor","random","ConfirmationComponent","modalData","isValid","minuteLisiting","walletBalance","listInfo","index","selectedIndex","totalValue","parseInt","connect","ForgotPasswordComponent","_formBuilder","_forgotPasswordService","isVisible","isOtp","outputResetData","mobileNumber","control","match","ONLY_NUMBER","mobileErr","passwordPattern","PASSWORD_REGEX","passErr","validateForm","group","contactNo","otp","disabled","resetForm","password","controls","markAsDirty","updateValueAndValidity","forgetPassword","responseData","resonseMessage","setValue","data","onlySelf","enable","alert","verifyOTP","resetUser","emit","ForgotPasswordService","restService","create","providedIn","LoginComponent","router","_loginService","isForgotPassVisible","otpForm","login","responseBody","firebaseLoginReq","email","loginFirebase","firebaseResponse","firebaseUserId","requestObj","profileUpdated","event","loginService","MaterialModule","ObservableDataService","messageSource","checkOperationSource","astroDetail","checkUserData","checkUserOperationFlag","observedAstroDetail","RegexConstant","RestUrl","AuthenticationService","http","CommonService","_snackBar","ipAddressService","duration","horizontalPosition","verticalPosition","makeCall","FirebaseService","allUserList","getAllUserList","messageListener","promise","reject","signInFirebase","firebaseData","messageData","allConversationList","includes","lastConversationDetail","find","createChatListObj","getShortName","toString","namelist","split","HttpIntercepterBasicAuthService","basicAuthenticationService","request","basicAuthHeaderString","getAuthenticatedToken","clone","setHeaders","handle","pipe","handleResponse","handleError","headers","get","errorMessage","ErrorEvent","LoaderInterceptorService","loaderService","showLoader","onEnd","err","hideLoader","show","hide","LoaderService","loaderSubject","PaymentService","createPayment","placeOrder","getPayment","walletDetail","patch","ProfileUpdateService","_authenticationService","createProfile","body","post","urlAddress","createFormData","RestService","paymentUrlAddress","headerParam","SignUpComponent","_signUpService","outputSignUpData","signUpValidateForm","countryCode","signUp","requestData","signUpService","SpinnerComponent","spinner","isSpinning$","loaderState","WalletComponent","viewWallet","rechargeList","walletForm","walletAmount","symbol","getWalletInfo","formData","valid","patchValue","selectedRechargeAmount","rechargeAmount","addWallet","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'home' },\r\n  { path: 'chat', component: ChatComponent },\r\n  { path: 'home' , loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)},\r\n  { path: 'dashboard' , loadChildren: () => import('./Dashboard/dashboard-module.module').then(m => m.DashboardModuleModule)},\r\n  { path: 'wallet' , component: WalletComponent}\r\n\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, ViewChild, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport {MatSidenav} from '@angular/material/sidenav';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { LoginComponent } from './login/login.component'\r\nimport {CommonService} from './shared/service/commonService/common.service'\r\nimport {Router} from '@angular/router'\r\nimport { ObservableDataService } from './observables/behaviourSubject.service';\r\nimport { ResourceLoader } from '@angular/compiler';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\n\r\nexport class AppComponent implements OnInit {\r\n  title = 'saiAstroWorld';\r\n  chatList: any = [];\r\n  userList: any  = [];\r\n  messaging: FormGroup;\r\n  receiverId: any;\r\n  senderId: any;\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n  isUserLogin : boolean = false;\r\n  checkUser;\r\n  reason = '';\r\n  Ip;\r\n  isAstrologerLoggedIn$: Observable<boolean>;\r\n  isLoggedIn$: Observable<boolean>;\r\n  AdminLoginHideFlag\r\n  constructor(private _commonService: CommonService, private authService: AuthService, public dialog: MatDialog, private _route : Router, private _observableDataService : ObservableDataService){\r\n    this.messaging = new FormGroup({\r\n      typing: new FormControl('')\r\n    })\r\n\r\n\r\n\r\n    // this.eventListener();\r\n\r\n    // if(sender && receiver){\r\n    //   firebase.database().ref().child('Chats').child(convId).limitToLast(1).on('child_added', (snapShot) => {\r\n    //     console.log(snapShot.val(), 'added');\r\n    //     this.chatList.push(snapShot.val());\r\n    //   })\r\n    // }\r\n\r\n    // child added for first time\r\n    // firebase.database().ref().child('Chats').limitToLast(1).on('child_added', snapShot => {\r\n    //   let sender = this.senderId;\r\n    //   let receiver = this.receiverId;\r\n    //   let convId ;\r\n    //   if(sender >  receiver) {\r\n    //     convId = receiver + '-' + sender;\r\n    //   }else {\r\n    //     convId = sender + '-' + receiver;\r\n    //   }\r\n    //   if(snapShot.key == convId){\r\n    //     let value = Object.values(snapShot.val())[Object.values(snapShot.val()).length - 1];\r\n    //     this.chatList.push(value);\r\n    //   }\r\n    // })\r\n\r\n    // firebase.database().ref().child('Chats').limitToLast(1).on('child_changed', snapShot => {\r\n    //   console.log(snapShot.val(), 'valkjkukjk');\r\n    //   if(snapShot.key){\r\n    //     let value = Object.values(snapShot.val())[Object.values(snapShot.val()).length - 1];\r\n    //     this.chatList.push(value);\r\n    //   }\r\n    // })\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n      this.checkUser = JSON.parse(sessionStorage.getItem('userData'));\r\n      this.isAstrologerLoggedIn$ = this.authService.isAstrologerLoggedIn;\r\n      this.isLoggedIn$ = this.authService.isLoggedIn;\r\n\r\n      console.log(\"checkUser ++\",this.checkUser);\r\n      if(this.checkUser != null) {\r\n        this.isUserLogin = true;\r\n      } else {\r\n        this.isUserLogin = false;\r\n        this.home()\r\n      }\r\n      console.log(\"this.isUserLogin ++++ \",this.isUserLogin);\r\n\r\n      this.isAstrologerLoggedIn$.subscribe(res=>{\r\n        if(res) {\r\n          this.AdminLoginHideFlag = true;\r\n        } else {\r\n          this.AdminLoginHideFlag = false;\r\n        }\r\n      });\r\n\r\n      this.getIPAddress();\r\n  }\r\n\r\n  dashboard(){\r\n    this._route.navigate(['dashboard']);\r\n  }\r\n\r\n  home(){\r\n    this._route.navigate(['home']);\r\n  }\r\n\r\n  wallet(){\r\n    this._route.navigate(['wallet']);\r\n  }\r\n\r\n  getIPAddress() {\r\n    this._commonService.getIPAddress().subscribe(res=>{\r\n      this.Ip = res.ip;\r\n      console.log(\"Res is ===>>> \",this.Ip);\r\n    });\r\n  }\r\n\r\n  close(reason: string) {\r\n    this.reason = reason;\r\n    this.sidenav.close();\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(LoginComponent, {\r\n      width: '500px',\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed',result);\r\n      if(typeof result != undefined && result != null && result != '') {\r\n        this.isUserLogin = true;\r\n        this.checkUser = result.userData;\r\n        sessionStorage.setItem('token',result.token);\r\n        sessionStorage.setItem('userData',JSON.stringify(result.userData));\r\n        let isAdminUser  = this.authService.checkAccess(this.checkUser);\r\n       console.log(\"isAdminUser \",isAdminUser);\r\n       if(!isAdminUser) {\r\n        this._route.navigate(['dashboard']);\r\n       }else {\r\n       }\r\n        // this._observableDataService.checkUser(result.userData);\r\n      }\r\n    });\r\n  }\r\n\r\n  viewReport(){\r\n    console.log(\"this.checkUser \", this.checkUser);\r\n\r\n    // if(this.checkUser != null) {\r\n      console.log(\"view report\");\r\n      this._observableDataService.checkUserOperation('Report');\r\n      this._route.navigate(['home/astrologer']);\r\n    // } else {\r\n    // this._commonService.tostMessage(\"Please Login to ask report to Astrologers!\")\r\n    // }\r\n  }\r\n\r\n  viewQA(){\r\n    // if(this.checkUser != null) {\r\n      console.log(\"QA report\");\r\n      this._observableDataService.checkUserOperation('Q&A');\r\n      this._route.navigate(['home/astrologer']);\r\n    // } else {\r\n    // this._commonService.tostMessage(\"Please Login to ask question to Astrologers!\")\r\n    // }\r\n  }\r\n\r\n  talkToAstro(){\r\n    // if(this.checkUser != null) {\r\n      console.log(\"QA report\");\r\n      this._observableDataService.checkUserOperation('Call');\r\n      this._route.navigate(['home/astrologer']);\r\n    // } else {\r\n    // this._commonService.tostMessage(\"Please Login to talk with Astrologers!\")\r\n    // }\r\n  }\r\n\r\n  chatToAstro(){\r\n    // if(this.checkUser != null) {\r\n      console.log(\"QA report\");\r\n      this._observableDataService.checkUserOperation('Chat');\r\n      this._route.navigate(['home/astrologer']);\r\n    // } else {\r\n    // this._commonService.tostMessage(\"Please Login to chat with Astrologers!\")\r\n    // }\r\n  }\r\n\r\n\r\n  logOut(){\r\n    this.authService.logOut();\r\n  }\r\n\r\n\r\n  // firebase remove afterwards\r\n  signupFirebase(){\r\n    firebase.auth().createUserWithEmailAndPassword('amit.wohlig@gmail.com', 'Test@123').then((response)=> {\r\n      if(response){\r\n        console.log(response, 'signup response');\r\n\r\n        let userData = {\r\n          id: response.user.uid,\r\n          imageURL: '',\r\n          status: '',\r\n          username: 'Amit Verma'\r\n        }\r\n\r\n        console.log(response.user.uid, 'local id');\r\n        firebase.database().ref().child('Users').child(response.user.uid).set(userData);\r\n      }\r\n    })\r\n  }\r\n\r\n  signupWithOther(){\r\n    firebase.auth().createUserWithEmailAndPassword('amitverma@gmail.com', 'Test@123').then((response)=> {\r\n      if(response){\r\n        console.log(response, 'signup response');\r\n\r\n        let userData = {\r\n          id: response.user.uid,\r\n          imageURL: '',\r\n          status: '',\r\n          username: 'Amit Verma'\r\n        }\r\n\r\n        console.log(response.user.uid, 'local id');\r\n        firebase.database().ref().child('Users').child(response.user.uid).set(userData);\r\n      }\r\n    })\r\n  }\r\n  loginFirebase(){\r\n    firebase.auth().signInWithEmailAndPassword('amit.wohlig@gmail.com', 'Test@123').then((response) => {\r\n      console.log(response, 'login response');\r\n      this.senderId = response.user.uid;\r\n    })\r\n  }\r\n\r\n  loginOtherFirebase(){\r\n    firebase.auth().signInWithEmailAndPassword('amitverma@gmail.com', 'Test@123').then((response) => {\r\n      console.log(response, 'login response');\r\n      this.senderId = response.user.uid;\r\n    })\r\n  }\r\n\r\n  // sendMessage(){\r\n\r\n  // }\r\n\r\n  getUserList(){\r\n    firebase.database().ref('Users').on('value', snapshot => {\r\n      let snapvalue = snapshot.val();\r\n      if(snapvalue){\r\n        Object.values(snapvalue).forEach(list => {\r\n          if(list){\r\n            this.userList.push(list);\r\n          }\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  getAllMessage(){\r\n    console.log(firebase);\r\n    // firebase.database().ref('Chats').orderByChild('sender').equalTo(\"mpksRVLonrQVNPWZZWJ0z2KsLWl2\").on('value', (snapShot)=> {\r\n    //   let snapVal = snapShot.val();\r\n    //   if(snapVal){\r\n    //       Object.values(snapVal).forEach(list => {\r\n    //         if(list['receiver'] == 'W6qE30aqEWb6OzHcWGoxg52U0F53'){\r\n    //           this.chatList.push(list);\r\n    //         }\r\n    //     });\r\n    //   }\r\n\r\n    // });\r\n\r\n    let sender = this.senderId || 'W6qE30aqEWb6OzHcWGoxg52U0F53';\r\n    let receiver = this.receiverId || 'mpksRVLonrQVNPWZZWJ0z2KsLWl2';\r\n    let convId ;\r\n    if(sender >  receiver) {\r\n      convId = receiver + '-' + sender;\r\n    }else {\r\n      convId = sender + '-' + receiver;\r\n    }\r\n    firebase.database().ref('Chats').child(convId).once('value', (snapShot) => {\r\n      console.log(snapShot.val(), 'value');\r\n      Object.values(snapShot.val()).forEach(list => this.chatList.push(list));\r\n    })\r\n  }\r\n\r\n  sendMessage(){\r\n    let sender = this.senderId || 'W6qE30aqEWb6OzHcWGoxg52U0F53';\r\n    let receiver = this.receiverId || 'mpksRVLonrQVNPWZZWJ0z2KsLWl2';\r\n    let convId ;\r\n    if(sender >  receiver) {\r\n      convId = receiver + '-' + sender;\r\n    }else {\r\n      convId = sender + '-' + receiver;\r\n    }\r\n    let reqObj = {\r\n      sender: 'W6qE30aqEWb6OzHcWGoxg52U0F53',\r\n      receiver: 'mpksRVLonrQVNPWZZWJ0z2KsLWl2',\r\n      isseen: false,\r\n      message: this.messaging.value.typing,\r\n    }\r\n    let key = firebase.database().ref().child('Chats').push().key;\r\n    firebase.database().ref().child('Chats').child(convId).child(key).set(reqObj).then(sendVal => {\r\n      console.log(sendVal, 'send value');\r\n    });\r\n\r\n    // event listener\r\n  }\r\n\r\n\r\n  setReceiverId(list){\r\n    this.receiverId = list.id\r\n  }\r\n\r\n\r\n  eventListener() {\r\n    let sender = this.senderId;\r\n    let receiver = this.receiverId;\r\n    let convId ;\r\n    if(sender >  receiver) {\r\n      convId = receiver + '-' + sender;\r\n    }else {\r\n      convId = sender + '-' + receiver;\r\n    }\r\n    if(sender && receiver){\r\n      firebase.database().ref().child('Chats').child(convId).orderByKey().limitToLast(1).on('child_added', (snapShot) => {\r\n        console.log(snapShot.val(), 'added');\r\n        this.chatList.push(snapShot.val());\r\n      })\r\n    }\r\n\r\n\r\n    firebase.database().ref().child('Chats').on('child_added', snapShot => {\r\n      console.log(snapShot.val(), 'valkjkukjk');\r\n    })\r\n  }\r\n}\r\n","<mat-sidenav-container\r\n    class=\"sidenav-container\" (backdropClick)=\"close('backdrop')\">\r\n\r\n  <mat-sidenav class=\"drawer-container\" #sidenav [fixedInViewport]=\"true\" (keydown.escape)=\"close('escape')\" disableClose>\r\n    <!-- <button mat-button  (click)=\"close('toggle button')\">X</button> -->\r\n      <div class=\"side-bar-logo\"><img class=\"mb-2\" src=\"../assets/images/logo/PNG/font120px.png\"></div>\r\n      <div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\r\n        <a class=\"list-group-item list-group-item-action active\" id=\"astro-talk\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"talkToAstro()\" *ngIf=\"AdminLoginHideFlag\" role=\"tab\" aria-controls=\"astro-talk\">Talk to Astrologer</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-chat\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"chatToAstro()\" *ngIf=\"AdminLoginHideFlag\" role=\"tab\" aria-controls=\"astro-chat\">Chat with Astrologer</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-report\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"viewReport()\" *ngIf=\"AdminLoginHideFlag\" role=\"tab\" aria-controls=\"astro-report\">Get Reports</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-question\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"viewQA()\" *ngIf=\"AdminLoginHideFlag\" role=\"tab\" aria-controls=\"astro-question\">Ask Question</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"horoscope\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"horoscope\">Horoscope 2020</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"kundli\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"kundli\">Kundli</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-mall\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"astro-mall\">AstroMall</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"blog\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"blog\">Blog</a>\r\n      </div>\r\n\r\n      <!-- <li><a>Talk to Astrologer</a></li>\r\n      <li><a>Horoscope 2020</a></li>\r\n      <li><a>Kundli</a></li>\r\n      <li><a>AstroMall</a></li>\r\n      <li><a>Blog</a></li> -->\r\n\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n\r\n    <mat-toolbar class=\"toolbar-wrapper\">\r\n\r\n      <mat-toolbar-row>\r\n\r\n        <button mat-button class=\"menu-button\" (click)=\"sidenav.open()\"><mat-icon aria-hidden=\"false\">view_headline</mat-icon></button>\r\n        <span class=\"hm-logo\"><a href=\"javascript:;\"><img src=\"../assets/images/logo/PNG/font120px.png\"></a></span>\r\n        <span class=\"example-spacer\"></span>\r\n\r\n        <div class=\"quick-link\" *ngIf=\"isAstrologerLoggedIn$ | async as isAstrologerLoggedIn\">\r\n\r\n        <span class=\"example-spacer\"></span>\r\n        <span class=\"highlight-menu\"><a href=\"javascript:;\" (click)=\"talkToAstro()\">Talk to Astrologer</a></span>\r\n        <span class=\"highlight-menu\"><a href=\"javascript:;\" (click)=\"chatToAstro()\">Chat with Astrologer</a></span>\r\n        <span class=\"highlight-menu\"><a href=\"javascript:;\" (click)=\"viewReport()\">Get Reports</a></span>\r\n        <span class=\"highlight-menu\"><a href=\"javascript:;\" (click)=\"viewQA()\">Ask Question</a></span>\r\n        <span><a href=\"javascript:;\">Horoscope 2020</a> </span>\r\n\r\n\r\n       </div>\r\n        <!-- <button mat-button><mat-icon aria-hidden=\"false\">notifications</mat-icon></button> -->\r\n        <mat-icon class=\"hm-user-icon\" *ngIf=\"isUserLogin\" mat-button [matMenuTriggerFor]=\"menu\" mat-raised-button>face</mat-icon>\r\n        <mat-menu #menu=\"matMenu\" backdropClass=\"hm-user-menu-item\" >\r\n          <h4 *ngIf=\"isUserLogin\">{{checkUser.name}}</h4>\r\n          <!-- <h4>{{checkUser.email}}</h4> -->\r\n          <h4 *ngIf=\"isUserLogin\">{{checkUser.contactNo}}</h4>\r\n          <mat-divider></mat-divider>\r\n          <button *ngIf=\"!AdminLoginHideFlag\" mat-menu-item (click)=\"dashboard()\"><mat-icon>dashboard</mat-icon> <span>Dashboard</span></button>\r\n          <button *ngIf=\"AdminLoginHideFlag\" mat-menu-item (click)=\"home()\"><mat-icon>home</mat-icon> <span>Home</span></button>\r\n          <button mat-menu-item (click)=\"logOut()\"><mat-icon>power_settings_new</mat-icon> Log Out</button>\r\n          <!-- <button mat-menu-item>Info</button> -->\r\n        </mat-menu>\r\n        <button mat-raised-button color=\"primary\" (click)=\"openDialog()\" *ngIf=\"!isUserLogin\">Login</button>\r\n        <mat-icon class=\"hm-wallet mt-3\" mat-raised-button (click)=\"wallet();\">account_balance_wallet</mat-icon>\r\n        <!-- <mat-icon  mat-raised-button>login</mat-icon> -->\r\n\r\n        <mat-icon class=\"hm-cart mt-3\" mat-raised-button>shopping_cart</mat-icon>\r\n        <!-- <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example heart icon\">favorite</mat-icon>\r\n        <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example delete icon\">delete</mat-icon> -->\r\n      </mat-toolbar-row>\r\n      <div class=\"header-social\">\r\n        <a href=\"javascript:;\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n        <a href=\"javascript:;\"><i class=\"fa fa-twitter\"></i></a>\r\n        <a href=\"javascript:;\"><i class=\"fa fa-instagram\"></i></a>\r\n      </div>\r\n    </mat-toolbar>\r\n\r\n      <div class=\"fixed-plugin\" *ngIf=\"isAstrologerLoggedIn$ | async as isAstrologerLoggedIn\">\r\n\r\n          <div class=\"example-button-row\">\r\n\r\n            <button matTooltip=\"Chat\" matTooltipPosition=\"left\"  mat-mini-fab (click)=\"chatToAstro()\" aria-label=\"chat icon\">\r\n              <mat-icon>chat</mat-icon>\r\n            </button>\r\n            <button matTooltip=\"Call\" matTooltipPosition=\"before\" mat-mini-fab (click)=\"talkToAstro()\"  aria-label=\"call icon\">\r\n              <mat-icon>phone</mat-icon>\r\n            </button>\r\n            <button matTooltip=\"Report\" matTooltipPosition=\"before\" mat-mini-fab  (click)=\"viewReport()\" aria-label=\"report icon\">\r\n              <mat-icon>assignment</mat-icon>\r\n            </button>\r\n            <button matTooltip=\"Ask Question\" matTooltipPosition=\"before\" mat-mini-fab (click)=\"viewQA()\"  aria-label=\"Q&A icon\">\r\n              <mat-icon>question_answer</mat-icon>\r\n            </button>\r\n          </div>\r\n       </div>\r\n\r\n     <app-spinner></app-spinner>\r\n    <router-outlet></router-outlet>\r\n\r\n\r\n    <footer class=\"footer-wrapper py-5\">\r\n      <div class=\"footer-top\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-3 footer-about wow fadeInUp animated\" style=\"visibility: visible; animation-name: fadeInUp;\">\r\n              <h3><b>About us</b></h3>\r\n              <p>\r\n                Sai's AstroWorld is the best astrology website for online Astrology predictions. Talk to Astrologer on call and get answers to all your worries by seeing the future life through Astrology Kundli Predictions from the best Astrologers from India. Get best future predictions related to Marriage, love life, Career or Health over call, chat, query or report.\r\n              </p>\r\n              <!-- <p>© Company Inc.</p> -->\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4 footer-links wow fadeInUp animated\" style=\"visibility: visible; animation-name: fadeInUp;\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col\">\r\n                        <h3><b>Quick Links</b></h3>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-6\">\r\n                        <p><a class=\"scroll-link\" href=\"#top-content\">Horoscope</a></p>\r\n                        <p><a class=\"scroll-link\" href=\"#top-content\">Refund & Cancellation Policy</a></p>\r\n                        <p><a href=\"#\">Disclaimer</a></p>\r\n                        <!-- <p><a href=\"#\">How it works</a></p>\r\n                        <p><a href=\"#\">Our clients</a></p> -->\r\n                      </div>\r\n                      <div class=\"col-md-6\">\r\n                        <p><a href=\"#\">Terms &amp; Conditions</a></p>\r\n                        <p><a href=\"#\">Privacy Policy</a></p>\r\n                        <p><a href=\"#\">Pricing Policy</a></p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-3 footer-contact wow fadeInDown animated\" style=\"visibility: visible; animation-name: fadeInDown;\">\r\n                    <h3><b>Contact</b></h3>\r\n                        <!-- <p><i class=\"fa fa-map-marker-alt\"></i> Demo Address 10, 10136 Turin Italy</p> -->\r\n                        <!-- <p><i class=\"fa fa-phone\"></i> Phone: (0039) 123 45 67 890</p> -->\r\n                        <p><i class=\"fa fa-envelope\"></i> Email: <a href=\"mailto:Info@saiastroworld.com\">Info@saiastroworld.com</a></p>\r\n                        <!-- <p><i class=\"fa fa-skype\"></i> Skype: you_online</p> -->\r\n                        <div class=\"col footer-social\">\r\n                          <a href=\"#\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n                          <a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\r\n                          <a href=\"#\"><i class=\"fa fa-instagram\"></i></a>\r\n                        </div>\r\n                   </div>\r\n                   <div class=\"col-md-2 wow fadeInDown animated\" style=\"visibility: visible; animation-name: fadeInDown;\">\r\n                    <h3><b>Download our App</b></h3>\r\n                    <div class=\"google-play-store mb-3\">\r\n                         <img src=\"../assets/images/social/google-app.png\">\r\n                   </div>\r\n                    <div class=\"app-store\">\r\n                         <img src=\"../assets/images/social/app-store.png\">\r\n                   </div>\r\n                  </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"footer-bottom pt-5\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n               <div class=\"col footer-social\">\r\n                    <a href=\"#\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n                    <a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\r\n                    <a href=\"#\"><i class=\"fa fa-instagram\"></i></a>\r\n                  </div>\r\n             </div>\r\n        </div>\r\n      </div> -->\r\n\r\n<!--\r\n  <button (click)=\"signupFirebase()\">signup</button>\r\n  <button (click)=\"signupWithOther()\">other signup</button>\r\n  <button (click)=\"loginFirebase()\">login</button>\r\n  <button (click)=\"loginOtherFirebase()\">login other</button>\r\n  <button (click)=\"sendMessage()\">Send</button>\r\n  <button (click)=\"getUserList()\">user</button>\r\n  <button (click)=\"getAllMessage();\">All message</button>\r\n\r\n  <div *ngFor=\"let list of userList;\">\r\n    <span (click)=\"setReceiverId(list)\">{{list.username}}</span>\r\n  </div>\r\n  <form [formGroup]=\"messaging\" class=\"mt-5\">\r\n    <input type=\"text\" formControlName=\"typing\">\r\n  </form>\r\n  <div *ngFor=\"let list of chatList;\">\r\n    {{list.message}}\r\n  </div> -->\r\n    </footer>\r\n\r\n    <!-- <app-chat [viewChatOption]=\"true\"></app-chat> -->\r\n\r\n  </mat-sidenav-content>\r\n\r\n  <!-- <button mat-button><mat-icon aria-hidden=\"false\">notifications</mat-icon></button> -->\r\n\r\n\r\n</mat-sidenav-container>\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from './material-module';\r\nimport { LoginComponent } from './login/login.component'\r\nimport { HttpIntercepterBasicAuthService } from './shared/service/http/http-intercepter-basic-auth.service';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { LoaderInterceptorService } from './shared/service/http/loader-interceptor.service';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AuthGuard } from './auth/canActivateAuth.gaurd'\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n// import { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\r\n// import { GoogleLoginProvider } from 'angularx-social-login';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/messaging';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\n\r\n\r\n\r\n// export const config = {\r\n//   apiKey: \"AIzaSyCwcgfKu2EkT1E_2uRqf7bloO8P6PHRNO0\",\r\n//   authDomain: \"simpleintroslider.firebaseapp.com\",\r\n//   databaseURL: \"https://SimpleIntroSlider.firebaseio.com\",\r\n//   projectId: \"simpleintroslider\",\r\n//   storageBucket: \"\",\r\n//   messagingSenderId: \"861357045560\"\r\n// };\r\n\r\n\r\n// firebase astro world \r\nexport const config = {\r\n  apiKey: \"AIzaSyCJ_QJQqYDWVzricXXyjtmEef7N7ty25Ms\",\r\n  authDomain: \"saisastroworld.firebaseapp.com\",\r\n  databaseURL: \"https://SaisAstroworld.firebaseio.com\",\r\n  projectId: \"saisastroworld\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"785274786840\"\r\n};\r\n\r\n// apiKey: \"<API_KEY>\",\r\n// authDomain: \"<PROJECT_ID>.firebaseapp.com\",\r\n// databaseURL: \"https://<DATABASE_NAME>.firebaseio.com\",\r\n// projectId: \"<PROJECT_ID>\",\r\n// storageBucket: \"<BUCKET>.appspot.com\",\r\n// messagingSenderId: \"<SENDER_ID>\",\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignUpComponent,\r\n    ForgotPasswordComponent,\r\n    SpinnerComponent,\r\n    ChatComponent,\r\n    ConfirmationComponent,\r\n    WalletComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    CarouselModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    NgxSpinnerModule,\r\n    // SocialLoginModule\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    AuthGuard,\r\n    // {\r\n    //   provide: 'SocialAuthServiceConfig',\r\n    //   useValue: {\r\n    //     autoLogin: false,\r\n    //     providers: [\r\n    //       {\r\n    //         id: GoogleLoginProvider.PROVIDER_ID,\r\n    //         provider: new GoogleLoginProvider(\r\n    //           'clientId'\r\n    //         ),\r\n    //       },\r\n    //     ],\r\n    //   } as SocialAuthServiceConfig ,\r\n    // },\r\n  {provide: LocationStrategy, useClass: HashLocationStrategy},\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: HttpIntercepterBasicAuthService,\r\n    multi: true\r\n  }, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: LoaderInterceptorService,\r\n    multi: true\r\n  }\r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { CommonService } from '../shared/service/commonService/common.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private loggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  private AstrologerLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n  get isLoggedIn() {\r\n    return  this.loggedIn.asObservable();\r\n  }\r\n  get isAstrologerLoggedIn() {\r\n    return  this.AstrologerLoggedIn.asObservable();\r\n  }\r\n\r\n  constructor(\r\n    private _route: Router,\r\n    private _commonService: CommonService\r\n  ) {\r\n\r\n  }\r\n\r\n  checkSession(userData) {\r\n    if( userData != null && userData.userType == 2) { // this condition is checking whether it's admin or normal user\r\n    this.AstrologerLoggedIn.next(false);\r\n    this.loggedIn.next(true)\r\n    return true;\r\n    } else {\r\n    this.AstrologerLoggedIn.next(true);\r\n    this.loggedIn.next(true);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  checkAccess(userData) {\r\n    if( userData != null && userData.userType == 2 ) { // this condition is checking whether it's admin or normal user\r\n      this.AstrologerLoggedIn.next(false);\r\n      this.loggedIn.next(true);\r\n      return false;\r\n    } else {\r\n      this.AstrologerLoggedIn.next(true);\r\n      this.loggedIn.next(true);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  logOut(){\r\n    location.reload();\r\n    sessionStorage.clear();\r\n    this._route.navigate(['']);\r\n    this._commonService.tostMessage(\"Log Out Successfully!\");\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private route: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    let date = new Date();\r\n    let userValue = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n    console.log(\"Can Activate servcie  ++++++++++++++ \",userValue)\r\n    // if(userValue == null) this.authService.logOut();\r\n\r\n    let userFlag = this.authService.checkSession(userValue);\r\n    console.log(\"flag\",userFlag);\r\n    if (userFlag) {\r\n      // this.route.navigate(['dashboard']);\r\n       return true;\r\n    } else {\r\n      //  this.route.navigate(['']);\r\n      this.authService.logOut();\r\n      // console.log(\"User Flag retrun ------> false\");\r\n       return false;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '../../../node_modules/@angular/forms';\r\nimport { FirebaseService } from '../shared/service/firebase/firebase.service';\r\nimport { ObservableDataService } from '../observables/behaviourSubject.service';\r\nimport { PaymentService } from '../shared/service/payment/payment.service';\r\nimport { HttpParams } from '../../../node_modules/@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  chatForm: FormGroup;\r\n  chatList: any = [];\r\n  getFirebaseUserData: any;\r\n  chatName =  '';\r\n  allChatList: any = [];\r\n  viewChatScreen: boolean = false;\r\n  @Input() viewChatOption : boolean = true;\r\n  constructor(public firebaseService : FirebaseService, public observableService: ObservableDataService, private paymentService:PaymentService) {\r\n    this.chatForm = new FormGroup({\r\n      message: new FormControl('', Validators.required)\r\n    }); \r\n\r\n    if(sessionStorage.getItem('userFirebaseData')){\r\n      this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n    }  \r\n    // this.firebaseService.messageListener();\r\n\r\n    // get subject message\r\n    this.observableService.getMessage.asObservable().subscribe(messageRes => {\r\n      if(messageRes){\r\n        this.chatList.push(messageRes);\r\n        setTimeout(() => {\r\n          let element = document.getElementById('chatWrap');\r\n          if (element) {\t\t\t\t\t\t\r\n            element.scrollTop = element.scrollHeight;\r\n          }\r\n        }, 100);\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.chatListDetail();\r\n\r\n\r\n    // if has receiver id\r\n    if(sessionStorage.getItem('receiverId') && sessionStorage.getItem('chatName')){\r\n      this.chatName = sessionStorage.getItem('chatName');\r\n      this.viewChatScreen = true;\r\n    }\r\n    // if has receiver id end\r\n  }\r\n\r\n\r\n  chatListDetail(){\r\n    this.firebaseService.getChatList().then(chatList => {\r\n      if(chatList){\r\n        this.allChatList = chatList;\r\n        console.log(this.allChatList, 'all chat list');\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllMessage(){\r\n    this.firebaseService.getAllMessages().then(response => {\r\n      this.chatList = response;\r\n    });\r\n  }\r\n\r\n  sendMessage(){\r\n    this.firebaseService.sendMessages(this.chatForm.value.message);\r\n    this.chatForm.reset();\r\n  }\r\n\r\n  getChatMsgScreen(chatInfo){\r\n    console.log(chatInfo, 'chat info');\r\n    this.chatName = chatInfo.name;\r\n    sessionStorage.setItem('receiverId', chatInfo.id);\r\n    \r\n    this.viewChatScreen = true;\r\n    this.getAllMessage();\r\n  }\r\n\r\n  viewchatListScreen(){\r\n    this.viewChatScreen = false;\r\n    sessionStorage.removeItem('chatName');\r\n    this.chatListDetail();\r\n  }\r\n\r\n\r\n  placeOrder(){\r\n    let reqObj = { \r\n      \"amount\": 50,\r\n      \"currency\": \"INR\",\r\n      \"userId\": \"balatwo\",\r\n      \"recieptId\": this.makeOrderid()\r\n  }\r\n\r\n  this.paymentService.orderPlace(reqObj).subscribe(response => {\r\n    console.log(response, 'place order');\r\n    if(response) {\r\n      const options: any = {\r\n        key: 'rzp_test_ZeUhqzQZ4q0Gbg',\r\n        amount: response['amount'], // amount should be in paise format to display Rs 1255 without decimal point\r\n        currency: response['currency'],\r\n        name: '', // company name or product name\r\n        description: '',  // product description\r\n        image: '/assets/images/logo/PNG/font120px.png', // company logo or product image\r\n        order_id: response['id'], // order_id created by you in backend\r\n        modal: {\r\n          // We should prevent closing of the form when esc key is pressed.\r\n          escape: false,\r\n        },\r\n        notes: {\r\n          // include notes if any\r\n        },\r\n        theme: {\r\n          color: '#f9a825'\r\n        }\r\n      };\r\n      options.handler = ((response, error) => {\r\n        options.response = response;\r\n        console.log(response);\r\n        console.log(options);\r\n\r\n        // call your backend api to verify payment signature & capture transaction\r\n        if(response) {\r\n          this.verifySignature(response);\r\n        }\r\n\r\n      });\r\n      options.modal.ondismiss = (() => {\r\n        // handle the case when user closes the form while transaction is in progress\r\n        console.log('Transaction cancelled.');\r\n      });\r\n      const rzp = new window['Razorpay'](options);\r\n      rzp.open();\r\n    }\r\n  })\r\n\r\n   \r\n  }\r\n\r\n  getWalletInfo(){\r\n    let params = new HttpParams().set('userId', \"balatwo\");\r\n    this.paymentService.walletInfo(params).subscribe(response => {\r\n      if(response){\r\n        console.log(response, 'wallet info');\r\n      }\r\n    })\r\n  }\r\n\r\n  verifySignature(orderDetail){\r\n    if(orderDetail) {\r\n      let params = new HttpParams().set('signature', orderDetail.razorpay_signature).set('orderId', orderDetail.razorpay_order_id).set(\"paymentId\", orderDetail.razorpay_payment_id);\r\n      this.paymentService.signatureVerify(params).subscribe(response => {\r\n        console.log(response, 'response signayture');\r\n        if(response){\r\n          this.updateWallet(orderDetail)\r\n        }\r\n      })\r\n    }  \r\n  }\r\n\r\n  updateWallet(orderInfo){\r\n    if(orderInfo){\r\n      // let params = new HttpParams().set('userId', 'balatwo').set(\"orderId\", orderInfo.razorpay_order_id);\r\n      let params = {\r\n        userId: 'balatwo',\r\n        orderId: orderInfo.razorpay_order_id\r\n      }\r\n      this.paymentService.updateWalletInfo(params).subscribe(response => {\r\n        console.log(response, 'wallet update');\r\n        \r\n      })\r\n    }\r\n  \r\n  }\r\n\r\n\r\n\r\n  // make order id\r\n  makeOrderid() {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < 12; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n\r\n    if(result) {\r\n      result = \"recieptId_\"+result;\r\n    }\r\n    console.log(result, 'result');\r\n    return result;\r\n }\r\n  // make order id end\r\n}\r\n","<div class=\"chat-wrapper\" *ngIf=\"viewChatOption\">\r\n     <!-- chat list -->\r\n     <mat-card class=\"list-wrapper example-card\" *ngIf=\"!viewChatScreen\">\r\n            <div *ngFor=\"let list of allChatList\" class=\"media\" (click)=\"getChatMsgScreen(list)\">\r\n                <div class=\"avatar\" [ngStyle]=\"{'background-color': '#'+(list?.color) }\">\r\n                    {{list?.shortName}}\r\n                </div>\r\n                <div class=\"media-body\">\r\n                    <h5 class=\"pointer\">{{list?.name}}</h5>\r\n                    <p class=\"pointer\">{{list?.lastMessage}}</p>\r\n                </div>\r\n            </div>\r\n     </mat-card>\r\n        <!-- chat list end -->\r\n    <mat-card class=\"example-card\" *ngIf=\"viewChatScreen\">\r\n        <mat-card-header>\r\n            <button mat-mini-fab mat-card-avatar color=\"primary\" class=\"mr-3\" (click)=\"viewchatListScreen()\"><mat-icon>keyboard_arrow_left</mat-icon></button>\r\n            <div mat-card-avatar class=\"user-header-image\"></div>\r\n                <mat-card-title>{{chatName}}</mat-card-title>\r\n                <mat-card-subtitle>Online</mat-card-subtitle>\r\n            </mat-card-header>\r\n        <form [formGroup]=\"chatForm\">\r\n                <div class=\"chat-list\" id=\"chatWrap\">\r\n                    <div class=\"listing clearfix\" *ngFor=\"let list of chatList;\">\r\n                        <span [ngClass]=\"(list?.receiver == getFirebaseUserData?.id) ? 'mine': 'other'\">{{list?.message}}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"message-field\">\r\n                    <textarea formControlName=\"message\"></textarea>\r\n                    <button mat-mini-fab color=\"primary\" (click)=\"sendMessage()\" [disabled]=\"chatForm.invalid\"><mat-icon>send</mat-icon></button>\r\n                </div>\r\n            </form>\r\n    </mat-card>\r\n\r\n    <!-- click get payment options -->\r\n    <!-- <button (click)=\"placeOrder();\">Place Order</button> -->\r\n    <!-- click get payment options -->\r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '../../../node_modules/@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirmation',\r\n  templateUrl: './confirmation.component.html',\r\n  styleUrls: ['./confirmation.component.scss']\r\n})\r\nexport class ConfirmationComponent implements OnInit {\r\n  minuteLisiting: Array<any>;\r\n  selectedIndex: number;\r\n  isValid: boolean = false;\r\n  walletBalance: any;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public modalData: any, public dialogRef: MatDialogRef<ConfirmationComponent>,) {\r\n    this.minuteLisiting = [\r\n      {\r\n        name: \"5 min\",\r\n        value: 5\r\n      },\r\n      {\r\n        name: \"10 min\",\r\n        value: 10\r\n      },\r\n      {\r\n        name: \"15 min\",\r\n        value: 15,\r\n      },\r\n      {\r\n        name: \"20 min\",\r\n        value: 20\r\n      }\r\n    ]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(sessionStorage.getItem('walletAmount')){\r\n      this.walletBalance = sessionStorage.getItem('walletAmount');\r\n    }\r\n  }\r\n\r\n  selectList(listInfo, index){\r\n    this.selectedIndex  = index;\r\n    console.log(\"listInfo\")\r\n    if(sessionStorage.getItem('walletAmount') && listInfo){\r\n      let totalValue = listInfo.value * 10;\r\n      if(totalValue < parseInt(sessionStorage.getItem('walletAmount'))) {\r\n        this.isValid = false;\r\n      }else {\r\n        this.isValid = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  connect(){\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n}\r\n","<div class=\"confirmation-wrapper\">\r\n    <h3>{{modalData?.type}} with {{modalData?.name}}</h3>\r\n    <h4>\r\n      <span *ngIf=\"modalData?.countryCode == '+91'\"> <i class=\"fa fa-inr\" aria-hidden=\"true\"></i> </span>\r\n      <span *ngIf=\"modalData?.countryCode == '+1'\"> <i class=\"fa fa-usd\" aria-hidden=\"true\"></i> </span>\r\n      <span *ngIf=\"modalData?.countryCode == '+886'\"> NT$ </span>\r\n      {{modalData?.chat}}/Min</h4>\r\n    <!-- <h4>Wallet Balance: {{walletBalance}}</h4> -->\r\n    <div class=\"minute-listing\">\r\n        <div class=\"list\" *ngFor=\"let list of minuteLisiting; let i = index\" [ngClass]=\"{'active': selectedIndex == i}\" (click)=\"selectList(list,i)\">\r\n            <span>{{list.name}}</span>\r\n        </div>\r\n    </div>\r\n    <p *ngIf=\"isValid\">\r\n      To make this connection you required to add sufficient amount in the wallet\r\n    </p>\r\n    <div class=\"text-center\">\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"isValid\" (click)=\"connect();\">Connect</button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant';\r\nimport { ForgotPasswordService } from './forgot-password.service';\r\nimport {CommonService} from '../shared/service/commonService/common.service'\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  validateForm: FormGroup;\r\n  resetForm: FormGroup;\r\n\r\n  isVisible:boolean = true;\r\n  isOtp:boolean = false;\r\n\r\n  @Output() outputResetData: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _forgotPasswordService : ForgotPasswordService, private _commonService : CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.validateForm = this._formBuilder.group({\r\n      contactNo   : ['', [Validators.required, this.mobileNumber]],\r\n      otp: [{value:'', disabled: true}],\r\n      userType: ['']\r\n    });\r\n\r\n    this.resetForm = this._formBuilder.group({\r\n      contactNo   : [{value:'', disabled:true}, [Validators.required, this.mobileNumber]],\r\n      userType : [{value:'', disabled:true}, [Validators.required]],\r\n      password : ['', [Validators.required, this.passwordPattern]]\r\n    });\r\n  }\r\n\r\n  submitForm(value: any){\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n      this._forgotPasswordService.forgetPassword(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n\r\n        let resonseMessage = responseData.message;\r\n\r\n        if(responseData.status == 200) {\r\n          // this.isVisible = true;\r\n          this.validateForm.controls['userType'].setValue(responseData.data.userType, {onlySelf:true});\r\n          this.validateForm.controls['otp'].enable();\r\n          this.isOtp = true;\r\n          console.log(\"this.validateForm ++++++++++++\",this.validateForm)\r\n\r\n\r\n        } else {\r\n          alert(resonseMessage);\r\n        }\r\n\r\n      })\r\n  }\r\n\r\n  verifyOTP(value) {\r\n\r\n    console.log(\"verifyOTP login \",value);\r\n\r\n    this._commonService.verifyOTP(value).subscribe((responseData)=>{\r\n      console.log(\"responseData ------> \",responseData);\r\n      let resonseMessage = responseData.message;\r\n\r\n      if(responseData.status == 200) {\r\n        this.isVisible = false;\r\n        this.resetForm.controls['contactNo'].setValue(this.validateForm.value.contactNo, {onlySelf:true});\r\n        this.resetForm.controls['userType'].setValue(this.validateForm.value.userType == 1 ? \"User\" : \"Astrologer\", {onlySelf:true});\r\n        console.log(\"this.resetForm ----->\",this.resetForm);\r\n\r\n      } else {\r\n        alert(resonseMessage);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  resetUser(value){\r\n    value['contactNo'] = this.resetForm.controls.contactNo.value;\r\n    value['userType'] = this.resetForm.controls.userType.value == \"User\" ? '1' : '2';\r\n\r\n    console.log(\"resetUser is \", value, \"And\", this.resetForm);\r\n    this._forgotPasswordService.resetUser(value).subscribe((responseData)=>{\r\n      console.log(\"responseData ------> \",responseData);\r\n      let resonseMessage = responseData.message;\r\n\r\n      if(responseData.status == 200) {\r\n        this.validateForm.reset();\r\n        this.resetForm.reset();\r\n        this.outputResetData.emit(true);\r\n      } else {\r\n        alert(resonseMessage);\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  mobileNumber= (control: FormControl): {[s: string]: boolean} => {\r\n\r\n    console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n      return {};\r\n    } else {\r\n\r\n      return { mobileErr: true, error: true };\r\n    }\r\n  }\r\n\r\n  passwordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n    console.log(\"passwordPattern ----->\",control.value)\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n      return {};\r\n    }else{\r\n      return { passErr: true, error: true };\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"form-wrapper\">\r\n<form *ngIf=\"isVisible\" name=\"validateForm\" [formGroup]=\"validateForm\" novalidate>\r\n\r\n  <mat-form-field class=\"form-field-width\">\r\n    <mat-label>Mobile Number</mat-label>\r\n    <input matInput formControlName=\"contactNo\" minlength=\"10\" maxlength=\"10\">\r\n    <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n    <mat-error *ngIf=\"validateForm.get('contactNo').hasError('required')\">\r\n        Mobile number is required!\r\n    </mat-error>\r\n    <mat-error\r\n        *ngIf=\"!validateForm.get('contactNo').hasError('required') &&\r\n                validateForm.get('contactNo').hasError('mobileErr')\">\r\n        Please enter a valid mobile number!\r\n    </mat-error>\r\n</mat-form-field>\r\n\r\n<mat-form-field class=\"form-field-width mt-2\">\r\n  <mat-label>OTP</mat-label>\r\n  <input matInput formControlName=\"otp\">\r\n  <mat-icon matSuffix class=\"secondary-text\">code</mat-icon>\r\n  <mat-error *ngIf=\"validateForm.get('otp').hasError('required')\">\r\n      OTP is required!\r\n  </mat-error>\r\n\r\n</mat-form-field>\r\n\r\n<button *ngIf=\"!isOtp\" mat-raised-button color=\"primary\" class=\"submit-button mt-3\"\r\n            [disabled]=\"validateForm.invalid\" (click)=\"submitForm(validateForm.value)\">\r\n        Get OTP\r\n    </button>\r\n    <button *ngIf=\"isOtp\" mat-raised-button color=\"primary\" class=\"submit-button mt-3\" (click)=\"verifyOTP(validateForm.value)\">\r\n        Verify OTP\r\n    </button>\r\n</form>\r\n\r\n<form *ngIf=\"!isVisible\" name=\"resetForm\" [formGroup]=\"resetForm\" novalidate>\r\n\r\n      <mat-form-field class=\"form-field-width\">\r\n        <mat-label>Mobile Number</mat-label>\r\n        <input matInput formControlName=\"contactNo\" minlength=\"10\" maxlength=\"10\">\r\n        <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n        <mat-error *ngIf=\"resetForm.get('contactNo').hasError('required')\">\r\n            Mobile number is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!resetForm.get('contactNo').hasError('required') &&\r\n                    resetForm.get('contactNo').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Select Type</mat-label>\r\n      <input matInput formControlName=\"userType\" minlength=\"10\" maxlength=\"10\">\r\n        <mat-error *ngIf=\"resetForm.get('userType').hasError('required')\">\r\n          Login type is required!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>New Password</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\">\r\n        <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n        <mat-error *ngIf=\"resetForm.get('password').hasError('required')\">\r\n          Password is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!resetForm.get('password').hasError('required') &&\r\n                    resetForm.get('password').hasError('passErr')\">\r\n            Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <button *ngIf=\"isOtp\" [disabled]=\"resetForm.invalid\" mat-raised-button color=\"primary\" class=\"submit-button mt-5\" (click)=\"resetUser(resetForm.value)\">\r\n      Reset\r\n    </button>\r\n\r\n</form>\r\n\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ForgotPasswordService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  forgetPassword(data): Observable<any> {\r\n    return this.restService.create(RestUrl.forgetPassword, data)\r\n  }\r\n\r\n  resetUser(data): Observable<any> {\r\n    return this.restService.create(RestUrl.resetUser, data);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant'\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { loginService } from './login.service'\r\nimport {CommonService} from '../shared/service/commonService/common.service'\r\nimport { Router } from '@angular/router';\r\nimport { SocialAuthService } from \"angularx-social-login\";\r\nimport { FirebaseService } from '../shared/service/firebase/firebase.service';\r\n// import { FacebookLoginProvider, GoogleLoginProvider } from \"angularx-social-login\";\r\n// import { SocialUser } from \"angularx-social-login\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  validateForm: FormGroup;\r\n  otpForm: FormGroup;\r\n  isVisible:boolean = false;\r\n  isForgotPassVisible: boolean = false;\r\n  // user: SocialUser;\r\n  // loggedIn: boolean;\r\n\r\n  constructor( private router: Router, private _commonService: CommonService, private _formBuilder: FormBuilder, public dialogRef: MatDialogRef<LoginComponent>, private _loginService : loginService, public firebaseService: FirebaseService\r\n   ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validateForm = this._formBuilder.group({\r\n      contactNo   : ['', [Validators.required, this.mobileNumber]],\r\n      password: ['', [Validators.required, this.passwordPattern]],\r\n      userType: [null, Validators.required]\r\n\r\n    });\r\n\r\n    this.otpForm = this._formBuilder.group({\r\n      otp : ['', Validators.required]\r\n     });\r\n\r\n    //  this.authService.authState.subscribe((user) => {\r\n    //   this.user = user;\r\n    //   this.loggedIn = (user != null);\r\n    // });\r\n\r\n    // console.log(\"this.loggedIn \", this.loggedIn);\r\n\r\n  }\r\n\r\n  submitForm(value: any) {\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n      // this._route.navigate(['/profile']);\r\n\r\n      this._loginService.login(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n\r\n        let resonseMessage = responseData.message;\r\n        let responseBody = responseData.data;\r\n\r\n        if(responseData.status == 200) {\r\n\r\n          // call firebase service on login\r\n          let firebaseLoginReq = {\r\n            email: responseBody.userData.email,\r\n            password: responseBody.userData.contactNo,\r\n            name: responseBody.userData.name\r\n          }\r\n          this.firebaseService.loginFirebase(firebaseLoginReq).then(firebaseResponse => {\r\n            if(responseBody.userData.firebaseUserId !== firebaseResponse.id){\r\n              let requestObj = {\r\n                userId: responseBody.userData.userId,\r\n                firebaseUserId: firebaseResponse.id\r\n              }\r\n              this._loginService.loginFirebase(requestObj).subscribe(response => {\r\n                if(response.data && response.data.firebaseUserId){\r\n                  console.log('firebase login successfully');\r\n                }\r\n              })\r\n            }\r\n          });\r\n\r\n\r\n          // call firebase servicet on login end\r\n\r\n\r\n          // this.isVisible = true;\r\n          this._commonService.tostMessage(resonseMessage)\r\n\r\n          if(!responseBody.profileUpdated && typeof responseBody.profileUpdated != 'undefined') {\r\n              console.log(responseBody, 'response body');\r\n            // this.firebaseService.loginFirebase()\r\n            this.router.navigate(['astroRegistration']);\r\n            this.dialogRef.close(responseData.data);\r\n          } else {\r\n            this.dialogRef.close(responseData.data);\r\n          \r\n          }\r\n\r\n        } else {\r\n          this._commonService.tostMessage(resonseMessage);\r\n        }\r\n\r\n        })\r\n  }\r\n\r\n  // signInWithGoogle(): void {\r\n  //   this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\r\n  // }\r\n\r\n  // signOut(): void {\r\n  //   this.authService.signOut();\r\n  // }\r\n\r\n  otpSubmitForm(value: any) {\r\n    this.dialogRef.close(value);\r\n  }\r\n\r\n  forgotPassword() {\r\n    this.isVisible = true;\r\n  }\r\n\r\n  resetLogin(event) {\r\n\r\n    if(event){\r\n      this.isVisible = false;\r\n    } else {\r\n      this.isVisible = true;\r\n    }\r\n  }\r\n// signUpSubmitForm(value: any){\r\n//   alert(\"Registered Successfuly\")\r\n//   console.log(\"value User ++++++++ \",value)\r\n//   if(value) {\r\n//     this.message = \"User registered and verified Successfully\"\r\n//   } else {\r\n//     this.message = \"User not verified, please try to register again\"\r\n//   }\r\n//   // this.dialogRef.close(value);\r\n// }\r\n\r\nmobileNumber= (control: FormControl): {[s: string]: boolean} => {\r\n\r\n  console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n  if(!control.value) {\r\n    return { required: true };\r\n  } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n    return {};\r\n  } else {\r\n\r\n    return { mobileErr: true, error: true };\r\n  }\r\n}\r\n\r\npasswordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n  console.log(\"passwordPattern ----->\",control.value)\r\n\r\n  if(!control.value) {\r\n    return { required: true };\r\n  }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n    return {};\r\n  }else{\r\n    return { passErr: true, error: true };\r\n  }\r\n}\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\">\r\n  <mat-tab label=\"Login\">\r\n    <div class=\"form-wrapper\">\r\n    <form *ngIf=\"!isVisible\" name=\"validateForm\" [formGroup]=\"validateForm\" novalidate (ngSubmit)=\"submitForm(validateForm.value)\">\r\n\r\n      <mat-form-field class=\"form-field-width\">\r\n        <mat-label>Mobile Number</mat-label>\r\n        <input matInput formControlName=\"contactNo\" minlength=\"10\" maxlength=\"10\">\r\n        <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n        <mat-error *ngIf=\"validateForm.get('contactNo').hasError('required')\">\r\n            Mobile number is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!validateForm.get('contactNo').hasError('required') &&\r\n                    validateForm.get('contactNo').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Select Type</mat-label>\r\n      <mat-select name=\"userType\" formControlName=\"userType\">\r\n        <mat-option value=1>User</mat-option>\r\n        <mat-option value=2>Astrolloger</mat-option>\r\n      </mat-select>\r\n        <mat-error>\r\n          Login type is required!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\">\r\n        <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n        <mat-error *ngIf=\"validateForm.get('password').hasError('required')\">\r\n          Password is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!validateForm.get('password').hasError('required') &&\r\n                    validateForm.get('password').hasError('passErr')\">\r\n            Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n\r\n\r\n    <div class=\"remember-forgot-password\" class=\"d-flex mt-5  justify-content-end\">\r\n        <a href=\"javascript:;\" class=\"forgot-password\" (click)=\"forgotPassword()\">\r\n            Forgot Password?\r\n        </a>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"primary\" class=\"submit-button mt-3 mr-3\" aria-label=\"LOGIN\"\r\n            [disabled]=\"validateForm.invalid\">\r\n        LOGIN\r\n    </button>\r\n    <button mat-stroked-button color=\"warn\" class=\"submit-button mt-3\" aria-label=\"Cancel\" [mat-dialog-close]=\"\">\r\n      Cancel\r\n    </button>\r\n    </form>\r\n\r\n    <!-- OTP Form -->\r\n   <div class=\"otp-wrapper\" *ngIf=\"isVisible\">\r\n    <app-forgot-password *ngIf=\"isVisible\" (outputResetData)=\"resetLogin($event)\"> </app-forgot-password>\r\n  </div>\r\n\r\n    <!-- <div class=\"separator login\">\r\n      <span class=\"text\">OR</span>\r\n    </div> -->\r\n\r\n    <!-- <div class=\"d-flex  justify-content-center\">\r\n\r\n      <button mat-stroked-button class=\"google\"><i><img src=\"../../assets/images/social/google.png\"></i>\r\n          <b>Log in with Google</b>\r\n      </button>\r\n\r\n    </div> -->\r\n  </div>\r\n   <!-- loginform ends -->\r\n\r\n\r\n  </mat-tab>\r\n  <mat-tab label=\"Sign Up\">\r\n    <app-sign-up></app-sign-up>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class loginService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  login(data): Observable<any> {\r\n    return this.restService.create(RestUrl.login, data)\r\n  }\r\n\r\n  loginFirebase(data): Observable<any> {\r\n    return this.restService.create(RestUrl.loginFirebase, data)\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MaterialFileInputModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ObservableDataService {\r\n\r\n  private messageSource = new BehaviorSubject<any>(null);\r\n  private checkOperationSource = new BehaviorSubject<any>(null);\r\n  private astroDetail = new BehaviorSubject<any>(null);\r\n\r\n  public getMessage = new BehaviorSubject<any>(null);\r\n\r\n\r\n  checkUserData = this.messageSource.asObservable();\r\n  checkUserOperationFlag = this.checkOperationSource.asObservable();\r\n  observedAstroDetail = this.astroDetail.asObservable();\r\n\r\n\r\n\r\n  constructor() { }\r\n\r\n  checkUser(message: any) {\r\n    this.messageSource.next(message)\r\n  }\r\n\r\n  checkUserOperation(message: any) {\r\n    this.checkOperationSource.next(message)\r\n  }\r\n\r\n  passAstroDetails(message: any) {\r\n    this.astroDetail.next(message)\r\n  }\r\n\r\n  messageData(message : any){\r\n    this.getMessage.next(message);\r\n  }\r\n\r\n}\r\n","export class RegexConstant {\r\n    public static get PASSWORD_REGEX() : any { return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/; };\r\n    public static get ONLY_NUMBER() : any {return /^[0-9]{10}$/};\r\n    public static get ONLY_DIGITS() : any {return /^[0-9]*$/};\r\n    public static get EMAIL_REGEX() : any { return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/}\r\n    public static get TWINTYFOUR_HOURS_REGEX() : any { return /^([0-1]{1}[0-9]|2[0-3]):[0-5][0-9]$/}\r\n\r\n\r\n  }\r\n","export class RestUrl {\r\n    public static get login(): string { return `/users/login`; }\r\n    public static get signUp(): string { return `/users/register`; }\r\n    public static get verifyOTP(): string { return `/users/verifyotp`; }\r\n    public static get forgetPassword(): string { return `/users/forgetPwd`; }\r\n    public static get resetUser(): string { return '/users/resetPwd'; }\r\n    public static get astroCreateProfile(): string { return '/users/updateprofile'; }\r\n    public static get getAstroListingApi(): string { return '/users/getastrologerslist'; }\r\n    // public static get getAstroListingApi(): string { return '/users/listOfAstrologers'; }\r\n    public static get loginFirebase(): string { return '/users/firebaseId'; }\r\n\r\n    public static get getAstro(): string { return '/users/listOfAstrologers'; }\r\n    public static get makeCall(): string { return '/users/call'; }\r\n\r\n    public static get submitReport(): string { return '/users/sendreport'; }\r\n    public static get submitQAReport(): string { return '/users/askquestion'; }\r\n\r\n    //Admin Dashboard\r\n\r\n    public static get getReportByAstroId(): string { return '/users/getreports'; }\r\n    public static get getQuestionByAstroId(): string { return '/users/getquestions'; }\r\n    public static get replyReports(): string { return '/users/respondReport'; }\r\n\r\n\r\n\r\n    // payment\r\n    public static get placeOrder(): string { return '/place/order'; }\r\n    public static get walletDetail(): string { return '/get/wallet'; }\r\n    public static get verifySignature(): string { return '/rayzorpay/verify/signature'; }\r\n    public static get updateWalletInfo(): string { return '/update/wallet'; }\r\n\r\n\r\n\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RestService } from '../restApi/rest.service';\r\n// import { RestUrl } from '../../constant/rest-url.constants';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthenticationService {\r\n\r\n  constructor(private http: HttpClient, private restService: RestService) { }\r\n\r\n//   login(data) {\r\n//     return this.restService.create(RestUrl.login, data);\r\n//  }\r\n\r\n\r\n\r\n  getAuthenticatedToken() {\r\n    let token = JSON.parse(JSON.stringify(sessionStorage.getItem('token')));\r\n    console.log(\"get token console \",token);\r\n      return token\r\n  }\r\n\r\n  getUser() {\r\n    return  JSON.parse(sessionStorage.getItem('userData'));\r\n  }\r\n\r\n  // isUserLoggedIn() {\r\n  //   const user = sessionStorage.getItem('username');\r\n  //   return !(user === null);\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n} from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../restApi/rest.service';\r\nimport { RestUrl } from '../../constant/rest-url.constants';\r\nimport { ProfileUpdateService } from '../restApi/profileUpdate.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CommonService {\r\n\r\n  horizontalPosition: MatSnackBarHorizontalPosition;\r\n  verticalPosition: MatSnackBarVerticalPosition;\r\n\r\n  constructor(private _snackBar: MatSnackBar,private restService: RestService, private ipAddressService : ProfileUpdateService) {}\r\n\r\n  tostMessage(message) {\r\n    this._snackBar.open(message,'close', {\r\n      duration: 10 * 1000,\r\n      horizontalPosition : \"center\",\r\n      verticalPosition : \"top\"\r\n  })\r\n  }\r\n\r\n  // getOTP(data){\r\n  //   console.log(\"data in sign up\", data)\r\n  //   return this.restService.create(RestUrl.verifyOTP, data)\r\n  // }\r\n\r\n  verifyOTP(data): Observable<any> {\r\n    console.log(\"data in sign up\", data)\r\n    return this.restService.create(RestUrl.verifyOTP, data)\r\n  }\r\n\r\n  makeCall(data): Observable<any> {\r\n    return this.restService.create(RestUrl.makeCall, data)\r\n  }\r\n\r\n  getIPAddress(): Observable<any> {\r\n    return this.ipAddressService.getIPAddress(\"http://api.ipify.org?format=json\");\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport { reject } from '../../../../../node_modules/@types/q';\r\nimport { ObservableDataService } from '../../../observables/behaviourSubject.service';\r\nimport { loginService } from '../../../login/login.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirebaseService {\r\n  getFirebaseUserData: any;\r\n  allUserList = [];\r\n\r\n  constructor(public observableService : ObservableDataService, private _loginService : loginService) {\r\n    console.log(firebase, 'firebase');\r\n    \r\n    if(sessionStorage.getItem('userFirebaseData')){\r\n      this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n    }\r\n\r\n    this.getAllUserList();\r\n\r\n    this.messageListener();\r\n  }\r\n\r\n  loginFirebase(data): Promise<any>{\r\n    let promise = new Promise((resolve, reject) => {\r\n      firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(response => {\r\n        console.log(response, 'response');\r\n        if(response.user.uid){\r\n          firebase.database().ref().child('Users').child(response.user.uid).once('value', (snapShot) => {\r\n            console.log(snapShot.val(), 'user data');\r\n            // return snapShot.val();\r\n\r\n            sessionStorage.setItem('userFirebaseData', JSON.stringify(snapShot.val()));\r\n            resolve(snapShot.val());\r\n          })\r\n        }\r\n      }, error=> {\r\n        this.signInFirebase(data);\r\n      })\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  signInFirebase(data) : Promise<any>{\r\n    let promise = new Promise((resolve , reject) => {\r\n      firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then(response => {\r\n        let userData = {\r\n          id: response.user.uid,\r\n          imageURL: '',\r\n          status: '',\r\n          username: data.name,\r\n          email: data.email,\r\n          contactNo: data.password\r\n        }\r\n  \r\n        console.log(response.user.uid, 'local id');\r\n        firebase.database().ref().child('Users').child(response.user.uid).set(userData).then(response => {\r\n          console.log(response);\r\n          sessionStorage.setItem('userFirebaseData', JSON.stringify(userData));\r\n          resolve(userData);\r\n\r\n          // if session storage userId\r\n            if(sessionStorage.getItem('userFirebaseData')){\r\n              let firebaseData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n              let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n              if(firebaseData && userData) {\r\n                let requestObj = {\r\n                  userId: userData.userId,\r\n                  firebaseUserId: firebaseData.id\r\n                }\r\n    \r\n                this._loginService.loginFirebase(requestObj).subscribe(response => {\r\n                  if(response.data && response.data.firebaseUserId){\r\n                    console.log('firebase login successfully');\r\n                  }\r\n                })\r\n              }\r\n            }\r\n            // if session storage userId end\r\n        });\r\n      })\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  sendMessages(message): Promise<any>{\r\n    if(sessionStorage.getItem('userFirebaseData')){\r\n      this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n    }    \r\n    let promise = new Promise((resolve, reject) => {\r\n      let sender = this.getFirebaseUserData.id;\r\n      let receiver = sessionStorage.getItem('receiverId');\r\n      let convId ;\r\n      if(sender >  receiver) {\r\n        convId = receiver + '-' + sender;\r\n      }else {\r\n        convId = sender + '-' + receiver;\r\n      }\r\n      let reqObj = {\r\n        sender: this.getFirebaseUserData.id,\r\n        receiver: sessionStorage.getItem('receiverId'),\r\n        isseen: false,\r\n        message: message,\r\n        // timeStamp: new Date().valueOf()\r\n      }\r\n      let key = firebase.database().ref().child('Chats').push().key;\r\n      if(convId && sender && receiver) {\r\n        firebase.database().ref().child('Chats').child(convId).child(key).set(reqObj).then(sendVal => {\r\n          console.log(sendVal, 'send value');\r\n          resolve(reqObj); \r\n        });\r\n      } \r\n    });\r\n    return promise;\r\n  }\r\n\r\n  getAllMessages(): Promise<any>{\r\n    if(sessionStorage.getItem('userFirebaseData')){\r\n      this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n    }    \r\n    let promise = new Promise((resolve, reject) => {\r\n      let sender = this.getFirebaseUserData.id;\r\n      let receiver = sessionStorage.getItem('receiverId');\r\n      let convId ;\r\n      if(sender >  receiver) {\r\n        convId = receiver + '-' + sender;\r\n      }else {\r\n        convId = sender + '-' + receiver;\r\n      }\r\n      firebase.database().ref('Chats').child(convId).once('value', (snapShot) => {\r\n        console.log(snapShot.val(), 'value');\r\n        let chatList = [];\r\n        if(snapShot.val()){\r\n          Object.values(snapShot.val()).forEach(list => {\r\n            if(list){\r\n              chatList.push(list);\r\n            }\r\n          });\r\n          // return chatList;\r\n          resolve(chatList);\r\n        }       \r\n      })\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  messageListener(){\r\n    if(sessionStorage.getItem('userFirebaseData')){\r\n      this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n    } \r\n    firebase.database().ref().child('Chats').limitToLast(10).on('child_added', snapShot => {\r\n      let sender = this.getFirebaseUserData ? this.getFirebaseUserData.id: null;\r\n      let receiver = sessionStorage.getItem('receiverId');\r\n      let convId ;\r\n      if(sender >  receiver) {\r\n        convId = receiver + '-' + sender;\r\n      }else {\r\n        convId = sender + '-' + receiver;\r\n      }\r\n      if(snapShot.key == convId){\r\n        let value = Object.values(snapShot.val())[Object.values(snapShot.val()).length - 1];\r\n        this.observableService.messageData(value);\r\n        return value\r\n      }\r\n    })\r\n\r\n    firebase.database().ref().child('Chats').on('child_changed', snapShot => {\r\n      if(snapShot.key){\r\n\r\n        let sender = this.getFirebaseUserData ? this.getFirebaseUserData.id: null;\r\n        let receiver = sessionStorage.getItem('receiverId');\r\n        let convId ;\r\n        if(sender >  receiver) {\r\n          convId = receiver + '-' + sender;\r\n        }else {\r\n          convId = sender + '-' + receiver;\r\n        }\r\n\r\n        if(snapShot.key ==  convId){\r\n          let value = Object.values(snapShot.val())[Object.values(snapShot.val()).length - 1];\r\n          this.observableService.messageData(value);\r\n          return value;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // get chat list\r\n  getChatList(){\r\n    let promise = new Promise((resolve, reject) => {\r\n      if(sessionStorage.getItem('userFirebaseData')){\r\n        this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n      } \r\n  \r\n      let chatList = [];\r\n  \r\n      firebase.database().ref('Chats').once('value', snapShot => {\r\n        let allConversationList = snapShot.val();\r\n        if(allConversationList){\r\n          for (let key in allConversationList){\r\n            if(key.includes(this.getFirebaseUserData.id)){\r\n\r\n              let userData: any;\r\n              let lastConversationDetail =  Object.values(allConversationList[key])[Object.values(allConversationList[key]).length - 1];\r\n\r\n              // get user data on login basis \r\n              if(this.getFirebaseUserData && this.getFirebaseUserData.id == lastConversationDetail['sender']){\r\n                userData =  this.allUserList.find(list => list.id == lastConversationDetail['receiver']);\r\n              }else {\r\n                userData =  this.allUserList.find(list => list.id == lastConversationDetail['sender']);\r\n              }\r\n              // get user data end\r\n\r\n              let createChatListObj = {};\r\n              createChatListObj['lastMessage'] = lastConversationDetail['message'];\r\n              createChatListObj['name'] = userData ? userData.username : null;\r\n              createChatListObj['id'] = userData ? userData.id : null;\r\n              createChatListObj['imageURL'] = userData ? userData.imageURL : null;\r\n              createChatListObj['shortName'] = this.getShortName(userData.username);\r\n              createChatListObj['color'] = Math.floor(Math.random()*16777215).toString(16);\r\n              chatList.push(createChatListObj);\r\n            }\r\n          }\r\n\r\n          resolve(chatList);\r\n        }\r\n      })\r\n    });\r\n    return promise;\r\n   \r\n  }\r\n  // get chat list end\r\n\r\n\r\n  getAllUserList(){\r\n    console.log(firebase, 'firebase');\r\n    \r\n    firebase.database().ref('Users').once('value', snapShot => {\r\n      let userList = snapShot.val();\r\n      if(userList) {\r\n        Object.values(snapShot.val()).forEach(list => this.allUserList.push(list));\r\n      }\r\n    })\r\n  }\r\n\r\n  // short name\r\n  getShortName(name){\r\n    if(name){\r\n      let namelist = name.split(' ');\r\n      if(namelist && namelist.length > 1){\r\n        return namelist[0].charAt(0) + namelist[1].charAt(0);\r\n      }else {\r\n        return namelist[0].charAt(0);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpEvent,\r\n    HttpErrorResponse\r\n  } from \"@angular/common/http\";\r\n  import { Injectable } from \"@angular/core\";\r\n  import { AuthenticationService } from \"../authentication/authentication.service\";\r\n  import { tap, retry, catchError } from 'rxjs/operators';\r\n  import { Observable, throwError } from 'rxjs';\r\n  import { CommonService } from '../commonService/common.service';\r\n\r\n\r\n  @Injectable({\r\n    providedIn: \"root\"\r\n  })\r\n  export class HttpIntercepterBasicAuthService implements HttpInterceptor {\r\n\r\n    constructor(private _commonService: CommonService, private basicAuthenticationService: AuthenticationService) {\r\n\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler) : Observable<HttpEvent<any>>  {\r\n\r\n      let basicAuthHeaderString = this.basicAuthenticationService.getAuthenticatedToken();\r\n      console.log(\"basicAuthHeaderString +++++++++++++ \",basicAuthHeaderString)\r\n\r\n      if (basicAuthHeaderString) {\r\n        console.log(\"if condition\");\r\n        request = request.clone({\r\n          setHeaders: {\r\n            'Authorization': basicAuthHeaderString,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n      } else {\r\n        console.log(\"else condition\");\r\n        request = request.clone({\r\n          setHeaders: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n      }\r\n\r\n      return next.handle(request).pipe(\r\n        tap(\r\n          event => this.handleResponse(request, event),\r\n          error => this.handleError(request, error)\r\n        )\r\n      );\r\n    }\r\n\r\n    handleResponse(req: HttpRequest<any>, event) {\r\n      if (event instanceof HttpResponse) {\r\n           if (event.headers.get('Authorization')) {\r\n                sessionStorage.setItem('token', event.headers.get('Authorization'));\r\n           }\r\n      }\r\n    }\r\n\r\n    handleError(req: HttpRequest<any>, error) {\r\n      let errorMessage = '';\r\n\r\n      if (error.error instanceof ErrorEvent) {\r\n\r\n        // client-side error\r\n\r\n        errorMessage = `Error: ${error.error.message}`;\r\n\r\n      } else {\r\n\r\n        // server-side error\r\n        // this._commonService.tostMessage(errorMessage)\r\n        errorMessage = `Error Code: ${error.error.status}\\nMessage: ${error.error.message}`;\r\n\r\n      }\r\n\r\n      this._commonService.tostMessage(errorMessage)\r\n\r\n\r\n      return throwError(errorMessage);\r\n\r\n      //   if (event instanceof HttpErrorResponse) {\r\n      //       if(event.headers.get('Authorization')){\r\n      //       //  console.log('handleError',event.headers.get('Authorization'));\r\n      //           sessionStorage.setItem('token', event.headers.get('Authorization'));\r\n      //       }\r\n      // }\r\n    }\r\n  }\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable, pipe } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { LoaderService } from '../loader/loader.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderInterceptorService {\r\n\r\n     constructor(private loaderService: LoaderService) { }\r\n\r\n      intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        //  console.log('HttpRequestHttpRequest');\r\n\r\n        this.showLoader();\r\n\r\n        return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\r\n          if (event instanceof HttpResponse) {\r\n            this.onEnd();\r\n          }\r\n        },\r\n          (err: any) => {\r\n            this.onEnd();\r\n        }));\r\n      }\r\n\r\n      private onEnd(): void {\r\n        this.hideLoader();\r\n      }\r\n\r\n      private showLoader(): void {\r\n        this.loaderService.show();\r\n      }\r\n\r\n      private hideLoader(): void {\r\n        this.loaderService.hide();\r\n      }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n  private loaderSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  get loaderState(){\r\n    return this.loaderSubject.asObservable();\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  show() {\r\n\r\n    this.loaderSubject.next( true );\r\n    // console.log(\"this.loaderSubject show \",this.loaderSubject.subscribe(res=>{\r\n    //   console.log(\"ressssss\",res);\r\n    // }))\r\n  }\r\n\r\n  hide() {\r\n\r\n    this.loaderSubject.next( false );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestService } from '../restApi/rest.service';\r\nimport { RestUrl } from '../../constant/rest-url.constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentService {\r\n\r\n  constructor(private restService: RestService) { }\r\n\r\n  orderPlace(data){\r\n    return this.restService.createPayment(RestUrl.placeOrder, data);\r\n  }\r\n\r\n  walletInfo(data){\r\n    return this.restService.getPayment(RestUrl.walletDetail, data);\r\n  }\r\n\r\n  signatureVerify(data) {\r\n    return this.restService.getPayment(RestUrl.verifySignature, data);\r\n  }\r\n\r\n  updateWalletInfo(data) {\r\n    return this.restService.patch(RestUrl.updateWalletInfo, data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\n// import { callBackendApi } from '../../constant/rest-url.constants';\r\nimport { HttpHeaders, HttpBackend } from \"@angular/common/http\";\r\nimport { AuthenticationService } from '../authentication/authentication.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ProfileUpdateService {\r\n  getAuthenticatedToken;\r\n  constructor(private http: HttpClient, handler: HttpBackend, private _authenticationService : AuthenticationService) {\r\n     this.http = new HttpClient(handler);\r\n     this.getAuthenticatedToken = this._authenticationService.getAuthenticatedToken()\r\n  }\r\n\r\n  public createProfile = (route: string, body) => {\r\n    console.log(\"route\",route,\" createProfile body\",body);\r\n    return this.http.post(environment.urlAddress + route, body);\r\n  };\r\n\r\n  public createFormData = (route: string, body) => {\r\n    console.log(\"route\",route,\" createProfile body\",body);\r\n    let setHeaders = new HttpHeaders({\r\n      'Authorization':  this.getAuthenticatedToken,\r\n    })\r\n    return this.http.post(environment.urlAddress + route, body, {headers : setHeaders})\r\n  //   .pipe(\r\n  //     catchError(this.handleError)\r\n  // );\r\n  };\r\n\r\n  public getIPAddress = (route: string) => {\r\n    console.log(\"**GET getIPAddress **\", \"route\",route);\r\n    return this.http.get(route);\r\n  };\r\n\r\n  handleError(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n        // client-side error\r\n        errorMessage = `Error: ${error.error.message}`;\r\n        alert(\"Client Side Error \"+ errorMessage);\r\n    } else {\r\n        // server-side error\r\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n        alert(\"Server Side Error \"+ errorMessage);\r\n\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n}\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\n// import { callBackendApi } from '../../constant/rest-url.constants';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n  private messageSource = new BehaviorSubject(null);\r\n  checkUserData = this.messageSource.asObservable();\r\n\r\n\r\n\r\n  constructor(private http: HttpClient ) { }\r\n\r\n  checkUser(message: string) {\r\n    this.messageSource.next(message)\r\n  }\r\n\r\n\r\n  public create = (route: string, body) => {\r\n    console.log(\"route\",route,\"body\",body);\r\n    return this.http.post(environment.urlAddress + route, body);\r\n  };\r\n\r\n  public get = (route: string) => {\r\n    console.log(\"**GET**\", \"route\",route);\r\n    return this.http.get(environment.urlAddress + route);\r\n  };\r\n\r\n\r\n  \r\n  public createPayment = (route: string, body) => {\r\n    console.log(\"route\",route,\"body\",body);\r\n    return this.http.post(environment.paymentUrlAddress + route, body);\r\n  };\r\n\r\n  public getPayment = (route: string, headerParam: any) =>{\r\n    return this.http.get(environment.paymentUrlAddress+ route, {params : headerParam})\r\n  }\r\n  public patch = (route: string, headerParam: any) =>{\r\n    console.log(environment.paymentUrlAddress+ route, 'url');\r\n    return this.http.patch(environment.paymentUrlAddress+ route, {}, {params : headerParam})\r\n  }\r\n\r\n\r\n\r\n  // public delete = (route: string) => {\r\n  //   return this.http.delete(\r\n  //     this.createCompleteRoute(route, environment.urlAddress)\r\n  //   );\r\n  // };\r\n\r\n  // private createCompleteRoute = (route: string, envAddress: string) => {\r\n  //   if (callBackendApi) {\r\n  //     return `${envAddress + route}`;\r\n  //   } else {\r\n  //     return `${route}`;\r\n  //   }\r\n  // };\r\n}\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant';\r\nimport { signUpService } from './sign-up.service';\r\nimport {CommonService} from '../shared/service/commonService/common.service'\r\nimport { FirebaseService } from '../shared/service/firebase/firebase.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  signUpValidateForm: FormGroup;\r\n  otpForm: FormGroup;\r\n  isVisible:boolean = false;\r\n  loginResponseData;\r\n  message;\r\n\r\n  @Output()\r\n  outputSignUpData: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _signUpService : signUpService, private _commonService : CommonService, public firebaseService: FirebaseService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.signUpValidateForm = this._formBuilder.group({\r\n      name           : ['', [Validators.required]],\r\n      email          : ['', [Validators.required, Validators.email]],\r\n      countryCode    : ['', [Validators.required]],\r\n      contactNo      : ['', [Validators.required, this.mobileNumber]],\r\n      password       : ['', [Validators.required, this.passwordPattern]],\r\n      userType          : ['', [Validators.required]]\r\n    });\r\n\r\n    this.otpForm = this._formBuilder.group({\r\n      otp : ['',[Validators.required]]\r\n    });\r\n\r\n  }\r\n\r\n\r\n  submitForm(value: any){\r\n    for (const key in this.signUpValidateForm.controls) {\r\n        this.signUpValidateForm.controls[key].markAsDirty();\r\n        this.signUpValidateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n\r\n      this._signUpService.signUp(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n        // responseData.status = 200;\r\n        let resonseMessage = responseData.message;\r\n\r\n        if(responseData.status == 200) {\r\n          this.isVisible = true;\r\n\r\n          // fire base register\r\n          let firebaseLoginReq = {\r\n            email: this.signUpValidateForm.value.email,\r\n            password: this.signUpValidateForm.value.contactNo,\r\n            name: this.signUpValidateForm.value.name\r\n          }\r\n          this.firebaseService.signInFirebase(firebaseLoginReq);\r\n          // fire base register end\r\n        } else {\r\n          this._commonService.tostMessage(resonseMessage)\r\n        }\r\n\r\n        })\r\n  }\r\n\r\n  otpSubmitForm(value: any) {\r\n    console.log(\"submit Form \",value);\r\n\r\n    let requestData = {\r\n      contactNo : this.signUpValidateForm.value.contactNo,\r\n      otp : value.otp,\r\n      userType : this.signUpValidateForm.value.userType\r\n    }\r\n\r\n    this._commonService.verifyOTP(requestData).subscribe((responseData) => {\r\n      console.log(\"responseData login \",responseData);\r\n      responseData.status = 200;\r\n\r\n      let resonseMessage = responseData.message;\r\n\r\n      if(responseData.status == 200) {\r\n        this._commonService.tostMessage(resonseMessage)\r\n        this.isVisible = false;\r\n        this.message = \"User registered and verified Successfully, Please Login!\"\r\n        this.signUpValidateForm.reset();\r\n        // this.outputSignUpData.emit(true);\r\n      } else {\r\n        this._commonService.tostMessage(resonseMessage)\r\n        this.message = \"OTP invalid, please resend your OTP!\"\r\n        this.signUpValidateForm.reset();\r\n        // this.outputSignUpData.emit(false);\r\n      }\r\n\r\n    });\r\n\r\n\r\n    // this.dialogRef.close(value);\r\n  }\r\n\r\n  passwordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n    console.log(\"passwordPattern ----->\",control.value)\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n      return {};\r\n    }else{\r\n      return { passErr: true, error: true };\r\n    }\r\n  }\r\n\r\n  mobileNumber = (control: FormControl): {[s: string]: boolean} => {\r\n\r\n    console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n      return {};\r\n    } else {\r\n\r\n      return { mobileErr: true, error: true };\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-wrapper\">\r\n<h2 >{{message}}</h2>\r\n\r\n<form name=\"validateForm\" *ngIf=\"!isVisible\" [formGroup]=\"signUpValidateForm\" novalidate (ngSubmit)=\"submitForm(signUpValidateForm.value)\">\r\n\r\n  <mat-form-field class=\"form-field-width\">\r\n      <mat-label>Full Name</mat-label>\r\n      <input matInput formControlName=\"name\">\r\n      <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n      <mat-error>\r\n          Name is required\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width mt-2\">\r\n    <mat-label>Select Type</mat-label>\r\n    <mat-select name=\"userType\" formControlName=\"userType\">\r\n      <mat-option value=1 >User</mat-option>\r\n      <mat-option value=2 >Astrolloger</mat-option>\r\n    </mat-select>\r\n    <mat-error *ngIf=\"signUpValidateForm.get('userType').hasError('required')\">\r\n      Login type is required!\r\n  </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n    <mat-label>Select Country Code</mat-label>\r\n    <mat-select name=\"countryCode\" formControlName=\"countryCode\">\r\n      <mat-option value=\"+1\" >+1 (USA)</mat-option>\r\n      <mat-option value=\"+886\" >+886 (Taiwan)</mat-option>\r\n      <mat-option value=\"+91\" >+91 (India)</mat-option>\r\n    </mat-select>\r\n    <mat-error *ngIf=\"signUpValidateForm.get('countryCode').hasError('required')\">\r\n      Country Code is required!\r\n    </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n      <mat-label>Mobile Number</mat-label>\r\n      <input matInput formControlName=\"contactNo\">\r\n      <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('contactNo').hasError('required')\">\r\n          Mobile number is required!\r\n      </mat-error>\r\n      <mat-error\r\n          *ngIf=\"!signUpValidateForm.get('contactNo').hasError('required') &&\r\n                  signUpValidateForm.get('contactNo').hasError('mobileErr')\">\r\n          Please enter a valid mobile number!\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput formControlName=\"email\">\r\n      <mat-icon matSuffix class=\"secondary-text\">mail</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('email').hasError('required')\">\r\n          Email is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('email').hasError('email')\">\r\n          Please enter a valid email address\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Password</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"password\">\r\n      <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('password').hasError('required')\">\r\n        Password is required!\r\n      </mat-error>\r\n      <mat-error\r\n            *ngIf=\"!signUpValidateForm.get('password').hasError('required') &&\r\n                    signUpValidateForm.get('password').hasError('passErr')\">\r\n            *Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n\r\n\r\n  <!-- <mat-form-field class=\"form-field-width\">\r\n      <mat-label>Password (Confirm)</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"passwordConfirm\">\r\n      <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('passwordConfirm').hasError('required')\">\r\n          Password confirmation is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"!signUpValidateForm.get('passwordConfirm').hasError('required') &&\r\n                         signUpValidateForm.get('passwordConfirm').hasError('passwordsNotMatching')\">\r\n          Passwords must match\r\n      </mat-error>\r\n  </mat-form-field> -->\r\n\r\n  <!-- <div class=\"terms\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <mat-checkbox name=\"terms\" aria-label=\"Accept\" required>\r\n          <span>Accept</span>\r\n      </mat-checkbox>\r\n      <a href=\"#\">terms and conditions</a>\r\n  </div> -->\r\n\r\n  <button mat-raised-button color=\"primary\" class=\"submit-button mt-5 mr-3\" aria-label=\"CREATE AN ACCOUNT\"\r\n          [disabled]=\"signUpValidateForm.invalid\">\r\n      Sign Up\r\n  </button>\r\n  <button mat-stroked-button color=\"warn\" class=\"submit-button mt-3\" aria-label=\"Cancel\" [mat-dialog-close]=\"\">\r\n    Cancel\r\n  </button>\r\n\r\n</form>\r\n\r\n <!-- OTP Form -->\r\n <div class=\"otp-wrapper\" *ngIf=\"isVisible\">\r\n  <form name=\"otpForm\" [formGroup]=\"otpForm\" novalidate (ngSubmit)=\"otpSubmitForm(otpForm.value)\">\r\n\r\n      <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>OTP</mat-label>\r\n        <input matInput formControlName=\"otp\">\r\n        <mat-icon matSuffix class=\"secondary-text\">code</mat-icon>\r\n        <mat-error *ngIf=\"otpForm.get('otp').hasError('required')\">\r\n            OTP is required!\r\n        </mat-error>\r\n        <!-- <mat-error\r\n            *ngIf=\"!otpForm.get('mobile').hasError('required') &&\r\n                    otpForm.get('mobile').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <button mat-raised-button color=\"primary\" class=\"submit-button mt-3\" aria-label=\"LOGIN\"\r\n        [disabled]=\"otpForm.invalid\">\r\n            Submit\r\n      </button>\r\n\r\n  </form>\r\n</div>\r\n\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class signUpService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  signUp(data): Observable<any> {\r\n    console.log(\"data in sign up\", data)\r\n    return this.restService.create(RestUrl.signUp, data)\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Observable } from 'rxjs';\r\nimport { LoaderService } from '../shared/service/loader/loader.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n  isSpinning$: Observable<boolean>;\r\n  show : boolean;\r\n  constructor(private spinner: NgxSpinnerService,   private loaderService: LoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // console.log(\"oninit spinner \");\r\n\r\n    // this.show = true;\r\n    // this.spinner.show();\r\n\r\n    this.isSpinning$ = this.loaderService.loaderState;\r\n\r\n    this.isSpinning$.subscribe(res=> {\r\n      console.log(\"res of loader \",res);\r\n      if(res){\r\n        this.show = true;\r\n        this.spinner.show();\r\n      } else {\r\n        this.show = false;\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"center\" *ngIf=\"show\">\r\n  <ngx-spinner> </ngx-spinner>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PaymentService } from '../shared/service/payment/payment.service';\r\nimport { HttpParams } from '../../../node_modules/@angular/common/http';\r\nimport { FormGroup, FormControl, Validators } from '../../../node_modules/@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-wallet',\r\n  templateUrl: './wallet.component.html',\r\n  styleUrls: ['./wallet.component.scss']\r\n})\r\nexport class WalletComponent implements OnInit {\r\n\r\n  walletInfo: any;\r\n  viewWallet: boolean = false;\r\n  walletForm: FormGroup;\r\n  rechargeList = [];\r\n  selectedRechargeAmount: any;\r\n  constructor(public paymentService: PaymentService) {\r\n    this.walletForm = new FormGroup({\r\n      walletAmount: new FormControl('', [Validators.required])\r\n    });\r\n\r\n\r\n    // recharge list\r\n    this.rechargeList = [\r\n      {\r\n        symbol: '₹',\r\n        amount: 100,\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 200\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 300\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 500\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 1000\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 2000\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 3000\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 5000\r\n      }\r\n    ];\r\n    // recharge list end\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getWalletInfo();\r\n  }\r\n\r\n  getWalletInfo(){\r\n    if(sessionStorage.getItem('userData')){\r\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\n      let params = new HttpParams().set('userId', userData.userId);\r\n\r\n      this.paymentService.walletInfo(params).subscribe(response => {\r\n        if(response){\r\n          this.walletInfo = response;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  addWallet(){\r\n    this.viewWallet = true;\r\n  }\r\n\r\n  rechargeWallet(formData){\r\n    if(formData.valid) {\r\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n      let reqObj = { \r\n        \"amount\": formData.value.walletAmount,\r\n        \"currency\": \"INR\",\r\n        \"userId\": userData.userId,\r\n        \"recieptId\": this.makeOrderid()\r\n     }\r\n\r\n     \r\n      this.paymentService.orderPlace(reqObj).subscribe(response => {\r\n        this.walletForm.patchValue({walletAmount: ''});\r\n        this.selectedRechargeAmount = null;\r\n        console.log(response, 'place order');\r\n        if(response) {\r\n          const options: any = {\r\n            key: 'rzp_test_ZeUhqzQZ4q0Gbg',\r\n            amount: response['amount'], // amount should be in paise format to display Rs 1255 without decimal point\r\n            currency: response['currency'],\r\n            name: '', // company name or product name\r\n            description: '',  // product description\r\n            image: '/assets/images/logo/PNG/font120px.png', // company logo or product image\r\n            order_id: response['id'], // order_id created by you in backend\r\n            modal: {\r\n              // We should prevent closing of the form when esc key is pressed.\r\n              escape: false,\r\n            },\r\n            notes: {\r\n              // include notes if any\r\n            },\r\n            theme: {\r\n              color: '#f9a825'\r\n            }\r\n          };\r\n          options.handler = ((response, error) => {\r\n            options.response = response;\r\n            console.log(response);\r\n            console.log(options);\r\n\r\n            // call your backend api to verify payment signature & capture transaction\r\n            if(response) {\r\n              this.verifySignature(response);\r\n\r\n            }\r\n\r\n          });\r\n          options.modal.ondismiss = (() => {\r\n            // handle the case when user closes the form while transaction is in progress\r\n            console.log('Transaction cancelled.');\r\n          });\r\n          const rzp = new window['Razorpay'](options);\r\n          rzp.open();\r\n        }\r\n      })\r\n    }  \r\n  }\r\n\r\n\r\n  verifySignature(orderDetail){\r\n    if(orderDetail) {\r\n      let params = new HttpParams().set('signature', orderDetail.razorpay_signature).set('orderId', orderDetail.razorpay_order_id).set(\"paymentId\", orderDetail.razorpay_payment_id);\r\n      this.paymentService.signatureVerify(params).subscribe(response => {\r\n        console.log(response, 'response signayture');\r\n        if(response){\r\n          this.updateWallet(orderDetail)\r\n        }\r\n      })\r\n    }  \r\n  }\r\n\r\n  updateWallet(orderInfo){\r\n    if(orderInfo){\r\n      // let params = new HttpParams().set('userId', 'balatwo').set(\"orderId\", orderInfo.razorpay_order_id);\r\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n      let params = {\r\n        userId: userData.userId,\r\n        orderId: orderInfo.razorpay_order_id\r\n      }\r\n      this.paymentService.updateWalletInfo(params).subscribe(response => {\r\n        console.log(response, 'wallet update');\r\n        \r\n      })\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  selectRechargeAmount(rechargeAmount){\r\n    if(rechargeAmount){\r\n      this.selectedRechargeAmount = rechargeAmount.amount;\r\n      this.walletForm.patchValue({\r\n        walletAmount: rechargeAmount.amount\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // make order id\r\n  makeOrderid() {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < 12; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n\r\n    if(result) {\r\n      result = \"recieptId_\"+result;\r\n    }\r\n    console.log(result, 'result');\r\n    return result;\r\n }\r\n  // make order id end\r\n  \r\n  \r\n\r\n}\r\n","<div class=\"wallet\">\r\n   <div class=\"container\">\r\n       <div class=\"row\">\r\n           <div class=\"col-10 offset-md-1\">\r\n              <mat-card class=\"wallet-header\">\r\n                <div class=\"clearfix\">\r\n                        <div class=\"float-left\">\r\n                            <div class=\"wallet-info\">\r\n                                <span class=\"money-symbol\">₹</span>\r\n                                <span class=\"amount\">{{(walletInfo?.amount) ? walletInfo?.amount: '0'}}</span>\r\n                                <span class=\"d-block mt-2\">SaiAstro Wallet Balance</span>\r\n                            </div>\r\n                            <!-- <span>\r\n                                {{walletInfo?.amount}}\r\n                            </span> -->\r\n                        </div>\r\n                        <div class=\"float-right\">\r\n                            <button mat-raised-button color=\"primary\" (click)=\"addWallet()\" class=\"mt-2\">Add Money to Wallet</button>\r\n                        </div>\r\n                    </div>\r\n              </mat-card>\r\n              <mat-card class=\"add-wallet-money\" *ngIf=\"viewWallet\">\r\n                <div class=\"wallet-img-holder\">\r\n                    <img src=\"/assets/images/social/wallet.png\" alt=\"\" class=\"img-fluid\">\r\n                </div>\r\n                <form [formGroup]=\"walletForm\" class=\"wallet-form\">\r\n                    <div class=\"recharge-list mb-5\">\r\n                        <span class=\"list\" *ngFor=\"let list of rechargeList; let i = index\" (click)=\"selectRechargeAmount(list)\" [ngClass]=\"(selectedRechargeAmount == list.amount) ? 'active': '' \">{{list.symbol}} {{list.amount}}</span>\r\n                    </div>\r\n                    <div class=\"field-wrapper\">\r\n                        <mat-form-field class=\"example-full-width w-100\">\r\n                              <input matInput placeholder=\"Enter Amount to be added in wallet\" formControlName=\"walletAmount\">\r\n                        </mat-form-field>\r\n                    </div>                 \r\n                    <div class=\"text-center\">\r\n                        <button mat-raised-button color=\"primary\" [disabled]=\"walletForm.invalid\" (click)=\"rechargeWallet(walletForm)\">Recharge</button>\r\n                    </div>\r\n                </form>\r\n              </mat-card>\r\n           </div>\r\n       </div>  \r\n   </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  urlAddress: 'http://ec2-3-21-75-140.us-east-2.compute.amazonaws.com:3000',\r\n  paymentUrlAddress: 'http://ec2-3-21-75-140.us-east-2.compute.amazonaws.com:3001'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}