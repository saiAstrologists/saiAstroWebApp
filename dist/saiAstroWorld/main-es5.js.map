{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.service.ts","webpack:///src/app/material-module.ts","webpack:///src/app/shared/constant/regex-constant.ts","webpack:///src/app/shared/constant/rest-url.constants.ts","webpack:///src/app/shared/service/authentication/authentication.service.ts","webpack:///src/app/shared/service/http/http-intercepter-basic-auth.service.ts","webpack:///src/app/shared/service/restApi/rest.service.ts","webpack:///src/app/sign-up/sign-up.component.ts","webpack:///src/app/sign-up/sign-up.component.html","webpack:///src/app/sign-up/sign-up.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","PagesModule","AppRoutingModule","forRoot","imports","AppComponent","dialog","title","reason","sidenav","close","dialogRef","open","width","afterClosed","subscribe","result","console","log","openDialog","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","LoginComponent","_formBuilder","_loginService","isVisible","mobileNumber","control","value","required","match","ONLY_NUMBER","mobileErr","error","passwordPattern","PASSWORD_REGEX","passErr","validateForm","group","mobile","password","type","otpForm","otp","key","controls","markAsDirty","updateValueAndValidity","login","responseData","resonseMessage","message","status","alert","signUpSubmitForm","loginService","restService","data","create","providedIn","MaterialModule","RegexConstant","RestUrl","AuthenticationService","http","token","JSON","parse","sessionStorage","getItem","HttpIntercepterBasicAuthService","basicAuthenticationService","request","next","basicAuthHeaderString","getAuthenticatedToken","clone","setHeaders","handle","pipe","event","handleResponse","handleError","headers","get","setItem","RestService","route","body","post","urlAddress","SignUpComponent","_signUpService","outputSignUpData","signUpValidateForm","name","email","signUp","emit","signUpService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page/home-page.component'\n\nconst routes: Routes = [\n\n  { path: '' , loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)}\n  // { path: '' , component: HomePageComponent}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild } from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { LoginComponent } from './login/login.component'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'saiAstroWorld';\n  @ViewChild('sidenav') sidenav: MatSidenav;\n\n  constructor(public dialog: MatDialog){}\n\n  reason = '';\n\n  close(reason: string) {\n    this.reason = reason;\n    this.sidenav.close();\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(LoginComponent, {\n      width: '500px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed',result);\n    });\n  }\n}\n","<mat-sidenav-container\r\n    class=\"sidenav-container\" (backdropClick)=\"close('backdrop')\">\r\n\r\n  <mat-sidenav class=\"drawer-container\" #sidenav [fixedInViewport]=\"true\" (keydown.escape)=\"close('escape')\" disableClose>\r\n    <!-- <button mat-button  (click)=\"close('toggle button')\">X</button> -->\r\n      <div class=\"side-bar-logo\"><img class=\"mb-2\" src=\"../assets/images/logo/PNG/font120px.png\"></div>\r\n      <div class=\"list-group side-bar-quick-link\" id=\"list-tab\" role=\"tablist\">\r\n        <a class=\"list-group-item list-group-item-action active\" id=\"astro-talk\" data-toggle=\"list\" href=\"#astro-talk\" role=\"tab\" aria-controls=\"astro-talk\">Talk to Astrologer</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"horoscope\" data-toggle=\"list\" href=\"#horoscope\" role=\"tab\" aria-controls=\"horoscope\">Horoscope 2020</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"kundli\" data-toggle=\"list\" href=\"#kundli\" role=\"tab\" aria-controls=\"kundli\">Kundli</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-mall\" data-toggle=\"list\" href=\"#astro-mall\" role=\"tab\" aria-controls=\"astro-mall\">AstroMall</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"blog\" data-toggle=\"list\" href=\"#blog\" role=\"tab\" aria-controls=\"blog\">Blog</a>\r\n      </div>\r\n\r\n      <!-- <li><a>Talk to Astrologer</a></li>\r\n      <li><a>Horoscope 2020</a></li>\r\n      <li><a>Kundli</a></li>\r\n      <li><a>AstroMall</a></li>\r\n      <li><a>Blog</a></li> -->\r\n\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n\r\n    <mat-toolbar class=\"toolbar-wrapper\">\r\n\r\n      <mat-toolbar-row>\r\n        <button mat-button class=\"menu-button\" (click)=\"sidenav.open()\"><mat-icon aria-hidden=\"false\">view_headline</mat-icon></button>\r\n        <span><img src=\"../assets/images/logo/PNG/font120px.png\"></span>\r\n        <span class=\"example-spacer\"></span>\r\n        <div class=\"quick-link\">\r\n        <span class=\"example-spacer\"></span>\r\n        <span>Talk to Astrologer</span>\r\n        <span>Chat with Astrologer</span>\r\n        <span>Horoscope 2020 </span>\r\n        <span>Kundli</span>\r\n        <span>AstroMall</span>\r\n        <span>Blog</span>\r\n       </div>\r\n        <!-- <button mat-button><mat-icon aria-hidden=\"false\">notifications</mat-icon></button> -->\r\n        <button mat-raised-button color=\"primary\" (click)=\"openDialog()\">Login</button>\r\n        <mat-icon class=\"hm-wallet\" mat-raised-button>account_balance_wallet</mat-icon>\r\n        <!-- <mat-icon  mat-raised-button>login</mat-icon> -->\r\n\r\n        <mat-icon class=\"hm-cart\" mat-raised-button>shopping_cart</mat-icon>\r\n\r\n        <!-- <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example heart icon\">favorite</mat-icon>\r\n        <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example delete icon\">delete</mat-icon> -->\r\n      </mat-toolbar-row>\r\n\r\n    </mat-toolbar>\r\n\r\n      <div class=\"fixed-plugin\">\r\n\r\n          <div class=\"example-button-row\">\r\n            <!-- <button mat-mini-fab>Basic</button>\r\n            <button mat-mini-fab color=\"primary\">Primary</button>\r\n            <button mat-mini-fab color=\"accent\">Accent</button>\r\n            <button mat-mini-fab color=\"warn\">Warn</button>\r\n            <button mat-mini-fab disabled>Disabled</button> -->\r\n            <button mat-mini-fab  aria-label=\"Example icon-button with a heart icon\">\r\n              <mat-icon>chat</mat-icon>\r\n            </button>\r\n            <button mat-mini-fab  aria-label=\"Example icon-button with a heart icon\">\r\n              <mat-icon>phone</mat-icon>\r\n            </button>\r\n            <button mat-mini-fab   aria-label=\"Example icon-button with a heart icon\">\r\n              <mat-icon>assignment</mat-icon>\r\n            </button>\r\n            <button mat-mini-fab   aria-label=\"Example icon-button with a heart icon\">\r\n              <mat-icon>question_answer</mat-icon>\r\n            </button>\r\n          </div>\r\n          <!-- <mat-divider></mat-divider>\r\n          <span class=\"follow-text\">Follow</span>\r\n          <button mat-mini-fab class=\"facebook-color\" aria-label=\"facebook-icon\">\r\n            <i class=\"fa fa-facebook-square\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <button mat-mini-fab color=\"warn\" aria-label=\"youtube-icon\">\r\n            <i class=\"fa fa-youtube-play\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <button mat-mini-fab class=\"instagram-color\" aria-label=\"instagram-icon\">\r\n            <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\r\n          </button> -->\r\n       </div>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n\r\n    <footer class=\"footer-wrapper py-5\">\r\n      <div class=\"footer-top\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-3 footer-about wow fadeInUp animated\" style=\"visibility: visible; animation-name: fadeInUp;\">\r\n              <h3><b>About us</b></h3>\r\n              <p>\r\n                We are a young company always looking for new and creative ideas to help you with our products in your everyday work.\r\n              </p>\r\n              <p>© Company Inc.</p>\r\n                  </div>\r\n            <div class=\"col-md-4 offset-md-1 footer-contact wow fadeInDown animated\" style=\"visibility: visible; animation-name: fadeInDown;\">\r\n              <h3><b>Contact</b></h3>\r\n                  <p><i class=\"fa fa-map-marker-alt\"></i> Demo Address 10, 10136 Turin Italy</p>\r\n                  <p><i class=\"fa fa-phone\"></i> Phone: (0039) 123 45 67 890</p>\r\n                  <p><i class=\"fa fa-envelope\"></i> Email: <a href=\"mailto:hello@domain.com\">hello@domain.com</a></p>\r\n                  <p><i class=\"fa fa-skype\"></i> Skype: you_online</p>\r\n                  </div>\r\n                  <div class=\"col-md-4 footer-links wow fadeInUp animated\" style=\"visibility: visible; animation-name: fadeInUp;\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col\">\r\n                        <h3><b>Links</b></h3>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-6\">\r\n                        <p><a class=\"scroll-link\" href=\"#top-content\">Home</a></p>\r\n                        <p><a href=\"#\">Features</a></p>\r\n                        <p><a href=\"#\">How it works</a></p>\r\n                        <p><a href=\"#\">Our clients</a></p>\r\n                      </div>\r\n                      <div class=\"col-md-6\">\r\n                        <p><a href=\"#\">Plans &amp; pricing</a></p>\r\n                        <p><a href=\"#\">Affiliates</a></p>\r\n                        <p><a href=\"#\">Terms</a></p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"footer-bottom pt-5\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n               <div class=\"col footer-social\">\r\n                    <a href=\"#\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n                    <a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\r\n                    <a href=\"#\"><i class=\"fa fa-instagram\"></i></a>\r\n                  </div>\r\n             </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n\r\n  </mat-sidenav-content>\r\n\r\n  <!-- <button mat-button><mat-icon aria-hidden=\"false\">notifications</mat-icon></button> -->\r\n\r\n</mat-sidenav-container>\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from './material-module';\r\nimport { LoginComponent } from './login/login.component'\r\nimport { HttpIntercepterBasicAuthService } from './shared/service/http/http-intercepter-basic-auth.service';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignUpComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    CarouselModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    // MatSliderModule,\r\n    // MatSidenavModule,\r\n    // MatFormFieldModule,\r\n    // MatSelectModule,\r\n    // MatToolbarModule,\r\n    // MatIconModule,\r\n\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: HttpIntercepterBasicAuthService,\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant'\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { loginService } from './login.service'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  validateForm: FormGroup;\r\n  otpForm: FormGroup;\r\n  isVisible:boolean = false;\r\n\r\n\r\n\r\n  constructor(private _formBuilder: FormBuilder,public dialogRef: MatDialogRef<LoginComponent>, private _loginService : loginService\r\n   ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validateForm = this._formBuilder.group({\r\n      mobile   : ['', [Validators.required, this.mobileNumber]],\r\n      password: ['', [Validators.required, this.passwordPattern]],\r\n      type: [null, Validators.required]\r\n\r\n    });\r\n\r\n    this.otpForm = this._formBuilder.group({\r\n      otp : ['']\r\n     });\r\n\r\n  }\r\n\r\n  submitForm(value: any){\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n      // this._route.navigate(['/profile']);\r\n\r\n      this._loginService.login(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n\r\n        let resonseMessage = responseData.message;\r\n\r\n        if(responseData.status == 200){\r\n          this.isVisible = true;\r\n        } else {\r\n          alert(resonseMessage);\r\n        }\r\n\r\n        })\r\n}\r\n\r\notpSubmitForm(value: any) {\r\n  alert(\"OTP Submited Successfuly\")\r\n  this.dialogRef.close(value);\r\n}\r\n\r\nsignUpSubmitForm(value: any){\r\n  alert(\"Registered Successfuly\")\r\n  this.dialogRef.close(value);\r\n}\r\n\r\nmobileNumber= (control: FormControl): {[s: string]: boolean} => {\r\n\r\n  console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n  if(!control.value) {\r\n    return { required: true };\r\n  } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n    return {};\r\n  } else {\r\n\r\n    return { mobileErr: true, error: true };\r\n  }\r\n}\r\n\r\npasswordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n  console.log(\"passwordPattern ----->\",control.value)\r\n\r\n  if(!control.value) {\r\n    return { required: true };\r\n  }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n    return {};\r\n  }else{\r\n    return { passErr: true, error: true };\r\n  }\r\n}\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\">\r\n  <mat-tab label=\"Login\">\r\n    <div class=\"form-wrapper\">\r\n    <form *ngIf=\"!isVisible\" name=\"validateForm\" [formGroup]=\"validateForm\" novalidate (ngSubmit)=\"submitForm(validateForm.value)\">\r\n\r\n      <mat-form-field class=\"form-field-width\">\r\n        <mat-label>Mobile Number</mat-label>\r\n        <input matInput formControlName=\"mobile\" minlength=\"10\" maxlength=\"10\">\r\n        <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n        <mat-error *ngIf=\"validateForm.get('mobile').hasError('required')\">\r\n            Mobile number is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!validateForm.get('mobile').hasError('required') &&\r\n                    validateForm.get('mobile').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Select Type</mat-label>\r\n      <mat-select name=\"type\" formControlName=\"type\">\r\n        <mat-option value=1>User</mat-option>\r\n        <mat-option value=2>Astrolloger</mat-option>\r\n      </mat-select>\r\n        <mat-error>\r\n          Login type is required!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\">\r\n        <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n        <mat-error *ngIf=\"validateForm.get('password').hasError('required')\">\r\n          Password is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!validateForm.get('password').hasError('required') &&\r\n                    validateForm.get('password').hasError('passErr')\">\r\n            Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n\r\n\r\n    <div class=\"remember-forgot-password\" class=\"d-flex mt-5  justify-content-end\">\r\n        <a class=\"forgot-password\" [routerLink]=\"'/auth/forgot-password-2'\">\r\n            Forgot Password?\r\n        </a>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"primary\" class=\"submit-button mt-3\" aria-label=\"LOGIN\"\r\n            [disabled]=\"validateForm.invalid\">\r\n        LOGIN\r\n    </button>\r\n    </form>\r\n\r\n    <!-- OTP Form -->\r\n   <div class=\"otp-wrapper\" *ngIf=\"isVisible\">\r\n    <form name=\"otpForm\" [formGroup]=\"otpForm\" novalidate (ngSubmit)=\"otpSubmitForm(otpForm.value)\">\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>OTP</mat-label>\r\n          <input matInput formControlName=\"otp\">\r\n          <mat-icon matSuffix class=\"secondary-text\">code</mat-icon>\r\n          <mat-error *ngIf=\"otpForm.get('otp').hasError('required')\">\r\n              OTP is required!\r\n          </mat-error>\r\n          <!-- <mat-error\r\n              *ngIf=\"!otpForm.get('mobile').hasError('required') &&\r\n                      otpForm.get('mobile').hasError('mobileErr')\">\r\n              Please enter a valid mobile number!\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n\r\n        <button mat-raised-button color=\"primary\" class=\"submit-button mt-3\" aria-label=\"LOGIN\"\r\n          [disabled]=\"otpForm.invalid\">\r\n              Submit\r\n        </button>\r\n\r\n    </form>\r\n  </div>\r\n\r\n    <div class=\"separator login\">\r\n      <span class=\"text\">OR</span>\r\n    </div>\r\n\r\n    <div class=\"d-flex  justify-content-center\">\r\n\r\n      <button mat-stroked-button class=\"google\"><i><img src=\"../../assets/images/social/google.png\"></i>\r\n          <b>Log in with Google</b>\r\n      </button>\r\n\r\n      <!-- <button mat-raised-button class=\"facebook\">\r\n          Log in with Facebook\r\n      </button> -->\r\n\r\n    </div>\r\n  </div>\r\n   <!-- loginform ends -->\r\n\r\n\r\n  </mat-tab>\r\n  <mat-tab label=\"Sign Up\">\r\n    <app-sign-up (outputSignUpData)=\"signUpSubmitForm($event)\"></app-sign-up>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class loginService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  login(data): Observable<any> {\r\n    return this.restService.create(RestUrl.login, data)\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */\r\n","export class RegexConstant {\r\n    public static get PASSWORD_REGEX() : any { return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/; };\r\n    public static get ONLY_NUMBER() : any {return /^[0-9]{10}$/};\r\n    public static get EMAIL_REGEX() : any { return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/}\r\n    public static get TWINTYFOUR_HOURS_REGEX() : any { return /^([0-1]{1}[0-9]|2[0-3]):[0-5][0-9]$/}\r\n\r\n\r\n  }\r\n","export class RestUrl {\r\n    public static get login(): string { return `/users/register`; }\r\n    public static get signUp(): string { return `/users/register`; }\r\n\r\n}\r\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RestService } from '../restApi/rest.service';\n// import { RestUrl } from '../../constant/rest-url.constants';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthenticationService {\n\n  constructor(private http: HttpClient, private restService: RestService) { }\n\n//   login(data) {\n//     return this.restService.create(RestUrl.login, data);\n//  }\n\n\n\n  getAuthenticatedToken() {\n    let token = JSON.parse(sessionStorage.getItem('token'));\n    // console.log(\"get token console \",token);\n      return token\n  }\n\n  // getUserRole() {\n  //   if (this.getAuthenticatedUser()) {\n  //     return sessionStorage.getItem('role');\n  //   }\n  // }\n\n  // isUserLoggedIn() {\n  //   const user = sessionStorage.getItem('username');\n  //   return !(user === null);\n  // }\n\n  // logout() {\n  //   return this.restService.getData(RestUrl.logout, false);\n  // }\n\n\n}\n","import {\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpEvent,\r\n    HttpErrorResponse\r\n  } from \"@angular/common/http\";\r\n  import { Injectable } from \"@angular/core\";\r\n  import { AuthenticationService } from \"../authentication/authentication.service\";\r\n  import { tap } from 'rxjs/operators';\r\n\r\n  @Injectable({\r\n    providedIn: \"root\"\r\n  })\r\n  export class HttpIntercepterBasicAuthService implements HttpInterceptor {\r\n    constructor(private basicAuthenticationService: AuthenticationService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n      let basicAuthHeaderString = this.basicAuthenticationService.getAuthenticatedToken();\r\n      console.log(\"basicAuthHeaderString +++++++++++++ \",basicAuthHeaderString)\r\n        request = request.clone({\r\n          setHeaders: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n      // if (basicAuthHeaderString) {\r\n      //   request = request.clone({\r\n      //     setHeaders: {\r\n      //       Authorization: basicAuthHeaderString,\r\n      //       'Content-Type': 'application/json'\r\n      //     }\r\n      //   });\r\n      // } else {\r\n      //   request = request.clone({\r\n      //     setHeaders: {\r\n      //       'Content-Type': 'application/json'\r\n      //     }\r\n      //   });\r\n      // }\r\n      return next.handle(request).pipe(\r\n        tap(\r\n          event => this.handleResponse(request, event),\r\n          error => this.handleError(request, error)\r\n        )\r\n      );\r\n    }\r\n\r\n    handleResponse(req: HttpRequest<any>, event) {\r\n      if (event instanceof HttpResponse) {\r\n           if (event.headers.get('Authorization')) {\r\n                sessionStorage.setItem('token', event.headers.get('Authorization'));\r\n           }\r\n      }\r\n    }\r\n\r\n    handleError(req: HttpRequest<any>, event) {\r\n\r\n        if (event instanceof HttpErrorResponse) {\r\n            if(event.headers.get('Authorization')){\r\n            //  console.log('handleError',event.headers.get('Authorization'));\r\n                sessionStorage.setItem('token', event.headers.get('Authorization'));\r\n            }\r\n      }\r\n    }\r\n  }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\n// import { callBackendApi } from '../../constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public create = (route: string, body) => {\r\n    console.log(\"route\",route,\"body\",body);\r\n    return this.http.post(environment.urlAddress + route, body);\r\n  };\r\n\r\n  // public update = (route: string, body) => {\r\n  //   return this.http.put(\r\n  //     this.createCompleteRoute(route, environment.urlAddress),\r\n  //     body\r\n  //   );\r\n  // };\r\n\r\n  // public delete = (route: string) => {\r\n  //   return this.http.delete(\r\n  //     this.createCompleteRoute(route, environment.urlAddress)\r\n  //   );\r\n  // };\r\n\r\n  // private createCompleteRoute = (route: string, envAddress: string) => {\r\n  //   if (callBackendApi) {\r\n  //     return `${envAddress + route}`;\r\n  //   } else {\r\n  //     return `${route}`;\r\n  //   }\r\n  // };\r\n}\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant';\r\nimport { signUpService } from './sign-up.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  signUpValidateForm: FormGroup;\r\n  otpForm: FormGroup;\r\n  isVisible:boolean = false;\r\n\r\n  @Output()\r\n  outputSignUpData: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _signUpService : signUpService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.signUpValidateForm = this._formBuilder.group({\r\n      name           : ['', [Validators.required]],\r\n      email          : ['', [Validators.required, Validators.email]],\r\n      mobile          : ['', [Validators.required, this.mobileNumber]],\r\n      password       : ['', [Validators.required, this.passwordPattern]],\r\n      type          : ['', [Validators.required]]\r\n    });\r\n\r\n\r\n    this.otpForm = this._formBuilder.group({\r\n      otp : ['']\r\n    });\r\n\r\n\r\n  }\r\n\r\n  submitForm(value: any){\r\n    for (const key in this.signUpValidateForm.controls) {\r\n        this.signUpValidateForm.controls[key].markAsDirty();\r\n        this.signUpValidateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n\r\n      this._signUpService.signUp(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n\r\n        let resonseMessage = responseData.message;\r\n\r\n        if(responseData.status == 200) {\r\n          this.isVisible = true;\r\n        } else {\r\n          alert(resonseMessage);\r\n        }\r\n\r\n        })\r\n  }\r\n\r\n  otpSubmitForm(value: any) {\r\n    this.outputSignUpData.emit(value);\r\n    // this.dialogRef.close(value);\r\n  }\r\n\r\n  passwordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n    console.log(\"passwordPattern ----->\",control.value)\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n      return {};\r\n    }else{\r\n      return { passErr: true, error: true };\r\n    }\r\n  }\r\n\r\n  mobileNumber = (control: FormControl): {[s: string]: boolean} => {\r\n\r\n    console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n      return {};\r\n    } else {\r\n\r\n      return { mobileErr: true, error: true };\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-wrapper\">\r\n\r\n<form name=\"validateForm\" *ngIf=\"!isVisible\" [formGroup]=\"signUpValidateForm\" novalidate (ngSubmit)=\"submitForm(signUpValidateForm.value)\">\r\n\r\n  <mat-form-field class=\"form-field-width\">\r\n      <mat-label>Full Name</mat-label>\r\n      <input matInput formControlName=\"name\">\r\n      <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n      <mat-error>\r\n          Name is required\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width mt-2\">\r\n    <mat-label>Select Type</mat-label>\r\n    <mat-select name=\"type\" formControlName=\"type\">\r\n      <mat-option value=1>User</mat-option>\r\n      <mat-option value=2>Astrolloger</mat-option>\r\n    </mat-select>\r\n    <mat-error *ngIf=\"signUpValidateForm.get('type').hasError('required')\">\r\n      Login type is required!\r\n  </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n      <mat-label>Mobile Number</mat-label>\r\n      <input matInput formControlName=\"mobile\">\r\n      <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('mobile').hasError('required')\">\r\n          Mobile number is required!\r\n      </mat-error>\r\n      <mat-error\r\n          *ngIf=\"!signUpValidateForm.get('mobile').hasError('required') &&\r\n                  signUpValidateForm.get('mobile').hasError('mobileErr')\">\r\n          Please enter a valid mobile number!\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput formControlName=\"email\">\r\n      <mat-icon matSuffix class=\"secondary-text\">mail</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('email').hasError('required')\">\r\n          Email is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('email').hasError('email')\">\r\n          Please enter a valid email address\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Password</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"password\">\r\n      <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('password').hasError('required')\">\r\n        Password is required!\r\n      </mat-error>\r\n      <mat-error\r\n            *ngIf=\"!signUpValidateForm.get('password').hasError('required') &&\r\n                    signUpValidateForm.get('password').hasError('passErr')\">\r\n            *Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n\r\n\r\n  <!-- <mat-form-field class=\"form-field-width\">\r\n      <mat-label>Password (Confirm)</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"passwordConfirm\">\r\n      <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('passwordConfirm').hasError('required')\">\r\n          Password confirmation is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"!signUpValidateForm.get('passwordConfirm').hasError('required') &&\r\n                         signUpValidateForm.get('passwordConfirm').hasError('passwordsNotMatching')\">\r\n          Passwords must match\r\n      </mat-error>\r\n  </mat-form-field> -->\r\n\r\n  <!-- <div class=\"terms\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <mat-checkbox name=\"terms\" aria-label=\"Accept\" required>\r\n          <span>Accept</span>\r\n      </mat-checkbox>\r\n      <a href=\"#\">terms and conditions</a>\r\n  </div> -->\r\n\r\n  <button mat-raised-button color=\"primary\" class=\"submit-button mt-5\" aria-label=\"CREATE AN ACCOUNT\"\r\n          [disabled]=\"signUpValidateForm.invalid\">\r\n      Sign Up\r\n  </button>\r\n\r\n</form>\r\n\r\n <!-- OTP Form -->\r\n <div class=\"otp-wrapper\" *ngIf=\"isVisible\">\r\n  <form name=\"otpForm\" [formGroup]=\"otpForm\" novalidate (ngSubmit)=\"otpSubmitForm(otpForm.value)\">\r\n\r\n      <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>OTP</mat-label>\r\n        <input matInput formControlName=\"otp\">\r\n        <mat-icon matSuffix class=\"secondary-text\">code</mat-icon>\r\n        <mat-error *ngIf=\"otpForm.get('otp').hasError('required')\">\r\n            OTP is required!\r\n        </mat-error>\r\n        <!-- <mat-error\r\n            *ngIf=\"!otpForm.get('mobile').hasError('required') &&\r\n                    otpForm.get('mobile').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <button mat-raised-button color=\"primary\" class=\"submit-button mt-3\" aria-label=\"LOGIN\"\r\n        [disabled]=\"otpForm.invalid\">\r\n            Submit\r\n      </button>\r\n\r\n  </form>\r\n</div>\r\n\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class signUpService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  signUp(data): Observable<any> {\r\n    console.log(\"data in sign up\", data)\r\n    return this.restService.create(RestUrl.signUp, data)\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  urlAddress: 'http://ec2-3-21-75-140.us-east-2.compute.amazonaws.com:3000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}