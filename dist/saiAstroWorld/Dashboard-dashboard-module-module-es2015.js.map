{"version":3,"sources":["./src/app/Dashboard/astro-question/astro-question.component.ts","./src/app/Dashboard/astro-question/astro-question.component.html","./src/app/Dashboard/astro-question/astro-question.service.ts","./src/app/Dashboard/astro-report/astro-report.component.ts","./src/app/Dashboard/astro-report/astro-report.component.html","./src/app/Dashboard/astro-report/astro-report.service.ts","./src/app/Dashboard/astro-report/edit-report/edit-report.component.ts","./src/app/Dashboard/astro-report/edit-report/edit-report.component.html","./src/app/Dashboard/astrologer-dashboard/astrologer-dashboard.component.ts","./src/app/Dashboard/astrologer-dashboard/astrologer-dashboard.component.html","./src/app/Dashboard/dashboard-module.module.ts","./src/app/Dashboard/dashboard-routing.module.ts"],"names":[],"mappings":"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","file":"Dashboard-dashboard-module-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { QuestionReportService } from './astro-question.service';\r\nimport { AuthenticationService } from 'src/app/shared/service/authentication/authentication.service';\r\nimport { CommonService } from 'src/app/shared/service/commonService/common.service';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\n\r\n\r\nexport interface UserData {\r\n  _id: string;\r\n  srNo: string;\r\n  astrologerId: string;\r\n  comment: string;\r\n  createdAt: string;\r\n  employment: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  mobileNumber: string;\r\n  reportSubType: string;\r\n  reportType: number;\r\n  userId: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-astro-question',\r\n  templateUrl: './astro-question.component.html',\r\n  styleUrls: ['./astro-question.component.scss']\r\n})\r\nexport class AstroQuestionComponent implements OnInit {\r\n  displayedColumns: string[] = ['edit','srNo', 'reportSubType', 'firstName', 'mobileNumber'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild('questionSideNav') sidenav: MatSidenav;\r\n  mode = new FormControl('over');\r\n  userData: any;\r\n  validateForm: FormGroup;\r\n  selectedUser;\r\n  users: UserData[];\r\n  characters = 0;\r\n\r\n\r\n  constructor(private _authService : AuthService, private _formBuilder: FormBuilder, private _authenticationService : AuthenticationService, private _commonService: CommonService, private _astroReportService : QuestionReportService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.validateForm = this._formBuilder.group({\r\n      firstName: [{value : null, disabled: true}, [Validators.required]],\r\n      lastName: [{value : null, disabled: true}, [Validators.required]],\r\n      comment: [{value : null, disabled: true}, [Validators.required, Validators.email]],\r\n      mobileNumber   : [{value : null, disabled: true}, [Validators.required]],\r\n      // gender: [{value : null, disabled: true}, [Validators.required]],\r\n      reportSubType: [{value : null, disabled: true}, [Validators.required]],\r\n      employment: [{value : null, disabled: true}, [Validators.required]],\r\n      message: [null, [Validators.required]]\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource(this.users);\r\n    this.userData = this._authenticationService.getUser();\r\n    this.getQuestionByAstrologer();\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator =  this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getQuestionByAstrologer() {\r\n\r\n    if(this.userData != null) {\r\n\r\n      let reqBody = {\r\n        \"astrologerId\" : this.userData._id\r\n      }\r\n\r\n      this._astroReportService.getQuestionByAstroId(reqBody).subscribe((responseData)=> {\r\n        console.log(\"getQuestionByAstroId ResponseBody \",responseData);\r\n        let resonseMessage = responseData.message;\r\n        let responseBody = responseData.data;\r\n        if(responseData.status == 200) {\r\n          let obj = []\r\n           responseBody.map((everyData) => {\r\n            obj.push({\r\n              _id : everyData._id,\r\n              astrologerId: everyData.astrologerId,\r\n              comment: everyData.comment,\r\n              createdAt: everyData.createdAt,\r\n              employment: everyData.employment,\r\n              firstName: everyData.firstName,\r\n              lastName: everyData.lastName,\r\n              mobileNumber: everyData.mobileNumber,\r\n              reportSubType: everyData.reportSubType,\r\n              reportType: everyData.reportType,\r\n              userId: everyData.userId\r\n            });\r\n            this.users = obj;\r\n          })\r\n          console.log(\"this.users \",this.users)\r\n          this.dataSource = new MatTableDataSource(this.users);\r\n          this.ngAfterViewInit();\r\n          this._commonService.tostMessage(resonseMessage)\r\n        } else if(responseData.status == 300){\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this._authService.logOut();\r\n        } else{\r\n          this._commonService.tostMessage(resonseMessage);\r\n        }\r\n      })\r\n    } else {\r\n      alert(\"Astro login required\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  editQuestion(reference,data){\r\n    reference.toggle();\r\n    console.log(\"Side bar data\", data);\r\n    this.validateForm.patchValue({\r\n      firstName :  data.firstName,\r\n      lastName :  data.lastName,\r\n      comment :  data.comment,\r\n      mobileNumber : data.mobileNumber,\r\n      // gender :  data.gender,\r\n      reportSubType : data.reportSubType,\r\n      employment :  data.employment\r\n    });\r\n    this.selectedUser = data;\r\n  }\r\n\r\n  submitForm(value: any) {\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n      console.log(\"submit Form \",value);\r\n      console.log(\"this.selectedUser \",this.selectedUser);\r\n\r\n      const formData: FormData = new FormData();\r\n      formData.append('message', value['message'] );\r\n      formData.append('userId', this.selectedUser.userId );\r\n      formData.append('astrologerId', this.selectedUser.astrologerId);\r\n      formData.append('queryId', this.selectedUser._id);\r\n      formData.append('reportType', this.selectedUser.reportType);\r\n\r\n      this._astroReportService.replyReports(formData).subscribe((responseData)=>{\r\n        console.log(\"responseDataa \",responseData);\r\n        let resonseMessage = responseData.message;\r\n        if(responseData.status == 200) {\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this.validateForm.reset();\r\n          this.sidenav.close();\r\n        } else if(responseData.status == 300){\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this._authService.logOut();\r\n        } else{\r\n          this._commonService.tostMessage(resonseMessage);\r\n        }\r\n    });\r\n  }\r\n\r\n  resetForm(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    this.validateForm.controls['message'].reset();\r\n    for (const key in this.validateForm.controls) {\r\n      this.validateForm.controls[key].markAsPristine();\r\n      this.validateForm.controls[key].updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  count(value){\r\n    this.characters = 0 + value.length;\r\n  }\r\n\r\n  closeDrawer(reference){\r\n    reference.toggle();\r\n    this.validateForm.reset();\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"drawer-container\">\r\n  <mat-sidenav #questionSideNav [mode]=\"mode.value\" position=\"end\" disableClose>\r\n    <!-- <p><button mat-button >Toggle</button></p>\r\n    <p><mat-icon> </mat-icon></p> -->\r\n    <button mat-mini-fab color=\"primary\" class=\"close-drawer\" aria-label=\"Close Menu\" (click)=\"closeDrawer(questionSideNav)\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n\r\n\r\n    <div class=\"form-wrapper\">\r\n      <div class=\"separator mb-5\">\r\n        <span class=\"edit-form-title text \">Reply Question Form</span>\r\n      </div>\r\n      <form  name=\"validateForm\" [formGroup]=\"validateForm\" novalidate>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>First Name</mat-label>\r\n          <input matInput formControlName=\"firstName\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Last Name</mat-label>\r\n          <input matInput formControlName=\"lastName\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Mobile Number</mat-label>\r\n          <input matInput formControlName=\"mobileNumber\" required>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Gender</mat-label>\r\n          <input matInput formControlName=\"gender\" required>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Report Type</mat-label>\r\n          <input matInput formControlName=\"reportSubType\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Employment</mat-label>\r\n          <input matInput formControlName=\"employment\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Question</mat-label>\r\n            <textarea matInput formControlName=\"comment\" required></textarea>\r\n\r\n          </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-full-width\">\r\n          <mat-label>Answer</mat-label>\r\n          <textarea matInput formControlName=\"message\"maxlength=\"2000\" #message (keyup)=\"count(message.value)\" required></textarea>\r\n          <mat-hint align=\"start\">{{characters}} / 2000</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <div class=\"mt-5\">\r\n          <button mat-raised-button color=\"primary\" class=\"submit-button mt-3 mr-5\" aria-label=\"LOGIN\"\r\n          [disabled]=\"validateForm.invalid\" (click)=\"submitForm(validateForm.value)\">\r\n            Create\r\n          </button>\r\n\r\n          <button mat-stroked-button color=\"warn\" class=\"mt-3\" (click)=\"resetForm($event)\">\r\n            Reset\r\n          </button>\r\n          </div>\r\n\r\n      </form>\r\n    </div>\r\n\r\n  </mat-sidenav>\r\n\r\n<mat-sidenav-content >\r\n  <div class=\"container  wrapper-box\">\r\n    <button class=\"my-3\" mat-mini-fab color=\"primary\" routerLink=\"/dashboard\"><mat-icon>keyboard_arrow_left</mat-icon></button>\r\n    <div class=\"separator mb-1\">\r\n      <span class=\"dashboard-title text \">Questions</span>\r\n    </div>\r\n    <mat-form-field>\r\n      <mat-label>Filter</mat-label>\r\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n    </mat-form-field>\r\n\r\n    <div class=\"mat-elevation-z8 mb-5\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <!-- Edit Column -->\r\n        <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\r\n        <td class=\"edit-report\" mat-cell *matCellDef=\"let row\" data-label=\"Edit\" (click)=\"editQuestion(questionSideNav,row)\"><mat-icon> edit </mat-icon> </td>\r\n      </ng-container>\r\n\r\n        <!-- ID Column -->\r\n        <ng-container matColumnDef=\"srNo\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> SrNo. </th>\r\n          <td mat-cell *matCellDef=\"let row; let i = index\" data-label=\"SrNo.\"> {{i + 1}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Progress Column -->\r\n        <ng-container matColumnDef=\"reportSubType\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Type </th>\r\n          <td mat-cell *matCellDef=\"let row\" data-label=\"Report Type\"> {{row.reportSubType}}</td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"firstName\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n          <td mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.firstName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"mobileNumber\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Mobile Number </th>\r\n          <td mat-cell *matCellDef=\"let row\" data-label=\"Mobile Number\"> {{row.mobileNumber}} </td>\r\n        </ng-container>\r\n\r\n\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n        <!-- Row shown when there is no matching data. -->\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n    </div>\r\n    </div>\r\n</mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../..//shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../../shared/constant/rest-url.constants';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ProfileUpdateService } from 'src/app/shared/service/restApi/profileUpdate.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class QuestionReportService {\r\n\r\n  constructor(private restService: RestService, private _profileUpdateService : ProfileUpdateService) {}\r\n\r\n  getQuestionByAstroId(data): Observable<any> {\r\n    return this.restService.create(RestUrl.getQuestionByAstroId, data)\r\n  }\r\n\r\n  replyReports(data): Observable<any> {\r\n    return this._profileUpdateService.createFormData(RestUrl.replyReports, data)\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AstroReportService } from './astro-report.service'\r\nimport { AuthenticationService } from 'src/app/shared/service/authentication/authentication.service';\r\nimport { CommonService } from 'src/app/shared/service/commonService/common.service';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\n\r\nexport interface UserData {\r\n  _id: string;\r\n  srNo: string;\r\n  astrologerId: string;\r\n  comment: string;\r\n  createdAt: string;\r\n  employment: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  mobileNumber: string;\r\n  reportSubType: string;\r\n  reportType: number;\r\n  userId: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-astro-report',\r\n  templateUrl: './astro-report.component.html',\r\n  styleUrls: ['./astro-report.component.scss']\r\n})\r\nexport class AstroReportComponent implements OnInit, AfterViewInit {\r\n  displayedColumns: string[] = ['edit','srNo', 'reportSubType', 'firstName', 'mobileNumber'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild('reportSideNav') sidenav: MatSidenav;\r\n\r\n  mode = new FormControl('over');\r\n  userData;\r\n  validateForm: FormGroup;\r\n  selectedUser;\r\n  users: UserData[];\r\n\r\n  characters = 0;\r\n\r\n\r\n  constructor(private _authService : AuthService, private _commonService: CommonService, private _astroReportService : AstroReportService, private _authenticationService : AuthenticationService, private _formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.validateForm = this._formBuilder.group({\r\n      firstName: [{value : null, disabled: true}, [Validators.required]],\r\n      lastName: [{value : null, disabled: true}, [Validators.required]],\r\n      comment: [{value : null, disabled: true}, [Validators.required, Validators.email]],\r\n      mobileNumber   : [{value : null, disabled: true}, [Validators.required]],\r\n      reportSubType: [{value : null, disabled: true}, [Validators.required]],\r\n      employment: [{value : null, disabled: true}, [Validators.required]],\r\n      message: [null, [Validators.required]],\r\n      // attachment: [null, [Validators.required]]\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource(this.users);\r\n    this.userData = this._authenticationService.getUser();\r\n    this.getReportByAstrologer();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getReportByAstrologer() {\r\n\r\n    if(this.userData != null) {\r\n      let reqBody = {\r\n        \"astrologerId\" : this.userData._id\r\n      }\r\n      this._astroReportService.getReportByAstroId(reqBody).subscribe((responseData)=>{\r\n        console.log(\"getQuestionByAstroId ResponseBody \",responseData);\r\n        let resonseMessage = responseData.message;\r\n        let responseBody = responseData.data;\r\n        if(responseData.status == 200) {\r\n          let obj = []\r\n           responseBody.map((everyData) => {\r\n            obj.push({\r\n              _id : everyData._id,\r\n              astrologerId: everyData.astrologerId,\r\n              comment: everyData.comment,\r\n              createdAt: everyData.createdAt,\r\n              employment: everyData.employment,\r\n              firstName: everyData.firstName,\r\n              lastName: everyData.lastName,\r\n              mobileNumber: everyData.mobileNumber,\r\n              reportSubType: everyData.reportSubType,\r\n              reportType: everyData.reportType,\r\n              userId: everyData.userId\r\n            });\r\n            this.users = obj;\r\n          })\r\n          console.log(\"this.users \",this.users)\r\n          this.dataSource = new MatTableDataSource(this.users);\r\n          this.ngAfterViewInit();\r\n          this._commonService.tostMessage(resonseMessage)\r\n        } else if(responseData.status == 300){\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this._authService.logOut();\r\n        } else{\r\n          this._commonService.tostMessage(resonseMessage);\r\n        }\r\n      })\r\n    } else {\r\n      alert(\"Astro login required\")\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  editQuestion(reference,data) {\r\n    reference.toggle();\r\n    console.log(\"Side bar data\", data);\r\n    this.validateForm.patchValue({\r\n      firstName :  data.firstName,\r\n      lastName :  data.lastName,\r\n      comment :  data.comment,\r\n      mobileNumber : data.mobileNumber,\r\n      // gender :  data.gender,\r\n      reportSubType : data.reportSubType,\r\n      employment :  data.employment\r\n    });\r\n    this.selectedUser = data;\r\n  }\r\n\r\n  submitForm(value: any) {\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n      console.log(\"submit Form \",value);\r\n      console.log(\"this.selectedUser \",this.selectedUser);\r\n\r\n      const formData: FormData = new FormData();\r\n      formData.append('message', value['message'] );\r\n      // formData.append('attachment', value['attachment']);\r\n      formData.append('userId', this.selectedUser.userId );\r\n      formData.append('astrologerId', this.selectedUser.astrologerId);\r\n      formData.append('queryId', this.selectedUser._id);\r\n      formData.append('reportType', this.selectedUser.reportType);\r\n\r\n      this._astroReportService.replyReports(formData).subscribe((responseData)=>{\r\n        console.log(\"responseDataa \",responseData);\r\n        let resonseMessage = responseData.message;\r\n        if(responseData.status == 200) {\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this.validateForm.reset();\r\n          this.sidenav.close();\r\n        } else if(responseData.status == 300){\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this._authService.logOut();\r\n        } else{\r\n          this._commonService.tostMessage(resonseMessage);\r\n        }\r\n    });\r\n  }\r\n\r\n  resetForm(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    this.validateForm.controls['message'].reset();\r\n    // this.validateForm.controls['attachment'].reset();\r\n    for (const key in this.validateForm.controls) {\r\n      this.validateForm.controls[key].markAsPristine();\r\n      this.validateForm.controls[key].updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  count(value){\r\n    this.characters = 0 + value.length;\r\n  }\r\n\r\n  closeDrawer(reference){\r\n    reference.toggle();\r\n    this.validateForm.reset();\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"drawer-container\">\r\n  <mat-sidenav #reportSideNav [mode]=\"mode.value\" position=\"end\" disableClose>\r\n    <button mat-mini-fab color=\"primary\" class=\"close-drawer\" aria-label=\"Close Menu\" (click)=\"closeDrawer(reportSideNav)\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n\r\n\r\n    <div class=\"form-wrapper\">\r\n      <div class=\"separator mb-5\">\r\n        <span class=\"edit-form-title text \">Reply Report Form</span>\r\n      </div>\r\n      <form  name=\"validateForm\" [formGroup]=\"validateForm\" novalidate>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>First Name</mat-label>\r\n          <input matInput formControlName=\"firstName\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Last Name</mat-label>\r\n          <input matInput formControlName=\"lastName\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Mobile Number</mat-label>\r\n          <input matInput formControlName=\"mobileNumber\" required>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Gender</mat-label>\r\n          <input matInput formControlName=\"gender\" required>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Report Type</mat-label>\r\n          <input matInput formControlName=\"reportSubType\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Employment</mat-label>\r\n          <input matInput formControlName=\"employment\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Question</mat-label>\r\n            <textarea matInput formControlName=\"comment\" required></textarea>\r\n\r\n          </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-full-width\">\r\n          <mat-label>Answer</mat-label>\r\n          <textarea matInput formControlName=\"message\" maxlength=\"4000\" #message (keyup)=\"count(message.value)\" required></textarea>\r\n          <mat-hint align=\"start\">{{characters}} / 4000</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Upload Report</mat-label>\r\n          <ngx-mat-file-input formControlName=\"attachment\" required [accept]=\"'.pdf'\"></ngx-mat-file-input>\r\n          <mat-icon matSuffix>folder</mat-icon>\r\n          <mat-hint align=\"start\"><strong>* PDF Format Only</strong> </mat-hint>\r\n          <mat-error *ngIf=\"validateForm.get('attachment').hasError('attachment')\">\r\n            Upload Report is required!\r\n          </mat-error>\r\n        </mat-form-field> -->\r\n\r\n        <div class=\"mt-5\">\r\n          <button mat-raised-button color=\"primary\" class=\"submit-button mt-3 mr-5\" aria-label=\"LOGIN\"\r\n          [disabled]=\"validateForm.invalid\" (click)=\"submitForm(validateForm.value)\">\r\n            Create\r\n          </button>\r\n\r\n          <button mat-stroked-button color=\"warn\" class=\"mt-3\" (click)=\"resetForm($event)\">\r\n            Reset\r\n          </button>\r\n          </div>\r\n\r\n      </form>\r\n    </div>\r\n  </mat-sidenav>\r\n\r\n\r\n\r\n\r\n<mat-sidenav-content>\r\n  <div class=\"container wrapper-box\">\r\n    <button class=\"my-3\" mat-mini-fab color=\"primary\" routerLink=\"/dashboard\"><mat-icon>keyboard_arrow_left</mat-icon></button>\r\n    <div class=\"separator mb-1\">\r\n      <span class=\"dashboard-title text \">Reports</span>\r\n    </div>\r\n    <mat-form-field>\r\n      <mat-label>Filter</mat-label>\r\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n    </mat-form-field>\r\n\r\n    <div class=\"mat-elevation-z8 mb-5\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n\r\n        <!-- Edit Column -->\r\n        <ng-container matColumnDef=\"edit\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\r\n          <td class=\"edit-report\" mat-cell *matCellDef=\"let row\" data-label=\"Edit\" (click)=\"editQuestion(reportSideNav,row)\"><mat-icon> edit </mat-icon> </td>\r\n        </ng-container>\r\n\r\n          <!-- ID Column -->\r\n          <ng-container matColumnDef=\"srNo\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> SrNo. </th>\r\n            <td mat-cell *matCellDef=\"let row; let i = index\" data-label=\"SrNo.\"> {{i + 1}} </td>\r\n          </ng-container>\r\n\r\n          <!-- Progress Column -->\r\n          <ng-container matColumnDef=\"reportSubType\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Type </th>\r\n            <td mat-cell *matCellDef=\"let row\" data-label=\"Report Type\"> {{row.reportSubType}}</td>\r\n          </ng-container>\r\n\r\n          <!-- Name Column -->\r\n          <ng-container matColumnDef=\"firstName\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n            <td mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.firstName}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"mobileNumber\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Mobile Number </th>\r\n            <td mat-cell *matCellDef=\"let row\" data-label=\"Mobile Number\"> {{row.mobileNumber}} </td>\r\n          </ng-container>\r\n\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n        <!-- Row shown when there is no matching data. -->\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n    </div>\r\n    </div>\r\n</mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../..//shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../../shared/constant/rest-url.constants';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ProfileUpdateService } from 'src/app/shared/service/restApi/profileUpdate.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AstroReportService {\r\n\r\n  constructor(private restService: RestService, private _profileUpdateService : ProfileUpdateService) {}\r\n\r\n  getReportByAstroId(data): Observable<any> {\r\n    return this.restService.create(RestUrl.getReportByAstroId, data)\r\n  }\r\n\r\n  replyReports(data): Observable<any> {\r\n    return this._profileUpdateService.createFormData(RestUrl.replyReports, data)\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-report',\r\n  templateUrl: './edit-report.component.html',\r\n  styleUrls: ['./edit-report.component.scss']\r\n})\r\nexport class EditReportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>edit-report works!</p>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'\r\n@Component({\r\n  selector: 'app-astrologer-dashboard',\r\n  templateUrl: './astrologer-dashboard.component.html',\r\n  styleUrls: ['./astrologer-dashboard.component.scss']\r\n})\r\nexport class AstrologerDashboardComponent implements OnInit {\r\n\r\n  constructor(private _route : Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  astroReport() {\r\n    this._route.navigate(['dashboard/astroReport']);\r\n  }\r\n\r\n  astroQuestion() {\r\n    this._route.navigate(['dashboard/astroQuestion']);\r\n  }\r\n\r\n  chatUser(){\r\n    this._route.navigate(['/chat'])\r\n  }\r\n\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n<div class=\"astro-dashboard-wrapper\">\r\n  <div class=\"separator my-5\">\r\n    <span class=\"dashboard-title text \">Dashboard</span>\r\n  </div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-3 my-3\">\r\n    <mat-card class=\"card1\" (click)=\"astroReport()\">\r\n      <mat-icon>assignment</mat-icon>\r\n      <h1>Report</h1>\r\n        <div class=\"go-corner\" href=\"#\">\r\n          <div class=\"go-arrow\">\r\n            →\r\n          </div>\r\n        </div>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"col-md-3 my-3\">\r\n    <mat-card class=\"card1\" (click)=\"astroQuestion()\">\r\n       <mat-icon>question_answer</mat-icon>\r\n      <h1>Question </h1>\r\n        <div class=\"go-corner\" href=\"#\">\r\n          <div class=\"go-arrow\">\r\n            →\r\n          </div>\r\n        </div>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"col-md-3 my-3\">\r\n    <mat-card class=\"card1\">\r\n      <span><mat-icon>call</mat-icon></span>\r\n      <h1>Call </h1>\r\n        <div class=\"go-corner\" href=\"#\">\r\n          <div class=\"go-arrow\">\r\n            →\r\n          </div>\r\n        </div>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"col-md-3 my-3\">\r\n    <mat-card class=\"card1\" (click)=\"chatUser();\">\r\n      <span><mat-icon>chat</mat-icon></span>\r\n      <h1>Chat </h1>\r\n        <div class=\"go-corner\" href=\"#\">\r\n          <div class=\"go-arrow\">\r\n            →\r\n          </div>\r\n        </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n</div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material-module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { AstrologerDashboardComponent } from './astrologer-dashboard/astrologer-dashboard.component';\r\nimport { AuthGuard } from '../auth/canActivateAuth.gaurd';\r\nimport { AstroReportComponent } from './astro-report/astro-report.component';\r\nimport { EditReportComponent } from './astro-report/edit-report/edit-report.component';\r\nimport { AstroQuestionComponent } from './astro-question/astro-question.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AstrologerDashboardComponent,\r\n    AstroReportComponent,\r\n    EditReportComponent,\r\n    AstroQuestionComponent\r\n  ],\r\n  imports: [\r\n    DashboardRoutingModule,\r\n    CommonModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    AuthGuard\r\n  ]\r\n})\r\nexport class DashboardModuleModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AstrologerDashboardComponent } from './astrologer-dashboard/astrologer-dashboard.component';\r\nimport { AstroReportComponent } from './astro-report/astro-report.component';\r\nimport { AstroQuestionComponent } from './astro-question/astro-question.component';\r\n\r\n\r\nimport { AuthGuard } from '../auth/canActivateAuth.gaurd'\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  {path: '', component: AstrologerDashboardComponent},\r\n  {path: 'astroReport', component: AstroReportComponent, canActivate: [AuthGuard]},\r\n  {path: 'astroQuestion', component: AstroQuestionComponent, canActivate: [AuthGuard]},\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n"],"sourceRoot":"webpack:///"}