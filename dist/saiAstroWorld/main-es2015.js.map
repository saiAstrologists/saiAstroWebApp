{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.service.ts","./src/app/material-module.ts","./src/app/shared/constant/regex-constant.ts","./src/app/shared/constant/rest-url.constants.ts","./src/app/shared/service/authentication/authentication.service.ts","./src/app/shared/service/http/http-intercepter-basic-auth.service.ts","./src/app/shared/service/restApi/rest.service.ts","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/sign-up/sign-up.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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AA;AAAA;AAAuC;AACM;AACU;AACD;AACL;AACM;AACD;AACJ;AACF;AACqB;AACd;AACa;AACX;AACa;AACjB;AACQ;AACN;AACI;AACM;AACR;AACE;AACI;AACD;AACT;AACE;AACF;AACA;AACuB;AACb;AACK;AACQ;AACrB;AACE;AACE;AACF;AACW;AACN;AACT;AACE;AACF;AACM;AACA;AACN;;AAiD9C,MAAM,cAAc;;6FAAd,cAAc;sJAAd,cAAc,kBA7CvB,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,uEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB;QACpB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;QAChB,qEAAa;QACb,gEAAY;QACZ,sEAAe;mIAGN,cAAc,cA7CvB,4DAAU;QACV,sEAAe;QACf,qEAAgB;QAChB,iEAAc;QACd,+DAAa;QACb,qEAAc;QACd,oFAAqB;QACrB,uEAAc;QACd,oFAAoB;QACpB,yEAAe;QACf,sFAAqB;QACrB,qEAAa;QACb,6EAAiB;QACjB,uEAAc;QACd,2EAAgB;QAChB,iFAAmB;QACnB,yEAAe;QACf,2EAAgB;QAChB,+EAAkB;QAClB,8EAAiB;QACjB,qEAAa;QACb,uEAAc;QACd,qEAAa;QACb,qEAAa;QACb,2EAAmB;QACnB,+EAAkB;QAClB,oFAAoB;QACpB,4FAAwB;QACxB,uEAAc;QACd,uEAAe;QACf,yEAAe;QACf,2EAAgB;QAChB,yEAAe;QACf,oFAAoB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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page/home-page.component'\n\nconst routes: Routes = [\n\n  { path: '' , loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)}\n  // { path: '' , component: HomePageComponent}\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewChild } from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { LoginComponent } from './login/login.component'\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'saiAstroWorld';\n  @ViewChild('sidenav') sidenav: MatSidenav;\n\n  constructor(public dialog: MatDialog){}\n\n  reason = '';\n\n  close(reason: string) {\n    this.reason = reason;\n    this.sidenav.close();\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(LoginComponent, {\n      width: '500px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed',result);\n    });\n  }\n}\n","<mat-sidenav-container\r\n    class=\"sidenav-container\" (backdropClick)=\"close('backdrop')\">\r\n\r\n  <mat-sidenav class=\"drawer-container\" #sidenav [fixedInViewport]=\"true\" (keydown.escape)=\"close('escape')\" disableClose>\r\n    <!-- <button mat-button  (click)=\"close('toggle button')\">X</button> -->\r\n      <div class=\"side-bar-logo\"><img class=\"mb-2\" src=\"../assets/images/logo/PNG/font120px.png\"></div>\r\n      <div class=\"list-group side-bar-quick-link\" id=\"list-tab\" role=\"tablist\">\r\n        <a class=\"list-group-item list-group-item-action active\" id=\"astro-talk\" data-toggle=\"list\" href=\"#astro-talk\" role=\"tab\" aria-controls=\"astro-talk\">Talk to Astrologer</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"horoscope\" data-toggle=\"list\" href=\"#horoscope\" role=\"tab\" aria-controls=\"horoscope\">Horoscope 2020</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"kundli\" data-toggle=\"list\" href=\"#kundli\" role=\"tab\" aria-controls=\"kundli\">Kundli</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-mall\" data-toggle=\"list\" href=\"#astro-mall\" role=\"tab\" aria-controls=\"astro-mall\">AstroMall</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"blog\" data-toggle=\"list\" href=\"#blog\" role=\"tab\" aria-controls=\"blog\">Blog</a>\r\n      </div>\r\n\r\n      <!-- <li><a>Talk to Astrologer</a></li>\r\n      <li><a>Horoscope 2020</a></li>\r\n      <li><a>Kundli</a></li>\r\n      <li><a>AstroMall</a></li>\r\n      <li><a>Blog</a></li> -->\r\n\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n\r\n    <mat-toolbar class=\"toolbar-wrapper\">\r\n\r\n      <mat-toolbar-row>\r\n        <button mat-button class=\"menu-button\" (click)=\"sidenav.open()\"><mat-icon aria-hidden=\"false\">view_headline</mat-icon></button>\r\n        <span><img src=\"../assets/images/logo/PNG/font120px.png\"></span>\r\n        <span class=\"example-spacer\"></span>\r\n        <div class=\"quick-link\">\r\n        <span class=\"example-spacer\"></span>\r\n        <span>Talk to Astrologer</span>\r\n        <span>Chat with Astrologer</span>\r\n        <span>Horoscope 2020 </span>\r\n        <span>Kundli</span>\r\n        <span>AstroMall</span>\r\n        <span>Blog</span>\r\n       </div>\r\n        <!-- <button mat-button><mat-icon aria-hidden=\"false\">notifications</mat-icon></button> -->\r\n        <button mat-raised-button color=\"primary\" (click)=\"openDialog()\">Login</button>\r\n        <mat-icon class=\"hm-wallet\" mat-raised-button>account_balance_wallet</mat-icon>\r\n        <!-- <mat-icon  mat-raised-button>login</mat-icon> -->\r\n\r\n        <mat-icon class=\"hm-cart\" mat-raised-button>shopping_cart</mat-icon>\r\n\r\n        <!-- <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example heart icon\">favorite</mat-icon>\r\n        <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example delete icon\">delete</mat-icon> -->\r\n      </mat-toolbar-row>\r\n\r\n    </mat-toolbar>\r\n\r\n      <div class=\"fixed-plugin\">\r\n\r\n          <div class=\"example-button-row\">\r\n            <!-- <button mat-mini-fab>Basic</button>\r\n            <button mat-mini-fab color=\"primary\">Primary</button>\r\n            <button mat-mini-fab color=\"accent\">Accent</button>\r\n            <button mat-mini-fab color=\"warn\">Warn</button>\r\n            <button mat-mini-fab disabled>Disabled</button> -->\r\n            <button mat-mini-fab  aria-label=\"Example icon-button with a heart icon\">\r\n              <mat-icon>chat</mat-icon>\r\n            </button>\r\n            <button mat-mini-fab  aria-label=\"Example icon-button with a heart icon\">\r\n              <mat-icon>phone</mat-icon>\r\n            </button>\r\n            <button mat-mini-fab   aria-label=\"Example icon-button with a heart icon\">\r\n              <mat-icon>assignment</mat-icon>\r\n            </button>\r\n            <button mat-mini-fab   aria-label=\"Example icon-button with a heart icon\">\r\n              <mat-icon>question_answer</mat-icon>\r\n            </button>\r\n          </div>\r\n          <!-- <mat-divider></mat-divider>\r\n          <span class=\"follow-text\">Follow</span>\r\n          <button mat-mini-fab class=\"facebook-color\" aria-label=\"facebook-icon\">\r\n            <i class=\"fa fa-facebook-square\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <button mat-mini-fab color=\"warn\" aria-label=\"youtube-icon\">\r\n            <i class=\"fa fa-youtube-play\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <button mat-mini-fab class=\"instagram-color\" aria-label=\"instagram-icon\">\r\n            <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i>\r\n          </button> -->\r\n       </div>\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n\r\n    <footer class=\"footer-wrapper py-5\">\r\n      <div class=\"footer-top\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-3 footer-about wow fadeInUp animated\" style=\"visibility: visible; animation-name: fadeInUp;\">\r\n              <h3><b>About us</b></h3>\r\n              <p>\r\n                We are a young company always looking for new and creative ideas to help you with our products in your everyday work.\r\n              </p>\r\n              <p>© Company Inc.</p>\r\n                  </div>\r\n            <div class=\"col-md-4 offset-md-1 footer-contact wow fadeInDown animated\" style=\"visibility: visible; animation-name: fadeInDown;\">\r\n              <h3><b>Contact</b></h3>\r\n                  <p><i class=\"fa fa-map-marker-alt\"></i> Demo Address 10, 10136 Turin Italy</p>\r\n                  <p><i class=\"fa fa-phone\"></i> Phone: (0039) 123 45 67 890</p>\r\n                  <p><i class=\"fa fa-envelope\"></i> Email: <a href=\"mailto:hello@domain.com\">hello@domain.com</a></p>\r\n                  <p><i class=\"fa fa-skype\"></i> Skype: you_online</p>\r\n                  </div>\r\n                  <div class=\"col-md-4 footer-links wow fadeInUp animated\" style=\"visibility: visible; animation-name: fadeInUp;\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col\">\r\n                        <h3><b>Links</b></h3>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-6\">\r\n                        <p><a class=\"scroll-link\" href=\"#top-content\">Home</a></p>\r\n                        <p><a href=\"#\">Features</a></p>\r\n                        <p><a href=\"#\">How it works</a></p>\r\n                        <p><a href=\"#\">Our clients</a></p>\r\n                      </div>\r\n                      <div class=\"col-md-6\">\r\n                        <p><a href=\"#\">Plans &amp; pricing</a></p>\r\n                        <p><a href=\"#\">Affiliates</a></p>\r\n                        <p><a href=\"#\">Terms</a></p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"footer-bottom pt-5\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n               <div class=\"col footer-social\">\r\n                    <a href=\"#\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n                    <a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\r\n                    <a href=\"#\"><i class=\"fa fa-instagram\"></i></a>\r\n                  </div>\r\n             </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n\r\n  </mat-sidenav-content>\r\n\r\n  <!-- <button mat-button><mat-icon aria-hidden=\"false\">notifications</mat-icon></button> -->\r\n\r\n</mat-sidenav-container>\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from './material-module';\r\nimport { LoginComponent } from './login/login.component'\r\nimport { HttpIntercepterBasicAuthService } from './shared/service/http/http-intercepter-basic-auth.service';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignUpComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    CarouselModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    // MatSliderModule,\r\n    // MatSidenavModule,\r\n    // MatFormFieldModule,\r\n    // MatSelectModule,\r\n    // MatToolbarModule,\r\n    // MatIconModule,\r\n\r\n    AppRoutingModule,\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: HttpIntercepterBasicAuthService,\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant'\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { loginService } from './login.service'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  validateForm: FormGroup;\r\n  otpForm: FormGroup;\r\n  isVisible:boolean = false;\r\n\r\n\r\n\r\n  constructor(private _formBuilder: FormBuilder,public dialogRef: MatDialogRef<LoginComponent>, private _loginService : loginService\r\n   ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validateForm = this._formBuilder.group({\r\n      mobile   : ['', [Validators.required, this.mobileNumber]],\r\n      password: ['', [Validators.required, this.passwordPattern]],\r\n      type: [null, Validators.required]\r\n\r\n    });\r\n\r\n    this.otpForm = this._formBuilder.group({\r\n      otp : ['']\r\n     });\r\n\r\n  }\r\n\r\n  submitForm(value: any){\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n      // this._route.navigate(['/profile']);\r\n\r\n      this._loginService.login(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n\r\n        let resonseMessage = responseData.message;\r\n\r\n        if(responseData.status == 200){\r\n          this.isVisible = true;\r\n        } else {\r\n          alert(resonseMessage);\r\n        }\r\n\r\n        })\r\n}\r\n\r\notpSubmitForm(value: any) {\r\n  alert(\"OTP Submited Successfuly\")\r\n  this.dialogRef.close(value);\r\n}\r\n\r\nsignUpSubmitForm(value: any){\r\n  alert(\"Registered Successfuly\")\r\n  this.dialogRef.close(value);\r\n}\r\n\r\nmobileNumber= (control: FormControl): {[s: string]: boolean} => {\r\n\r\n  console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n  if(!control.value) {\r\n    return { required: true };\r\n  } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n    return {};\r\n  } else {\r\n\r\n    return { mobileErr: true, error: true };\r\n  }\r\n}\r\n\r\npasswordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n  console.log(\"passwordPattern ----->\",control.value)\r\n\r\n  if(!control.value) {\r\n    return { required: true };\r\n  }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n    return {};\r\n  }else{\r\n    return { passErr: true, error: true };\r\n  }\r\n}\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\">\r\n  <mat-tab label=\"Login\">\r\n    <div class=\"form-wrapper\">\r\n    <form *ngIf=\"!isVisible\" name=\"validateForm\" [formGroup]=\"validateForm\" novalidate (ngSubmit)=\"submitForm(validateForm.value)\">\r\n\r\n      <mat-form-field class=\"form-field-width\">\r\n        <mat-label>Mobile Number</mat-label>\r\n        <input matInput formControlName=\"mobile\" minlength=\"10\" maxlength=\"10\">\r\n        <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n        <mat-error *ngIf=\"validateForm.get('mobile').hasError('required')\">\r\n            Mobile number is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!validateForm.get('mobile').hasError('required') &&\r\n                    validateForm.get('mobile').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Select Type</mat-label>\r\n      <mat-select name=\"type\" formControlName=\"type\">\r\n        <mat-option value=1>User</mat-option>\r\n        <mat-option value=2>Astrolloger</mat-option>\r\n      </mat-select>\r\n        <mat-error>\r\n          Login type is required!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\">\r\n        <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n        <mat-error *ngIf=\"validateForm.get('password').hasError('required')\">\r\n          Password is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!validateForm.get('password').hasError('required') &&\r\n                    validateForm.get('password').hasError('passErr')\">\r\n            Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n\r\n\r\n    <div class=\"remember-forgot-password\" class=\"d-flex mt-5  justify-content-end\">\r\n        <a class=\"forgot-password\" [routerLink]=\"'/auth/forgot-password-2'\">\r\n            Forgot Password?\r\n        </a>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"primary\" class=\"submit-button mt-3\" aria-label=\"LOGIN\"\r\n            [disabled]=\"validateForm.invalid\">\r\n        LOGIN\r\n    </button>\r\n    </form>\r\n\r\n    <!-- OTP Form -->\r\n   <div class=\"otp-wrapper\" *ngIf=\"isVisible\">\r\n    <form name=\"otpForm\" [formGroup]=\"otpForm\" novalidate (ngSubmit)=\"otpSubmitForm(otpForm.value)\">\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>OTP</mat-label>\r\n          <input matInput formControlName=\"otp\">\r\n          <mat-icon matSuffix class=\"secondary-text\">code</mat-icon>\r\n          <mat-error *ngIf=\"otpForm.get('otp').hasError('required')\">\r\n              OTP is required!\r\n          </mat-error>\r\n          <!-- <mat-error\r\n              *ngIf=\"!otpForm.get('mobile').hasError('required') &&\r\n                      otpForm.get('mobile').hasError('mobileErr')\">\r\n              Please enter a valid mobile number!\r\n          </mat-error> -->\r\n        </mat-form-field>\r\n\r\n        <button mat-raised-button color=\"primary\" class=\"submit-button mt-3\" aria-label=\"LOGIN\"\r\n          [disabled]=\"otpForm.invalid\">\r\n              Submit\r\n        </button>\r\n\r\n    </form>\r\n  </div>\r\n\r\n    <div class=\"separator login\">\r\n      <span class=\"text\">OR</span>\r\n    </div>\r\n\r\n    <div class=\"d-flex  justify-content-center\">\r\n\r\n      <button mat-stroked-button class=\"google\"><i><img src=\"../../assets/images/social/google.png\"></i>\r\n          <b>Log in with Google</b>\r\n      </button>\r\n\r\n      <!-- <button mat-raised-button class=\"facebook\">\r\n          Log in with Facebook\r\n      </button> -->\r\n\r\n    </div>\r\n  </div>\r\n   <!-- loginform ends -->\r\n\r\n\r\n  </mat-tab>\r\n  <mat-tab label=\"Sign Up\">\r\n    <app-sign-up (outputSignUpData)=\"signUpSubmitForm($event)\"></app-sign-up>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class loginService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  login(data): Observable<any> {\r\n    return this.restService.create(RestUrl.login, data)\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */\r\n","export class RegexConstant {\r\n    public static get PASSWORD_REGEX() : any { return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/; };\r\n    public static get ONLY_NUMBER() : any {return /^[0-9]{10}$/};\r\n    public static get EMAIL_REGEX() : any { return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/}\r\n    public static get TWINTYFOUR_HOURS_REGEX() : any { return /^([0-1]{1}[0-9]|2[0-3]):[0-5][0-9]$/}\r\n\r\n\r\n  }\r\n","export class RestUrl {\r\n    public static get login(): string { return `/users/register`; }\r\n    public static get signUp(): string { return `/users/register`; }\r\n\r\n}\r\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RestService } from '../restApi/rest.service';\n// import { RestUrl } from '../../constant/rest-url.constants';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthenticationService {\n\n  constructor(private http: HttpClient, private restService: RestService) { }\n\n//   login(data) {\n//     return this.restService.create(RestUrl.login, data);\n//  }\n\n\n\n  getAuthenticatedToken() {\n    let token = JSON.parse(sessionStorage.getItem('token'));\n    // console.log(\"get token console \",token);\n      return token\n  }\n\n  // getUserRole() {\n  //   if (this.getAuthenticatedUser()) {\n  //     return sessionStorage.getItem('role');\n  //   }\n  // }\n\n  // isUserLoggedIn() {\n  //   const user = sessionStorage.getItem('username');\n  //   return !(user === null);\n  // }\n\n  // logout() {\n  //   return this.restService.getData(RestUrl.logout, false);\n  // }\n\n\n}\n","import {\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpEvent,\r\n    HttpErrorResponse\r\n  } from \"@angular/common/http\";\r\n  import { Injectable } from \"@angular/core\";\r\n  import { AuthenticationService } from \"../authentication/authentication.service\";\r\n  import { tap } from 'rxjs/operators';\r\n\r\n  @Injectable({\r\n    providedIn: \"root\"\r\n  })\r\n  export class HttpIntercepterBasicAuthService implements HttpInterceptor {\r\n    constructor(private basicAuthenticationService: AuthenticationService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n      let basicAuthHeaderString = this.basicAuthenticationService.getAuthenticatedToken();\r\n      console.log(\"basicAuthHeaderString +++++++++++++ \",basicAuthHeaderString)\r\n        request = request.clone({\r\n          setHeaders: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n      // if (basicAuthHeaderString) {\r\n      //   request = request.clone({\r\n      //     setHeaders: {\r\n      //       Authorization: basicAuthHeaderString,\r\n      //       'Content-Type': 'application/json'\r\n      //     }\r\n      //   });\r\n      // } else {\r\n      //   request = request.clone({\r\n      //     setHeaders: {\r\n      //       'Content-Type': 'application/json'\r\n      //     }\r\n      //   });\r\n      // }\r\n      return next.handle(request).pipe(\r\n        tap(\r\n          event => this.handleResponse(request, event),\r\n          error => this.handleError(request, error)\r\n        )\r\n      );\r\n    }\r\n\r\n    handleResponse(req: HttpRequest<any>, event) {\r\n      if (event instanceof HttpResponse) {\r\n           if (event.headers.get('Authorization')) {\r\n                sessionStorage.setItem('token', event.headers.get('Authorization'));\r\n           }\r\n      }\r\n    }\r\n\r\n    handleError(req: HttpRequest<any>, event) {\r\n\r\n        if (event instanceof HttpErrorResponse) {\r\n            if(event.headers.get('Authorization')){\r\n            //  console.log('handleError',event.headers.get('Authorization'));\r\n                sessionStorage.setItem('token', event.headers.get('Authorization'));\r\n            }\r\n      }\r\n    }\r\n  }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\n// import { callBackendApi } from '../../constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public create = (route: string, body) => {\r\n    console.log(\"route\",route,\"body\",body);\r\n    return this.http.post(environment.urlAddress + route, body);\r\n  };\r\n\r\n  // public update = (route: string, body) => {\r\n  //   return this.http.put(\r\n  //     this.createCompleteRoute(route, environment.urlAddress),\r\n  //     body\r\n  //   );\r\n  // };\r\n\r\n  // public delete = (route: string) => {\r\n  //   return this.http.delete(\r\n  //     this.createCompleteRoute(route, environment.urlAddress)\r\n  //   );\r\n  // };\r\n\r\n  // private createCompleteRoute = (route: string, envAddress: string) => {\r\n  //   if (callBackendApi) {\r\n  //     return `${envAddress + route}`;\r\n  //   } else {\r\n  //     return `${route}`;\r\n  //   }\r\n  // };\r\n}\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant';\r\nimport { signUpService } from './sign-up.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  signUpValidateForm: FormGroup;\r\n  otpForm: FormGroup;\r\n  isVisible:boolean = false;\r\n\r\n  @Output()\r\n  outputSignUpData: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _signUpService : signUpService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.signUpValidateForm = this._formBuilder.group({\r\n      name           : ['', [Validators.required]],\r\n      email          : ['', [Validators.required, Validators.email]],\r\n      mobile          : ['', [Validators.required, this.mobileNumber]],\r\n      password       : ['', [Validators.required, this.passwordPattern]],\r\n      type          : ['', [Validators.required]]\r\n    });\r\n\r\n\r\n    this.otpForm = this._formBuilder.group({\r\n      otp : ['']\r\n    });\r\n\r\n\r\n  }\r\n\r\n  submitForm(value: any){\r\n    for (const key in this.signUpValidateForm.controls) {\r\n        this.signUpValidateForm.controls[key].markAsDirty();\r\n        this.signUpValidateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n\r\n      this._signUpService.signUp(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n\r\n        let resonseMessage = responseData.message;\r\n\r\n        if(responseData.status == 200) {\r\n          this.isVisible = true;\r\n        } else {\r\n          alert(resonseMessage);\r\n        }\r\n\r\n        })\r\n  }\r\n\r\n  otpSubmitForm(value: any) {\r\n    this.outputSignUpData.emit(value);\r\n    // this.dialogRef.close(value);\r\n  }\r\n\r\n  passwordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n    console.log(\"passwordPattern ----->\",control.value)\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n      return {};\r\n    }else{\r\n      return { passErr: true, error: true };\r\n    }\r\n  }\r\n\r\n  mobileNumber = (control: FormControl): {[s: string]: boolean} => {\r\n\r\n    console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n      return {};\r\n    } else {\r\n\r\n      return { mobileErr: true, error: true };\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-wrapper\">\r\n\r\n<form name=\"validateForm\" *ngIf=\"!isVisible\" [formGroup]=\"signUpValidateForm\" novalidate (ngSubmit)=\"submitForm(signUpValidateForm.value)\">\r\n\r\n  <mat-form-field class=\"form-field-width\">\r\n      <mat-label>Full Name</mat-label>\r\n      <input matInput formControlName=\"name\">\r\n      <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n      <mat-error>\r\n          Name is required\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width mt-2\">\r\n    <mat-label>Select Type</mat-label>\r\n    <mat-select name=\"type\" formControlName=\"type\">\r\n      <mat-option value=1>User</mat-option>\r\n      <mat-option value=2>Astrolloger</mat-option>\r\n    </mat-select>\r\n    <mat-error *ngIf=\"signUpValidateForm.get('type').hasError('required')\">\r\n      Login type is required!\r\n  </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n      <mat-label>Mobile Number</mat-label>\r\n      <input matInput formControlName=\"mobile\">\r\n      <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('mobile').hasError('required')\">\r\n          Mobile number is required!\r\n      </mat-error>\r\n      <mat-error\r\n          *ngIf=\"!signUpValidateForm.get('mobile').hasError('required') &&\r\n                  signUpValidateForm.get('mobile').hasError('mobileErr')\">\r\n          Please enter a valid mobile number!\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput formControlName=\"email\">\r\n      <mat-icon matSuffix class=\"secondary-text\">mail</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('email').hasError('required')\">\r\n          Email is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('email').hasError('email')\">\r\n          Please enter a valid email address\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Password</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"password\">\r\n      <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('password').hasError('required')\">\r\n        Password is required!\r\n      </mat-error>\r\n      <mat-error\r\n            *ngIf=\"!signUpValidateForm.get('password').hasError('required') &&\r\n                    signUpValidateForm.get('password').hasError('passErr')\">\r\n            *Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n\r\n\r\n  <!-- <mat-form-field class=\"form-field-width\">\r\n      <mat-label>Password (Confirm)</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"passwordConfirm\">\r\n      <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('passwordConfirm').hasError('required')\">\r\n          Password confirmation is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"!signUpValidateForm.get('passwordConfirm').hasError('required') &&\r\n                         signUpValidateForm.get('passwordConfirm').hasError('passwordsNotMatching')\">\r\n          Passwords must match\r\n      </mat-error>\r\n  </mat-form-field> -->\r\n\r\n  <!-- <div class=\"terms\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <mat-checkbox name=\"terms\" aria-label=\"Accept\" required>\r\n          <span>Accept</span>\r\n      </mat-checkbox>\r\n      <a href=\"#\">terms and conditions</a>\r\n  </div> -->\r\n\r\n  <button mat-raised-button color=\"primary\" class=\"submit-button mt-5\" aria-label=\"CREATE AN ACCOUNT\"\r\n          [disabled]=\"signUpValidateForm.invalid\">\r\n      Sign Up\r\n  </button>\r\n\r\n</form>\r\n\r\n <!-- OTP Form -->\r\n <div class=\"otp-wrapper\" *ngIf=\"isVisible\">\r\n  <form name=\"otpForm\" [formGroup]=\"otpForm\" novalidate (ngSubmit)=\"otpSubmitForm(otpForm.value)\">\r\n\r\n      <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>OTP</mat-label>\r\n        <input matInput formControlName=\"otp\">\r\n        <mat-icon matSuffix class=\"secondary-text\">code</mat-icon>\r\n        <mat-error *ngIf=\"otpForm.get('otp').hasError('required')\">\r\n            OTP is required!\r\n        </mat-error>\r\n        <!-- <mat-error\r\n            *ngIf=\"!otpForm.get('mobile').hasError('required') &&\r\n                    otpForm.get('mobile').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <button mat-raised-button color=\"primary\" class=\"submit-button mt-3\" aria-label=\"LOGIN\"\r\n        [disabled]=\"otpForm.invalid\">\r\n            Submit\r\n      </button>\r\n\r\n  </form>\r\n</div>\r\n\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class signUpService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  signUp(data): Observable<any> {\r\n    console.log(\"data in sign up\", data)\r\n    return this.restService.create(RestUrl.signUp, data)\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  urlAddress: 'http://ec2-3-21-75-140.us-east-2.compute.amazonaws.com:3000'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}