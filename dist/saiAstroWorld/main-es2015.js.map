{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.service.ts","./src/app/auth/canActivateAuth.gaurd.ts","./src/app/chat/chat.component.ts","./src/app/chat/chat.component.html","./src/app/chat/chat.service.ts","./src/app/confirmation/confirmation.component.ts","./src/app/confirmation/confirmation.component.html","./src/app/forgot-password/forgot-password.component.ts","./src/app/forgot-password/forgot-password.component.html","./src/app/forgot-password/forgot-password.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.service.ts","./src/app/material-module.ts","./src/app/observables/behaviourSubject.service.ts","./src/app/shared/constant/regex-constant.ts","./src/app/shared/constant/rest-url.constants.ts","./src/app/shared/service/authentication/authentication.service.ts","./src/app/shared/service/commonService/common.service.ts","./src/app/shared/service/firebase/firebase.service.ts","./src/app/shared/service/http/http-intercepter-basic-auth.service.ts","./src/app/shared/service/http/loader-interceptor.service.ts","./src/app/shared/service/loader/loader.service.ts","./src/app/shared/service/payment/payment.service.ts","./src/app/shared/service/restApi/profileUpdate.service.ts","./src/app/shared/service/restApi/rest.service.ts","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/sign-up/sign-up.service.ts","./src/app/spinner/spinner.component.ts","./src/app/spinner/spinner.component.html","./src/app/wallet/wallet.component.ts","./src/app/wallet/wallet.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'home' },\r\n  { path: 'chat', component: ChatComponent },\r\n  { path: 'home' , loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)},\r\n  { path: 'dashboard' , loadChildren: () => import('./Dashboard/dashboard-module.module').then(m => m.DashboardModuleModule)},\r\n  { path: 'wallet' , component: WalletComponent}\r\n\r\n\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, ViewChild, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport {MatSidenav} from '@angular/material/sidenav';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { LoginComponent } from './login/login.component'\r\nimport {CommonService} from './shared/service/commonService/common.service'\r\nimport {Router} from '@angular/router'\r\nimport { ObservableDataService } from './observables/behaviourSubject.service';\r\nimport { ResourceLoader } from '@angular/compiler';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport { RestService } from './shared/service/restApi/rest.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\n\r\n\r\nexport class AppComponent implements OnInit {\r\n  title = 'saiAstroWorld';\r\n  chatList: any = [];\r\n  userList: any  = [];\r\n  messaging: FormGroup;\r\n  receiverId: any;\r\n  senderId: any;\r\n\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n  isUserLogin : boolean = false;\r\n  checkUser;\r\n  reason = '';\r\n  countryCode;\r\n  isAstrologerLoggedIn$: Observable<boolean>;\r\n  isLoggedIn$: Observable<boolean>;\r\n  AdminLoginHideFlag\r\n  constructor(private _commonService: CommonService, private _restService : RestService, private authService: AuthService, public dialog: MatDialog,\r\n     private _route : Router, private _observableDataService : ObservableDataService){\r\n    this.messaging = new FormGroup({\r\n      typing: new FormControl('')\r\n    })\r\n\r\n\r\n\r\n    // this.eventListener();\r\n\r\n    // if(sender && receiver){\r\n    //   firebase.database().ref().child('Chats').child(convId).limitToLast(1).on('child_added', (snapShot) => {\r\n    //     console.log(snapShot.val(), 'added');\r\n    //     this.chatList.push(snapShot.val());\r\n    //   })\r\n    // }\r\n\r\n    // child added for first time\r\n    // firebase.database().ref().child('Chats').limitToLast(1).on('child_added', snapShot => {\r\n    //   let sender = this.senderId;\r\n    //   let receiver = this.receiverId;\r\n    //   let convId ;\r\n    //   if(sender >  receiver) {\r\n    //     convId = receiver + '-' + sender;\r\n    //   }else {\r\n    //     convId = sender + '-' + receiver;\r\n    //   }\r\n    //   if(snapShot.key == convId){\r\n    //     let value = Object.values(snapShot.val())[Object.values(snapShot.val()).length - 1];\r\n    //     this.chatList.push(value);\r\n    //   }\r\n    // })\r\n\r\n    // firebase.database().ref().child('Chats').limitToLast(1).on('child_changed', snapShot => {\r\n    //   console.log(snapShot.val(), 'valkjkukjk');\r\n    //   if(snapShot.key){\r\n    //     let value = Object.values(snapShot.val())[Object.values(snapShot.val()).length - 1];\r\n    //     this.chatList.push(value);\r\n    //   }\r\n    // })\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n      this.checkUser = JSON.parse(sessionStorage.getItem('userData'));\r\n      this.isAstrologerLoggedIn$ = this.authService.isAstrologerLoggedIn;\r\n      this.isLoggedIn$ = this.authService.isLoggedIn;\r\n\r\n      console.log(\"checkUser ++\",this.checkUser);\r\n      if(this.checkUser != null) {\r\n        this.isUserLogin = true;\r\n      } else {\r\n        this.isUserLogin = false;\r\n        this.home()\r\n      }\r\n      console.log(\"this.isUserLogin ++++ \",this.isUserLogin);\r\n\r\n      this.isAstrologerLoggedIn$.subscribe(res=>{\r\n        if(res) {\r\n          this.AdminLoginHideFlag = true;\r\n        } else {\r\n          this.AdminLoginHideFlag = false;\r\n        }\r\n      });\r\n\r\n      this.getIPAddress();\r\n  }\r\n\r\n  dashboard(){\r\n    this._route.navigate(['dashboard']);\r\n  }\r\n\r\n  home(){\r\n    this._route.navigate(['home']);\r\n  }\r\n\r\n  wallet(){\r\n    this._route.navigate(['wallet']);\r\n  }\r\n\r\n  getIPAddress() {\r\n    this._commonService.getIPAddress().subscribe(res=>{\r\n      this.countryCode = res.countryCode;\r\n      console.log(\"Res is ===>>> \",res);\r\n      sessionStorage.setItem(\"CC\",this.countryCode);\r\n      // if(this.countryCode != null){\r\n      //   console.log(\"Will send countrycode once get !\")\r\n      // }\r\n    });\r\n  }\r\n\r\n  close(reason: string) {\r\n    this.reason = reason;\r\n    this.sidenav.close();\r\n  }\r\n\r\n  openDialog() {\r\n    const dialogRef = this.dialog.open(LoginComponent, {\r\n      width: '500px',\r\n      disableClose: true\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed',result);\r\n      if(typeof result != undefined && result != null && result != '') {\r\n        this.isUserLogin = true;\r\n        this.checkUser = result.userData;\r\n        sessionStorage.setItem('token',result.token);\r\n        sessionStorage.setItem('userData',JSON.stringify(result.userData));\r\n        let isAdminUser  = this.authService.checkAccess(this.checkUser);\r\n       console.log(\"isAdminUser \",isAdminUser);\r\n       if(!result.profileUpdated && typeof result.profileUpdated != 'undefined') {\r\n        this._route.navigate(['home/astroRegistration']);\r\n       } else if(!isAdminUser){\r\n         this._route.navigate(['dashboard']);\r\n       } else {\r\n         console.log(\"else condition !!!!!\");\r\n         this.home();\r\n       }\r\n      }\r\n    });\r\n  }\r\n\r\n  viewReport(){\r\n    console.log(\"this.checkUser \", this.checkUser);\r\n\r\n    // if(this.checkUser != null) {\r\n      console.log(\"view report\");\r\n      this._observableDataService.checkUserOperation('Report');\r\n      this._route.navigate(['home/astrologer']);\r\n    // } else {\r\n    // this._commonService.tostMessage(\"Please Login to ask report to Astrologers!\")\r\n    // }\r\n  }\r\n\r\n  viewQA(){\r\n    // if(this.checkUser != null) {\r\n      console.log(\"QA report\");\r\n      this._observableDataService.checkUserOperation('Q&A');\r\n      this._route.navigate(['home/astrologer']);\r\n    // } else {\r\n    // this._commonService.tostMessage(\"Please Login to ask question to Astrologers!\")\r\n    // }\r\n  }\r\n\r\n  talkToAstro(){\r\n    // if(this.checkUser != null) {\r\n      console.log(\"talkToAstro\");\r\n      this._observableDataService.checkUserOperation('Call');\r\n      this._route.navigate(['home/astrologer']);\r\n    // } else {\r\n    // this._commonService.tostMessage(\"Please Login to talk with Astrologers!\")\r\n    // }\r\n  }\r\n\r\n  chatToAstro(){\r\n    // if(this.checkUser != null) {\r\n      console.log(\"chatToAstro\");\r\n      this._observableDataService.checkUserOperation('Chat');\r\n      this._route.navigate(['home/astrologer']);\r\n    // } else {\r\n    // this._commonService.tostMessage(\"Please Login to chat with Astrologers!\")\r\n    // }\r\n  }\r\n\r\n\r\n  logOut(){\r\n    this.authService.logOut();\r\n  }\r\n\r\n\r\n  // firebase remove afterwards\r\n  signupFirebase(){\r\n    firebase.auth().createUserWithEmailAndPassword('amit.wohlig@gmail.com', 'Test@123').then((response)=> {\r\n      if(response){\r\n        console.log(response, 'signup response');\r\n\r\n        let userData = {\r\n          id: response.user.uid,\r\n          imageURL: '',\r\n          status: '',\r\n          username: 'Amit Verma'\r\n        }\r\n\r\n        console.log(response.user.uid, 'local id');\r\n        firebase.database().ref().child('Users').child(response.user.uid).set(userData);\r\n      }\r\n    })\r\n  }\r\n\r\n  signupWithOther(){\r\n    firebase.auth().createUserWithEmailAndPassword('amitverma@gmail.com', 'Test@123').then((response)=> {\r\n      if(response){\r\n        console.log(response, 'signup response');\r\n\r\n        let userData = {\r\n          id: response.user.uid,\r\n          imageURL: '',\r\n          status: '',\r\n          username: 'Amit Verma'\r\n        }\r\n\r\n        console.log(response.user.uid, 'local id');\r\n        firebase.database().ref().child('Users').child(response.user.uid).set(userData);\r\n      }\r\n    })\r\n  }\r\n  loginFirebase(){\r\n    firebase.auth().signInWithEmailAndPassword('amit.wohlig@gmail.com', 'Test@123').then((response) => {\r\n      console.log(response, 'login response');\r\n      this.senderId = response.user.uid;\r\n    })\r\n  }\r\n\r\n  loginOtherFirebase(){\r\n    firebase.auth().signInWithEmailAndPassword('amitverma@gmail.com', 'Test@123').then((response) => {\r\n      console.log(response, 'login response');\r\n      this.senderId = response.user.uid;\r\n    })\r\n  }\r\n\r\n  // sendMessage(){\r\n\r\n  // }\r\n\r\n  getUserList(){\r\n    firebase.database().ref('Users').on('value', snapshot => {\r\n      let snapvalue = snapshot.val();\r\n      if(snapvalue){\r\n        Object.values(snapvalue).forEach(list => {\r\n          if(list){\r\n            this.userList.push(list);\r\n          }\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n  getAllMessage(){\r\n    console.log(firebase);\r\n    // firebase.database().ref('Chats').orderByChild('sender').equalTo(\"mpksRVLonrQVNPWZZWJ0z2KsLWl2\").on('value', (snapShot)=> {\r\n    //   let snapVal = snapShot.val();\r\n    //   if(snapVal){\r\n    //       Object.values(snapVal).forEach(list => {\r\n    //         if(list['receiver'] == 'W6qE30aqEWb6OzHcWGoxg52U0F53'){\r\n    //           this.chatList.push(list);\r\n    //         }\r\n    //     });\r\n    //   }\r\n\r\n    // });\r\n\r\n    let sender = this.senderId || 'W6qE30aqEWb6OzHcWGoxg52U0F53';\r\n    let receiver = this.receiverId || 'mpksRVLonrQVNPWZZWJ0z2KsLWl2';\r\n    let convId ;\r\n    if(sender >  receiver) {\r\n      convId = receiver + '-' + sender;\r\n    }else {\r\n      convId = sender + '-' + receiver;\r\n    }\r\n    firebase.database().ref('Chats').child(convId).once('value', (snapShot) => {\r\n      console.log(snapShot.val(), 'value');\r\n      Object.values(snapShot.val()).forEach(list => this.chatList.push(list));\r\n    })\r\n  }\r\n\r\n  sendMessage(){\r\n    let sender = this.senderId || 'W6qE30aqEWb6OzHcWGoxg52U0F53';\r\n    let receiver = this.receiverId || 'mpksRVLonrQVNPWZZWJ0z2KsLWl2';\r\n    let convId ;\r\n    if(sender >  receiver) {\r\n      convId = receiver + '-' + sender;\r\n    }else {\r\n      convId = sender + '-' + receiver;\r\n    }\r\n    let reqObj = {\r\n      sender: 'W6qE30aqEWb6OzHcWGoxg52U0F53',\r\n      receiver: 'mpksRVLonrQVNPWZZWJ0z2KsLWl2',\r\n      isseen: false,\r\n      message: this.messaging.value.typing,\r\n    }\r\n    let key = firebase.database().ref().child('Chats').push().key;\r\n    firebase.database().ref().child('Chats').child(convId).child(key).set(reqObj).then(sendVal => {\r\n      console.log(sendVal, 'send value');\r\n    });\r\n\r\n    // event listener\r\n  }\r\n\r\n\r\n  setReceiverId(list){\r\n    this.receiverId = list.id\r\n  }\r\n\r\n\r\n  eventListener() {\r\n    let sender = this.senderId;\r\n    let receiver = this.receiverId;\r\n    let convId ;\r\n    if(sender >  receiver) {\r\n      convId = receiver + '-' + sender;\r\n    }else {\r\n      convId = sender + '-' + receiver;\r\n    }\r\n    if(sender && receiver){\r\n      firebase.database().ref().child('Chats').child(convId).orderByKey().limitToLast(1).on('child_added', (snapShot) => {\r\n        console.log(snapShot.val(), 'added');\r\n        this.chatList.push(snapShot.val());\r\n      })\r\n    }\r\n\r\n\r\n    firebase.database().ref().child('Chats').on('child_added', snapShot => {\r\n      console.log(snapShot.val(), 'valkjkukjk');\r\n    })\r\n  }\r\n}\r\n","<mat-sidenav-container\r\n    class=\"sidenav-container\" (backdropClick)=\"close('backdrop')\">\r\n\r\n  <mat-sidenav class=\"drawer-container\" #sidenav [fixedInViewport]=\"true\" (keydown.escape)=\"close('escape')\" disableClose>\r\n    <!-- <button mat-button  (click)=\"close('toggle button')\">X</button> -->\r\n      <div class=\"side-bar-logo\"><img class=\"mb-2\" src=\"../assets/images/logo/PNG/font120px.png\"></div>\r\n      <div class=\"list-group\" id=\"list-tab\" role=\"tablist\">\r\n        <a class=\"list-group-item list-group-item-action active\" id=\"astro-talk\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"talkToAstro()\" *ngIf=\"AdminLoginHideFlag\" role=\"tab\" aria-controls=\"astro-talk\">Talk to Astrologer</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-chat\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"chatToAstro()\" *ngIf=\"AdminLoginHideFlag\" role=\"tab\" aria-controls=\"astro-chat\">Chat with Astrologer</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-report\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"viewReport()\" *ngIf=\"AdminLoginHideFlag\" role=\"tab\" aria-controls=\"astro-report\">Get Reports</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-question\" data-toggle=\"list\" href=\"javascript:;\" (click)=\"viewQA()\" *ngIf=\"AdminLoginHideFlag\" role=\"tab\" aria-controls=\"astro-question\">Ask Question</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"horoscope\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"horoscope\">Horoscope 2020</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"kundli\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"kundli\">Kundli</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"astro-mall\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"astro-mall\">AstroMall</a>\r\n        <a class=\"list-group-item list-group-item-action\" id=\"blog\" data-toggle=\"list\" href=\"javascript:;\" role=\"tab\" aria-controls=\"blog\">Blog</a>\r\n      </div>\r\n\r\n      <!-- <li><a>Talk to Astrologer</a></li>\r\n      <li><a>Horoscope 2020</a></li>\r\n      <li><a>Kundli</a></li>\r\n      <li><a>AstroMall</a></li>\r\n      <li><a>Blog</a></li> -->\r\n\r\n  </mat-sidenav>\r\n\r\n  <mat-sidenav-content>\r\n\r\n    <mat-toolbar class=\"toolbar-wrapper\">\r\n\r\n      <mat-toolbar-row>\r\n\r\n        <button mat-button class=\"menu-button\" (click)=\"sidenav.open()\"><mat-icon aria-hidden=\"false\">view_headline</mat-icon></button>\r\n        <span class=\"hm-logo\"><a href=\"javascript:;\"><img src=\"../assets/images/logo/PNG/font120px.png\"></a></span>\r\n        <span class=\"example-spacer\"></span>\r\n\r\n        <div class=\"quick-link\" *ngIf=\"isAstrologerLoggedIn$ | async as isAstrologerLoggedIn\">\r\n\r\n        <span class=\"example-spacer\"></span>\r\n        <span class=\"highlight-menu\"><a href=\"javascript:;\" (click)=\"talkToAstro()\">Talk to Astrologer</a></span>\r\n        <span class=\"highlight-menu font-weight-bold\"><a href=\"javascript:;\" (click)=\"chatToAstro()\">Chat with Astrologer</a></span>\r\n        <span class=\"highlight-menu\"><a href=\"javascript:;\" (click)=\"viewReport()\">Get Reports</a></span>\r\n        <span class=\"highlight-menu\"><a href=\"javascript:;\" (click)=\"viewQA()\">Ask Question</a></span>\r\n        <span><a href=\"javascript:;\">Horoscope 2020</a> </span>\r\n\r\n\r\n       </div>\r\n        <!-- <button mat-button><mat-icon aria-hidden=\"false\">notifications</mat-icon></button> -->\r\n        <mat-icon class=\"hm-user-icon\" *ngIf=\"isUserLogin\" mat-button [matMenuTriggerFor]=\"menu\" mat-raised-button>face</mat-icon>\r\n        <mat-menu #menu=\"matMenu\" backdropClass=\"hm-user-menu-item\" >\r\n          <h4 *ngIf=\"isUserLogin\">{{checkUser.name}}</h4>\r\n          <!-- <h4>{{checkUser.email}}</h4> -->\r\n          <h4 *ngIf=\"isUserLogin\">{{checkUser.contactNo}}</h4>\r\n          <mat-divider></mat-divider>\r\n          <button *ngIf=\"!AdminLoginHideFlag\" mat-menu-item (click)=\"dashboard()\"><mat-icon>dashboard</mat-icon> <span>Dashboard</span></button>\r\n          <button *ngIf=\"AdminLoginHideFlag\" mat-menu-item (click)=\"home()\"><mat-icon>home</mat-icon> <span>Home</span></button>\r\n          <button mat-menu-item (click)=\"logOut()\"><mat-icon>power_settings_new</mat-icon> Log Out</button>\r\n          <!-- <button mat-menu-item>Info</button> -->\r\n        </mat-menu>\r\n        <button mat-raised-button color=\"primary\" (click)=\"openDialog()\" *ngIf=\"!isUserLogin\">Login</button>\r\n        <mat-icon class=\"hm-wallet mt-3\" mat-raised-button (click)=\"wallet();\">account_balance_wallet</mat-icon>\r\n        <!-- <mat-icon  mat-raised-button>login</mat-icon> -->\r\n\r\n        <mat-icon class=\"hm-cart mt-3\" mat-raised-button>shopping_cart</mat-icon>\r\n        <!-- <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example heart icon\">favorite</mat-icon>\r\n        <mat-icon class=\"example-icon\" aria-hidden=\"false\" aria-label=\"Example delete icon\">delete</mat-icon> -->\r\n      </mat-toolbar-row>\r\n      <div class=\"header-social\">\r\n        <a class=\"home\" (click)=\"home()\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\r\n        <a href=\"https://www.facebook.com/Sai-Astro-World-103546981582184\" target=\"_blank\" class=\"facebook\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n        <a href=\"https://twitter.com/saiastroworld\" target=\"_blank\" class=\"twitter\"><i class=\"fa fa-twitter\"></i></a>\r\n        <a href=\"https://www.instagram.com/saiastroworld/\" target=\"_blank\" class=\"instagram\"><i class=\"fa fa-instagram\"></i></a>\r\n        <a href=\"https://www.youtube.com/c/DrSaiSuvajitAstrologerKnowYourFuture/featured\" target=\"_blank\" class=\"youtube\"><i class=\"fa fa-youtube\"></i></a>\r\n      </div>\r\n    </mat-toolbar>\r\n\r\n      <div class=\"fixed-plugin\" *ngIf=\"isAstrologerLoggedIn$ | async as isAstrologerLoggedIn\">\r\n\r\n          <div class=\"example-button-row\">\r\n\r\n            <button matTooltip=\"Chat\" class=\"chat\" matTooltipPosition=\"left\"  mat-mini-fab (click)=\"chatToAstro()\" aria-label=\"chat icon\">\r\n              <mat-icon>chat</mat-icon>\r\n            </button>\r\n            <button matTooltip=\"Call\" class=\"call\" matTooltipPosition=\"before\" mat-mini-fab (click)=\"talkToAstro()\"  aria-label=\"call icon\">\r\n              <mat-icon>phone</mat-icon>\r\n            </button>\r\n            <button matTooltip=\"Report\" class=\"report\" matTooltipPosition=\"before\" mat-mini-fab  (click)=\"viewReport()\" aria-label=\"report icon\">\r\n              <mat-icon>assignment</mat-icon>\r\n            </button>\r\n            <button matTooltip=\"Ask Question\" class=\"qtsans\" matTooltipPosition=\"before\" mat-mini-fab (click)=\"viewQA()\"  aria-label=\"Q&A icon\">\r\n              <i class=\"fa fa-question\" aria-hidden=\"true\"></i>\r\n            </button>\r\n          </div>\r\n       </div>\r\n\r\n     <app-spinner></app-spinner>\r\n    <router-outlet></router-outlet>\r\n\r\n\r\n    <footer class=\"footer-wrapper py-5\">\r\n      <div class=\"footer-top\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-3 footer-about wow fadeInUp animated\" style=\"visibility: visible; animation-name: fadeInUp;\">\r\n              <h3><b>About us</b></h3>\r\n              <p>\r\n                Sai's AstroWorld is the best astrology website for online Astrology predictions. Talk to Astrologer on call and get answers to all your worries by seeing the future life through Astrology Kundli Predictions from the best Astrologers from India. Get best future predictions related to Marriage, love life, Career or Health over call, chat, query or report.\r\n              </p>\r\n              <!-- <p>© Company Inc.</p> -->\r\n                  </div>\r\n\r\n                  <div class=\"col-md-4 footer-links wow fadeInUp animated\" style=\"visibility: visible; animation-name: fadeInUp;\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col\">\r\n                        <h3><b>Quick Links</b></h3>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-6\">\r\n                        <p><a class=\"scroll-link\" href=\"#top-content\">Horoscope</a></p>\r\n                        <p><a class=\"scroll-link\" href=\"#top-content\">Refund & Cancellation Policy</a></p>\r\n                        <p><a href=\"#\">Disclaimer</a></p>\r\n                        <!-- <p><a href=\"#\">How it works</a></p>\r\n                        <p><a href=\"#\">Our clients</a></p> -->\r\n                      </div>\r\n                      <div class=\"col-md-6\">\r\n                        <p><a href=\"#\">Terms &amp; Conditions</a></p>\r\n                        <p><a href=\"#\">Privacy Policy</a></p>\r\n                        <p><a href=\"#\">Pricing Policy</a></p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-3 footer-contact wow fadeInDown animated\" style=\"visibility: visible; animation-name: fadeInDown;\">\r\n                    <h3><b>Contact</b></h3>\r\n                        <!-- <p><i class=\"fa fa-map-marker-alt\"></i> Demo Address 10, 10136 Turin Italy</p> -->\r\n                        <!-- <p><i class=\"fa fa-phone\"></i> Phone: (0039) 123 45 67 890</p> -->\r\n                        <p><i class=\"fa fa-envelope\"></i> Email: <a href=\"mailto:Info@saiastroworld.com\">Info@saiastroworld.com</a></p>\r\n                        <!-- <p><i class=\"fa fa-skype\"></i> Skype: you_online</p> -->\r\n                        <div class=\"footer-social\">\r\n                          <a href=\"https://www.facebook.com/Sai-Astro-World-103546981582184\" target=\"_blank\" class=\"facebook\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n                          <a href=\"https://twitter.com/saiastroworld\" target=\"_blank\" class=\"twitter\"><i class=\"fa fa-twitter\"></i></a>\r\n                          <a href=\"https://www.instagram.com/saiastroworld/\" target=\"_blank\" class=\"instagram\"><i class=\"fa fa-instagram\"></i></a>\r\n                          <a href=\"https://www.youtube.com/c/DrSaiSuvajitAstrologerKnowYourFuture/featured\" target=\"_blank\" class=\"youtube\"><i class=\"fa fa-youtube\"></i></a>\r\n                        </div>\r\n                   </div>\r\n                   <div class=\"col-md-2 wow fadeInDown animated\" style=\"visibility: visible; animation-name: fadeInDown;\">\r\n                    <h3><b>Download our App</b></h3>\r\n                    <div class=\"google-play-store mb-3\">\r\n                         <img src=\"../assets/images/social/google-app.png\">\r\n                   </div>\r\n                    <div class=\"app-store\">\r\n                         <img src=\"../assets/images/social/app-store.png\">\r\n                   </div>\r\n                  </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"footer-bottom pt-5\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n               <div class=\"col footer-social\">\r\n                    <a href=\"#\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n                    <a href=\"#\"><i class=\"fa fa-twitter\"></i></a>\r\n                    <a href=\"#\"><i class=\"fa fa-instagram\"></i></a>\r\n                  </div>\r\n             </div>\r\n        </div>\r\n      </div> -->\r\n\r\n<!--\r\n  <button (click)=\"signupFirebase()\">signup</button>\r\n  <button (click)=\"signupWithOther()\">other signup</button>\r\n  <button (click)=\"loginFirebase()\">login</button>\r\n  <button (click)=\"loginOtherFirebase()\">login other</button>\r\n  <button (click)=\"sendMessage()\">Send</button>\r\n  <button (click)=\"getUserList()\">user</button>\r\n  <button (click)=\"getAllMessage();\">All message</button>\r\n\r\n  <div *ngFor=\"let list of userList;\">\r\n    <span (click)=\"setReceiverId(list)\">{{list.username}}</span>\r\n  </div>\r\n  <form [formGroup]=\"messaging\" class=\"mt-5\">\r\n    <input type=\"text\" formControlName=\"typing\">\r\n  </form>\r\n  <div *ngFor=\"let list of chatList;\">\r\n    {{list.message}}\r\n  </div> -->\r\n    </footer>\r\n\r\n    <!-- <app-chat [viewChatOption]=\"true\"></app-chat> -->\r\n\r\n  </mat-sidenav-content>\r\n\r\n  <!-- <button mat-button><mat-icon aria-hidden=\"false\">notifications</mat-icon></button> -->\r\n\r\n\r\n</mat-sidenav-container>\r\n\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MaterialModule } from './material-module';\r\nimport { LoginComponent } from './login/login.component'\r\nimport { HttpIntercepterBasicAuthService } from './shared/service/http/http-intercepter-basic-auth.service';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { LoaderInterceptorService } from './shared/service/http/loader-interceptor.service';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AuthGuard } from './auth/canActivateAuth.gaurd'\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\r\n// import { SocialLoginModule, SocialAuthServiceConfig } from 'angularx-social-login';\r\n// import { GoogleLoginProvider } from 'angularx-social-login';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/messaging';\r\nimport { ChatComponent } from './chat/chat.component';\r\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\r\nimport { WalletComponent } from './wallet/wallet.component';\r\n\r\n\r\n\r\n// export const config = {\r\n//   apiKey: \"AIzaSyCwcgfKu2EkT1E_2uRqf7bloO8P6PHRNO0\",\r\n//   authDomain: \"simpleintroslider.firebaseapp.com\",\r\n//   databaseURL: \"https://SimpleIntroSlider.firebaseio.com\",\r\n//   projectId: \"simpleintroslider\",\r\n//   storageBucket: \"\",\r\n//   messagingSenderId: \"861357045560\"\r\n// };\r\n\r\n\r\n// firebase astro world \r\nexport const config = {\r\n  apiKey: \"AIzaSyCJ_QJQqYDWVzricXXyjtmEef7N7ty25Ms\",\r\n  authDomain: \"saisastroworld.firebaseapp.com\",\r\n  databaseURL: \"https://SaisAstroworld.firebaseio.com\",\r\n  projectId: \"saisastroworld\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"785274786840\"\r\n};\r\n\r\n// apiKey: \"<API_KEY>\",\r\n// authDomain: \"<PROJECT_ID>.firebaseapp.com\",\r\n// databaseURL: \"https://<DATABASE_NAME>.firebaseio.com\",\r\n// projectId: \"<PROJECT_ID>\",\r\n// storageBucket: \"<BUCKET>.appspot.com\",\r\n// messagingSenderId: \"<SENDER_ID>\",\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignUpComponent,\r\n    ForgotPasswordComponent,\r\n    SpinnerComponent,\r\n    ChatComponent,\r\n    ConfirmationComponent,\r\n    WalletComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    CarouselModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    NgxSpinnerModule,\r\n    // SocialLoginModule\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    AuthGuard,\r\n    // {\r\n    //   provide: 'SocialAuthServiceConfig',\r\n    //   useValue: {\r\n    //     autoLogin: false,\r\n    //     providers: [\r\n    //       {\r\n    //         id: GoogleLoginProvider.PROVIDER_ID,\r\n    //         provider: new GoogleLoginProvider(\r\n    //           'clientId'\r\n    //         ),\r\n    //       },\r\n    //     ],\r\n    //   } as SocialAuthServiceConfig ,\r\n    // },\r\n  {provide: LocationStrategy, useClass: HashLocationStrategy},\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: HttpIntercepterBasicAuthService,\r\n    multi: true\r\n  }, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: LoaderInterceptorService,\r\n    multi: true\r\n  }\r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { CommonService } from '../shared/service/commonService/common.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private loggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  private AstrologerLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n  get isLoggedIn() {\r\n    return  this.loggedIn.asObservable();\r\n  }\r\n  get isAstrologerLoggedIn() {\r\n    return  this.AstrologerLoggedIn.asObservable();\r\n  }\r\n\r\n  constructor(\r\n    private _route: Router,\r\n    private _commonService: CommonService\r\n  ) {\r\n\r\n  }\r\n\r\n  checkSession(userData) {\r\n    if( userData != null && userData.userType == 2) { // this condition is checking whether it's admin or normal user\r\n    this.AstrologerLoggedIn.next(false);\r\n    this.loggedIn.next(true)\r\n    return true;\r\n    } else {\r\n    this.AstrologerLoggedIn.next(true);\r\n    this.loggedIn.next(true);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  checkAccess(userData) {\r\n    if( userData != null && userData.userType == 2 ) { // this condition is checking whether it's admin or normal user\r\n      this.AstrologerLoggedIn.next(false);\r\n      this.loggedIn.next(true);\r\n      return false;\r\n    } else {\r\n      this.AstrologerLoggedIn.next(true);\r\n      this.loggedIn.next(true);\r\n      return true;\r\n    }\r\n  }\r\n\r\n  logOut(){\r\n    location.reload();\r\n    sessionStorage.clear();\r\n    this._route.navigate(['']);\r\n    this._commonService.tostMessage(\"Log Out Successfully!\");\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private route: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    let date = new Date();\r\n    let userValue = JSON.parse(sessionStorage.getItem(\"userData\"));\r\n    console.log(\"Can Activate servcie  ++++++++++++++ \",userValue)\r\n    // if(userValue == null) this.authService.logOut();\r\n\r\n    let userFlag = this.authService.checkSession(userValue);\r\n    console.log(\"flag\",userFlag);\r\n    if (userFlag) {\r\n      // this.route.navigate(['dashboard']);\r\n       return true;\r\n    } else {\r\n      //  this.route.navigate(['']);\r\n      this.authService.logOut();\r\n      // console.log(\"User Flag retrun ------> false\");\r\n       return false;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '../../../node_modules/@angular/forms';\r\nimport { FirebaseService } from '../shared/service/firebase/firebase.service';\r\nimport { ObservableDataService } from '../observables/behaviourSubject.service';\r\nimport { PaymentService } from '../shared/service/payment/payment.service';\r\nimport { HttpParams } from '../../../node_modules/@angular/common/http';\r\nimport { ChatService } from './chat.service';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  chatForm: FormGroup;\r\n  chatList: any = [];\r\n  getFirebaseUserData: any;\r\n  chatName =  '';\r\n  allChatList: any = [];\r\n  viewChatScreen: boolean = false;\r\n  @Input() viewChatOption : boolean = true;\r\n  timer: any;\r\n  constructor(public firebaseService : FirebaseService, public observableService: ObservableDataService, private paymentService:PaymentService, private chatService: ChatService) {\r\n    this.chatForm = new FormGroup({\r\n      message: new FormControl('', Validators.required)\r\n    }); \r\n\r\n    if(sessionStorage.getItem('userFirebaseData')){\r\n      this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n    }  \r\n    // this.firebaseService.messageListener();\r\n\r\n    // get subject message\r\n    this.observableService.getMessage.asObservable().subscribe(messageRes => {\r\n      if(messageRes){\r\n        this.chatList.push(messageRes);\r\n        setTimeout(() => {\r\n          let element = document.getElementById('chatWrap');\r\n          if (element) {\t\t\t\t\t\t\r\n            element.scrollTop = element.scrollHeight;\r\n          }\r\n        }, 100);\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.chatListDetail();\r\n\r\n\r\n    // if has receiver id\r\n    if(sessionStorage.getItem('receiverId') && sessionStorage.getItem('chatUserDetail')){\r\n      let chatUserData = JSON.parse(sessionStorage.getItem('chatUserDetail'));\r\n      this.chatName = chatUserData ? chatUserData.name: '';\r\n      this.viewChatScreen = true;\r\n      this.startTimer();\r\n    }\r\n    // if has receiver id end\r\n  }\r\n\r\n\r\n  chatListDetail(){\r\n    this.firebaseService.getChatList().then(chatList => {\r\n      if(chatList){\r\n        this.allChatList = chatList;\r\n        console.log(this.allChatList, 'all chat list');\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllMessage(){\r\n    this.firebaseService.getAllMessages().then(response => {\r\n      this.chatList = response;\r\n    });\r\n  }\r\n\r\n  sendMessage(){\r\n    this.firebaseService.sendMessages(this.chatForm.value.message);\r\n    this.chatForm.reset();\r\n  }\r\n\r\n  getChatMsgScreen(chatInfo){\r\n    console.log(chatInfo, 'chat info');\r\n    this.chatName = chatInfo.name;\r\n    sessionStorage.setItem('receiverId', chatInfo.id);\r\n    \r\n    this.viewChatScreen = true;\r\n    this.getAllMessage();\r\n\r\n  this.startTimer();\r\n  }\r\n\r\n  viewchatListScreen(){\r\n    this.viewChatScreen = false;\r\n    clearInterval(this.timer);\r\n    this.deductChatAmount();\r\n    sessionStorage.removeItem('chatName');\r\n    this.chatListDetail();\r\n  }\r\n\r\n\r\n  placeOrder(){\r\n    let reqObj = { \r\n      \"amount\": 50,\r\n      \"currency\": \"INR\",\r\n      \"userId\": \"balatwo\",\r\n      \"recieptId\": this.makeOrderid()\r\n  }\r\n\r\n  this.paymentService.orderPlace(reqObj).subscribe(response => {\r\n    console.log(response, 'place order');\r\n    if(response) {\r\n      const options: any = {\r\n        key: 'rzp_test_ZeUhqzQZ4q0Gbg',\r\n        amount: response['amount'], // amount should be in paise format to display Rs 1255 without decimal point\r\n        currency: response['currency'],\r\n        name: '', // company name or product name\r\n        description: '',  // product description\r\n        image: '/assets/images/logo/PNG/font120px.png', // company logo or product image\r\n        order_id: response['id'], // order_id created by you in backend\r\n        modal: {\r\n          // We should prevent closing of the form when esc key is pressed.\r\n          escape: false,\r\n        },\r\n        notes: {\r\n          // include notes if any\r\n        },\r\n        theme: {\r\n          color: '#f9a825'\r\n        }\r\n      };\r\n      options.handler = ((response, error) => {\r\n        options.response = response;\r\n        console.log(response);\r\n        console.log(options);\r\n\r\n        // call your backend api to verify payment signature & capture transaction\r\n        if(response) {\r\n          this.verifySignature(response);\r\n        }\r\n\r\n      });\r\n      options.modal.ondismiss = (() => {\r\n        // handle the case when user closes the form while transaction is in progress\r\n        console.log('Transaction cancelled.');\r\n      });\r\n      const rzp = new window['Razorpay'](options);\r\n      rzp.open();\r\n    }\r\n  })\r\n\r\n   \r\n  }\r\n\r\n  getWalletInfo(){\r\n    let params = new HttpParams().set('userId', \"balatwo\");\r\n    this.paymentService.walletInfo(params).subscribe(response => {\r\n      if(response){\r\n        console.log(response, 'wallet info');\r\n      }\r\n    })\r\n  }\r\n\r\n  verifySignature(orderDetail){\r\n    if(orderDetail) {\r\n      let params = new HttpParams().set('signature', orderDetail.razorpay_signature).set('orderId', orderDetail.razorpay_order_id).set(\"paymentId\", orderDetail.razorpay_payment_id);\r\n      this.paymentService.signatureVerify(params).subscribe(response => {\r\n        console.log(response, 'response signayture');\r\n        if(response){\r\n          this.updateWallet(orderDetail)\r\n        }\r\n      })\r\n    }  \r\n  }\r\n\r\n  updateWallet(orderInfo){\r\n    if(orderInfo){\r\n      // let params = new HttpParams().set('userId', 'balatwo').set(\"orderId\", orderInfo.razorpay_order_id);\r\n      let params = {\r\n        userId: 'balatwo',\r\n        orderId: orderInfo.razorpay_order_id\r\n      }\r\n      this.paymentService.updateWalletInfo(params).subscribe(response => {\r\n        console.log(response, 'wallet update');\r\n        \r\n      })\r\n    }\r\n  \r\n  }\r\n\r\n  startTimer(){\r\n    let sec = 0;\r\n    let min = 0;\r\n    // start timer\r\n    this.timer = setInterval(() => {\r\n      sec++;\r\n      if(sec > 59){\r\n        sec = 0;\r\n        min++;\r\n      }\r\n      let chatTime = (((min && min < 10) ? '0'+min : min)+ ':' + ((sec && sec < 10) ? '0' + sec : sec));\r\n      localStorage.setItem('time', min.toString());\r\n      console.log(chatTime, 'chat time');\r\n      return chatTime;\r\n      \r\n    }, 1000);\r\n    // start timer end\r\n  }\r\n\r\n  // make order id\r\n  makeOrderid() {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < 12; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n\r\n    if(result) {\r\n      result = \"recieptId_\"+result;\r\n    }\r\n    console.log(result, 'result');\r\n    return result;\r\n }\r\n  // make order id end\r\n\r\n  ngOnDestroy(){\r\n    clearInterval(this.timer);\r\n    this.deductChatAmount();\r\n  }\r\n\r\n  deductChatAmount(){\r\n    let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    let chatUserData = JSON.parse(sessionStorage.getItem('chatUserDetail'));\r\n    let reqObj = {\r\n      type: 'chat',\r\n      minutes: localStorage.getItem('time') ? parseInt(localStorage.getItem('time')): '',\r\n      userId: userData.userId,\r\n      astrologerId: chatUserData.userId\r\n    }\r\n    this.chatService.deductChatBalance(reqObj).subscribe(response => {\r\n      console.log(response, 'chat response');\r\n      localStorage.removeItem('time');\r\n    })\r\n  }\r\n}\r\n","<div class=\"chat-wrapper\" *ngIf=\"viewChatOption\">\r\n     <!-- chat list -->\r\n     <mat-card class=\"list-wrapper example-card\" *ngIf=\"!viewChatScreen\">\r\n            <div *ngFor=\"let list of allChatList\" class=\"media\" (click)=\"getChatMsgScreen(list)\">\r\n                <div class=\"avatar\" [ngStyle]=\"{'background-color': '#'+(list?.color) }\">\r\n                    {{list?.shortName}}\r\n                </div>\r\n                <div class=\"media-body\">\r\n                    <h5 class=\"pointer\">{{list?.name}}</h5>\r\n                    <p class=\"pointer\">{{list?.lastMessage}}</p>\r\n                </div>\r\n            </div>\r\n     </mat-card>\r\n        <!-- chat list end -->\r\n    <mat-card class=\"example-card\" *ngIf=\"viewChatScreen\">\r\n        <mat-card-header>\r\n            <button mat-mini-fab mat-card-avatar color=\"primary\" class=\"mr-3\" (click)=\"viewchatListScreen()\"><mat-icon>keyboard_arrow_left</mat-icon></button>\r\n            <div mat-card-avatar class=\"user-header-image\"></div>\r\n                <mat-card-title>{{chatName}}</mat-card-title>\r\n                <mat-card-subtitle>Online</mat-card-subtitle>\r\n            </mat-card-header>\r\n        <form [formGroup]=\"chatForm\">\r\n                <div class=\"chat-list\" id=\"chatWrap\">\r\n                    <div class=\"listing clearfix\" *ngFor=\"let list of chatList;\">\r\n                        <span [ngClass]=\"(list?.receiver == getFirebaseUserData?.id) ? 'mine': 'other'\">{{list?.message}}</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"message-field\">\r\n                    <textarea formControlName=\"message\"></textarea>\r\n                    <button mat-mini-fab color=\"primary\" (click)=\"sendMessage()\" [disabled]=\"chatForm.invalid\"><mat-icon>send</mat-icon></button>\r\n                </div>\r\n            </form>\r\n    </mat-card>\r\n\r\n    <!-- click get payment options -->\r\n    <!-- <button (click)=\"placeOrder();\">Place Order</button> -->\r\n    <!-- click get payment options -->\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatService {\r\n\r\n  constructor(private restService: RestService) { }\r\n\r\n  deductChatBalance(data){\r\n    return this.restService.create(RestUrl.deductBalance, data);\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '../../../node_modules/@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirmation',\r\n  templateUrl: './confirmation.component.html',\r\n  styleUrls: ['./confirmation.component.scss']\r\n})\r\nexport class ConfirmationComponent implements OnInit {\r\n  minuteLisiting: Array<any>;\r\n  selectedIndex: number;\r\n  isValid: boolean = false;\r\n  walletBalance: any;\r\n  constructor(@Inject(MAT_DIALOG_DATA) public modalData: any, public dialogRef: MatDialogRef<ConfirmationComponent>,) {\r\n    this.minuteLisiting = [\r\n      {\r\n        name: \"5 min\",\r\n        value: 5\r\n      },\r\n      {\r\n        name: \"10 min\",\r\n        value: 10\r\n      },\r\n      {\r\n        name: \"15 min\",\r\n        value: 15,\r\n      },\r\n      {\r\n        name: \"20 min\",\r\n        value: 20\r\n      }\r\n    ]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(sessionStorage.getItem('walletAmount')){\r\n      this.walletBalance = sessionStorage.getItem('walletAmount');\r\n    }\r\n  }\r\n\r\n  selectList(listInfo, index){\r\n    this.selectedIndex  = index;\r\n    console.log(\"listInfo\")\r\n    if(sessionStorage.getItem('walletAmount') && listInfo){\r\n      let totalValue = listInfo.value * 10;\r\n      if(totalValue < parseInt(sessionStorage.getItem('walletAmount'))) {\r\n        this.isValid = false;\r\n      }else {\r\n        this.isValid = true;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  connect(){\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n}\r\n","<div class=\"confirmation-wrapper\">\r\n    <h3>{{modalData?.type}} with {{modalData?.name}}</h3>\r\n    <h4>\r\n      <span *ngIf=\"modalData?.countryCode == '+91'\"> <i class=\"fa fa-inr\" aria-hidden=\"true\"></i> </span>\r\n      <span *ngIf=\"modalData?.countryCode == '+1'\"> <i class=\"fa fa-usd\" aria-hidden=\"true\"></i> </span>\r\n      <span *ngIf=\"modalData?.countryCode == '+886'\"> NT$ </span>\r\n      {{modalData?.chat}}/Min</h4>\r\n    <!-- <h4>Wallet Balance: {{walletBalance}}</h4> -->\r\n    <div class=\"minute-listing\">\r\n        <div class=\"list\" *ngFor=\"let list of minuteLisiting; let i = index\" [ngClass]=\"{'active': selectedIndex == i}\" (click)=\"selectList(list,i)\">\r\n            <span>{{list.name}}</span>\r\n        </div>\r\n    </div>\r\n    <p *ngIf=\"isValid\">\r\n      To make this connection you required to add sufficient amount in the wallet\r\n    </p>\r\n    <div class=\"text-center\">\r\n        <button mat-raised-button color=\"primary\" [disabled]=\"isValid\" (click)=\"connect();\">Connect</button>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant';\r\nimport { ForgotPasswordService } from './forgot-password.service';\r\nimport {CommonService} from '../shared/service/commonService/common.service'\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  validateForm: FormGroup;\r\n  resetForm: FormGroup;\r\n\r\n  isVisible:boolean = true;\r\n  isOtp:boolean = false;\r\n\r\n  @Output() outputResetData: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _forgotPasswordService : ForgotPasswordService, private _commonService : CommonService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.validateForm = this._formBuilder.group({\r\n      contactNo   : ['', [Validators.required, this.mobileNumber]],\r\n      otp: [{value:'', disabled: true}],\r\n      userType: ['']\r\n    });\r\n\r\n    this.resetForm = this._formBuilder.group({\r\n      contactNo   : [{value:'', disabled:true}, [Validators.required, this.mobileNumber]],\r\n      userType : [{value:'', disabled:true}, [Validators.required]],\r\n      password : ['', [Validators.required, this.passwordPattern]]\r\n    });\r\n  }\r\n\r\n  submitForm(value: any){\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n      this._forgotPasswordService.forgetPassword(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n\r\n        let resonseMessage = responseData.message;\r\n\r\n        if(responseData.status == 200) {\r\n          // this.isVisible = true;\r\n          this.validateForm.controls['userType'].setValue(responseData.data.userType, {onlySelf:true});\r\n          this.validateForm.controls['otp'].enable();\r\n          this.isOtp = true;\r\n          console.log(\"this.validateForm ++++++++++++\",this.validateForm)\r\n\r\n\r\n        } else {\r\n          alert(resonseMessage);\r\n        }\r\n\r\n      })\r\n  }\r\n\r\n  verifyOTP(value) {\r\n\r\n    console.log(\"verifyOTP login \",value);\r\n\r\n    this._commonService.verifyOTP(value).subscribe((responseData)=>{\r\n      console.log(\"responseData ------> \",responseData);\r\n      let resonseMessage = responseData.message;\r\n\r\n      if(responseData.status == 200) {\r\n        this.isVisible = false;\r\n        this.resetForm.controls['contactNo'].setValue(this.validateForm.value.contactNo, {onlySelf:true});\r\n        this.resetForm.controls['userType'].setValue(this.validateForm.value.userType == 1 ? \"User\" : \"Astrologer\", {onlySelf:true});\r\n        console.log(\"this.resetForm ----->\",this.resetForm);\r\n\r\n      } else {\r\n        alert(resonseMessage);\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  resetUser(value){\r\n    value['contactNo'] = this.resetForm.controls.contactNo.value;\r\n    value['userType'] = this.resetForm.controls.userType.value == \"User\" ? '1' : '2';\r\n\r\n    console.log(\"resetUser is \", value, \"And\", this.resetForm);\r\n    this._forgotPasswordService.resetUser(value).subscribe((responseData)=>{\r\n      console.log(\"responseData ------> \",responseData);\r\n      let resonseMessage = responseData.message;\r\n\r\n      if(responseData.status == 200) {\r\n        this.validateForm.reset();\r\n        this.resetForm.reset();\r\n        this.outputResetData.emit(true);\r\n      } else {\r\n        alert(resonseMessage);\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  mobileNumber= (control: FormControl): {[s: string]: boolean} => {\r\n\r\n    console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n      return {};\r\n    } else {\r\n\r\n      return { mobileErr: true, error: true };\r\n    }\r\n  }\r\n\r\n  passwordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n    console.log(\"passwordPattern ----->\",control.value)\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n      return {};\r\n    }else{\r\n      return { passErr: true, error: true };\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"form-wrapper\">\r\n<form *ngIf=\"isVisible\" name=\"validateForm\" [formGroup]=\"validateForm\" novalidate>\r\n\r\n  <mat-form-field class=\"form-field-width\">\r\n    <mat-label>Mobile Number</mat-label>\r\n    <input matInput formControlName=\"contactNo\" minlength=\"10\" maxlength=\"10\">\r\n    <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n    <mat-error *ngIf=\"validateForm.get('contactNo').hasError('required')\">\r\n        Mobile number is required!\r\n    </mat-error>\r\n    <mat-error\r\n        *ngIf=\"!validateForm.get('contactNo').hasError('required') &&\r\n                validateForm.get('contactNo').hasError('mobileErr')\">\r\n        Please enter a valid mobile number!\r\n    </mat-error>\r\n</mat-form-field>\r\n\r\n<mat-form-field class=\"form-field-width mt-2\">\r\n  <mat-label>OTP</mat-label>\r\n  <input matInput formControlName=\"otp\">\r\n  <mat-icon matSuffix class=\"secondary-text\">code</mat-icon>\r\n  <mat-error *ngIf=\"validateForm.get('otp').hasError('required')\">\r\n      OTP is required!\r\n  </mat-error>\r\n\r\n</mat-form-field>\r\n\r\n<button *ngIf=\"!isOtp\" mat-raised-button color=\"primary\" class=\"submit-button mt-3\"\r\n            [disabled]=\"validateForm.invalid\" (click)=\"submitForm(validateForm.value)\">\r\n        Get OTP\r\n    </button>\r\n    <button *ngIf=\"isOtp\" mat-raised-button color=\"primary\" class=\"submit-button mt-3\" (click)=\"verifyOTP(validateForm.value)\">\r\n        Verify OTP\r\n    </button>\r\n</form>\r\n\r\n<form *ngIf=\"!isVisible\" name=\"resetForm\" [formGroup]=\"resetForm\" novalidate>\r\n\r\n      <mat-form-field class=\"form-field-width\">\r\n        <mat-label>Mobile Number</mat-label>\r\n        <input matInput formControlName=\"contactNo\" minlength=\"10\" maxlength=\"10\">\r\n        <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n        <mat-error *ngIf=\"resetForm.get('contactNo').hasError('required')\">\r\n            Mobile number is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!resetForm.get('contactNo').hasError('required') &&\r\n                    resetForm.get('contactNo').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Select Type</mat-label>\r\n      <input matInput formControlName=\"userType\" minlength=\"10\" maxlength=\"10\">\r\n        <mat-error *ngIf=\"resetForm.get('userType').hasError('required')\">\r\n          Login type is required!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>New Password</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\">\r\n        <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n        <mat-error *ngIf=\"resetForm.get('password').hasError('required')\">\r\n          Password is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!resetForm.get('password').hasError('required') &&\r\n                    resetForm.get('password').hasError('passErr')\">\r\n            Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <button *ngIf=\"isOtp\" [disabled]=\"resetForm.invalid\" mat-raised-button color=\"primary\" class=\"submit-button mt-5\" (click)=\"resetUser(resetForm.value)\">\r\n      Reset\r\n    </button>\r\n\r\n</form>\r\n\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ForgotPasswordService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  forgetPassword(data): Observable<any> {\r\n    return this.restService.create(RestUrl.forgetPassword, data)\r\n  }\r\n\r\n  resetUser(data): Observable<any> {\r\n    return this.restService.create(RestUrl.resetUser, data);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant'\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { loginService } from './login.service'\r\nimport {CommonService} from '../shared/service/commonService/common.service'\r\nimport { Router } from '@angular/router';\r\nimport { SocialAuthService } from \"angularx-social-login\";\r\nimport { FirebaseService } from '../shared/service/firebase/firebase.service';\r\n// import { FacebookLoginProvider, GoogleLoginProvider } from \"angularx-social-login\";\r\n// import { SocialUser } from \"angularx-social-login\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  validateForm: FormGroup;\r\n  otpForm: FormGroup;\r\n  isVisible:boolean = false;\r\n  isForgotPassVisible: boolean = false;\r\n  // user: SocialUser;\r\n  // loggedIn: boolean;\r\n\r\n  constructor( private router: Router, private _commonService: CommonService, private _formBuilder: FormBuilder, public dialogRef: MatDialogRef<LoginComponent>, private _loginService : loginService, public firebaseService: FirebaseService\r\n   ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.validateForm = this._formBuilder.group({\r\n      contactNo   : ['', [Validators.required, this.mobileNumber]],\r\n      password: ['', [Validators.required, this.passwordPattern]],\r\n      userType: [null, Validators.required]\r\n\r\n    });\r\n\r\n    this.otpForm = this._formBuilder.group({\r\n      otp : ['', Validators.required]\r\n     });\r\n\r\n    //  this.authService.authState.subscribe((user) => {\r\n    //   this.user = user;\r\n    //   this.loggedIn = (user != null);\r\n    // });\r\n\r\n    // console.log(\"this.loggedIn \", this.loggedIn);\r\n\r\n  }\r\n\r\n  submitForm(value: any) {\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n      // this._route.navigate(['/profile']);\r\n\r\n      this._loginService.login(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n\r\n        let resonseMessage = responseData.message;\r\n        let responseBody = responseData.data;\r\n\r\n        if(responseData.status == 200) {\r\n\r\n          // call firebase service on login\r\n          let firebaseLoginReq = {\r\n            email: responseBody.userData.email,\r\n            password: responseBody.userData.contactNo,\r\n            name: responseBody.userData.name\r\n          }\r\n          this.firebaseService.loginFirebase(firebaseLoginReq).then(firebaseResponse => {\r\n            if(responseBody.userData.firebaseUserId !== firebaseResponse.id){\r\n              let requestObj = {\r\n                userId: responseBody.userData.userId,\r\n                firebaseUserId: firebaseResponse.id\r\n              }\r\n              this._loginService.loginFirebase(requestObj).subscribe(response => {\r\n                if(response.data && response.data.firebaseUserId){\r\n                  console.log('firebase login successfully');\r\n                }\r\n              })\r\n            }\r\n          });\r\n          // call firebase servicet on login end\r\n\r\n          // this.isVisible = true;\r\n          this._commonService.tostMessage(resonseMessage)\r\n\r\n          if(!responseBody.profileUpdated && typeof responseBody.profileUpdated != 'undefined') {\r\n              console.log(responseBody, 'response body');\r\n            // this.firebaseService.loginFirebase()\r\n            this.dialogRef.close(responseData.data);\r\n          } else {\r\n            this.dialogRef.close(responseData.data);\r\n\r\n          }\r\n\r\n        } else {\r\n          this._commonService.tostMessage(resonseMessage);\r\n        }\r\n\r\n        })\r\n  }\r\n\r\n  // signInWithGoogle(): void {\r\n  //   this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\r\n  // }\r\n\r\n  // signOut(): void {\r\n  //   this.authService.signOut();\r\n  // }\r\n\r\n  otpSubmitForm(value: any) {\r\n    this.dialogRef.close(value);\r\n  }\r\n\r\n  forgotPassword() {\r\n    this.isVisible = true;\r\n  }\r\n\r\n  resetLogin(event) {\r\n\r\n    if(event){\r\n      this.isVisible = false;\r\n    } else {\r\n      this.isVisible = true;\r\n    }\r\n  }\r\n// signUpSubmitForm(value: any){\r\n//   alert(\"Registered Successfuly\")\r\n//   console.log(\"value User ++++++++ \",value)\r\n//   if(value) {\r\n//     this.message = \"User registered and verified Successfully\"\r\n//   } else {\r\n//     this.message = \"User not verified, please try to register again\"\r\n//   }\r\n//   // this.dialogRef.close(value);\r\n// }\r\n\r\nmobileNumber= (control: FormControl): {[s: string]: boolean} => {\r\n\r\n  console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n  if(!control.value) {\r\n    return { required: true };\r\n  } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n    return {};\r\n  } else {\r\n\r\n    return { mobileErr: true, error: true };\r\n  }\r\n}\r\n\r\npasswordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n  console.log(\"passwordPattern ----->\",control.value)\r\n\r\n  if(!control.value) {\r\n    return { required: true };\r\n  }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n    return {};\r\n  }else{\r\n    return { passErr: true, error: true };\r\n  }\r\n}\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\">\r\n  <mat-tab label=\"Login\">\r\n    <div class=\"form-wrapper\">\r\n    <form *ngIf=\"!isVisible\" name=\"validateForm\" [formGroup]=\"validateForm\" novalidate (ngSubmit)=\"submitForm(validateForm.value)\">\r\n\r\n      <mat-form-field class=\"form-field-width\">\r\n        <mat-label>Mobile Number</mat-label>\r\n        <input matInput formControlName=\"contactNo\" minlength=\"10\" maxlength=\"10\">\r\n        <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n        <mat-error *ngIf=\"validateForm.get('contactNo').hasError('required')\">\r\n            Mobile number is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!validateForm.get('contactNo').hasError('required') &&\r\n                    validateForm.get('contactNo').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Select Type</mat-label>\r\n      <mat-select name=\"userType\" formControlName=\"userType\">\r\n        <mat-option value=1>User</mat-option>\r\n        <mat-option value=2>Astrolloger</mat-option>\r\n      </mat-select>\r\n        <mat-error>\r\n          Login type is required!\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>Password</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\">\r\n        <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n        <mat-error *ngIf=\"validateForm.get('password').hasError('required')\">\r\n          Password is required!\r\n        </mat-error>\r\n        <mat-error\r\n            *ngIf=\"!validateForm.get('password').hasError('required') &&\r\n                    validateForm.get('password').hasError('passErr')\">\r\n            Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n        </mat-error>\r\n    </mat-form-field>\r\n\r\n\r\n\r\n    <div class=\"remember-forgot-password\" class=\"d-flex mt-5  justify-content-end\">\r\n        <a href=\"javascript:;\" class=\"forgot-password\" (click)=\"forgotPassword()\">\r\n            Forgot Password?\r\n        </a>\r\n    </div>\r\n\r\n    <button mat-raised-button color=\"primary\" class=\"submit-button mt-3 mr-3\" aria-label=\"LOGIN\"\r\n            [disabled]=\"validateForm.invalid\">\r\n        LOGIN\r\n    </button>\r\n    <button mat-stroked-button color=\"warn\" class=\"submit-button mt-3\" aria-label=\"Cancel\" [mat-dialog-close]=\"\">\r\n      Cancel\r\n    </button>\r\n    </form>\r\n\r\n    <!-- OTP Form -->\r\n   <div class=\"otp-wrapper\" *ngIf=\"isVisible\">\r\n    <app-forgot-password *ngIf=\"isVisible\" (outputResetData)=\"resetLogin($event)\"> </app-forgot-password>\r\n  </div>\r\n\r\n    <!-- <div class=\"separator login\">\r\n      <span class=\"text\">OR</span>\r\n    </div> -->\r\n\r\n    <!-- <div class=\"d-flex  justify-content-center\">\r\n\r\n      <button mat-stroked-button class=\"google\"><i><img src=\"../../assets/images/social/google.png\"></i>\r\n          <b>Log in with Google</b>\r\n      </button>\r\n\r\n    </div> -->\r\n  </div>\r\n   <!-- loginform ends -->\r\n\r\n\r\n  </mat-tab>\r\n  <mat-tab label=\"Sign Up\">\r\n    <app-sign-up></app-sign-up>\r\n  </mat-tab>\r\n</mat-tab-group>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class loginService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  login(data): Observable<any> {\r\n    return this.restService.create(RestUrl.login, data)\r\n  }\r\n\r\n  loginFirebase(data): Observable<any> {\r\n    return this.restService.create(RestUrl.loginFirebase, data)\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MaterialFileInputModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ObservableDataService {\r\n\r\n  private messageSource = new BehaviorSubject<any>(null);\r\n  private checkOperationSource = new BehaviorSubject<any>(null);\r\n  private astroDetail = new BehaviorSubject<any>(null);\r\n\r\n  public getMessage = new BehaviorSubject<any>(null);\r\n\r\n\r\n  checkUserData = this.messageSource.asObservable();\r\n  checkUserOperationFlag = this.checkOperationSource.asObservable();\r\n  observedAstroDetail = this.astroDetail.asObservable();\r\n\r\n\r\n\r\n  constructor() { }\r\n\r\n  checkUser(message: any) {\r\n    this.messageSource.next(message)\r\n  }\r\n\r\n  checkUserOperation(message: any) {\r\n    this.checkOperationSource.next(message)\r\n  }\r\n\r\n  passAstroDetails(message: any) {\r\n    this.astroDetail.next(message)\r\n  }\r\n\r\n  messageData(message : any){\r\n    this.getMessage.next(message);\r\n  }\r\n\r\n}\r\n","export class RegexConstant {\r\n    public static get PASSWORD_REGEX() : any { return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/; };\r\n    public static get ONLY_NUMBER() : any {return /^[0-9]{10}$/};\r\n    public static get ONLY_DIGITS() : any {return /^[0-9]*$/};\r\n    public static get EMAIL_REGEX() : any { return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/}\r\n    public static get TWINTYFOUR_HOURS_REGEX() : any { return /^([0-1]{1}[0-9]|2[0-3]):[0-5][0-9]$/}\r\n\r\n\r\n  }\r\n","export class RestUrl {\r\n    public static get login(): string { return `/users/login`; }\r\n    public static get signUp(): string { return `/users/register`; }\r\n    public static get verifyOTP(): string { return `/users/verifyotp`; }\r\n    public static get forgetPassword(): string { return `/users/forgetPwd`; }\r\n    public static get resetUser(): string { return '/users/resetPwd'; }\r\n    public static get astroCreateProfile(): string { return '/users/updateprofile'; }\r\n    public static get getAstroListingApi(): string { return '/users/getastrologerslist'; }\r\n    // public static get getAstroListingApi(): string { return '/users/listOfAstrologers'; }\r\n    public static get loginFirebase(): string { return '/users/firebaseId'; }\r\n\r\n    public static get getAstro(): string { return '/users/listOfAstrologers'; }\r\n    public static get makeCall(): string { return '/users/call'; }\r\n\r\n    public static get submitReport(): string { return '/users/sendreport'; }\r\n    public static get submitQAReport(): string { return '/users/askquestion'; }\r\n\r\n    //Admin Dashboard\r\n\r\n    public static get getReportByAstroId(): string { return '/users/getreports'; }\r\n    public static get getQuestionByAstroId(): string { return '/users/getquestions'; }\r\n    public static get replyReports(): string { return '/users/respondReport'; }\r\n\r\n\r\n\r\n    // payment\r\n    public static get placeOrder(): string { return '/place/order'; }\r\n    public static get walletDetail(): string { return '/get/wallet'; }\r\n    public static get verifySignature(): string { return '/rayzorpay/verify/signature'; }\r\n    public static get updateWalletInfo(): string { return '/update/wallet'; }\r\n    public static get deductBalance(): string { return '/users/deductbalance'; }\r\n\r\n\r\n    //Filters\r\n    public static get getAstroByFilterSkill(): string { return '/users/filter'; }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RestService } from '../restApi/rest.service';\r\n// import { RestUrl } from '../../constant/rest-url.constants';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthenticationService {\r\n\r\n  constructor(private http: HttpClient, private restService: RestService) { }\r\n\r\n//   login(data) {\r\n//     return this.restService.create(RestUrl.login, data);\r\n//  }\r\n\r\n\r\n\r\n  getAuthenticatedToken() {\r\n    let token = JSON.parse(JSON.stringify(sessionStorage.getItem('token')));\r\n    console.log(\"get token console \",token);\r\n      return token\r\n  }\r\n\r\n  getUser() {\r\n    return  JSON.parse(sessionStorage.getItem('userData'));\r\n  }\r\n\r\n  // isUserLoggedIn() {\r\n  //   const user = sessionStorage.getItem('username');\r\n  //   return !(user === null);\r\n  // }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarHorizontalPosition,\r\n  MatSnackBarVerticalPosition,\r\n} from '@angular/material/snack-bar';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../restApi/rest.service';\r\nimport { RestUrl } from '../../constant/rest-url.constants';\r\nimport { ProfileUpdateService } from '../restApi/profileUpdate.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CommonService {\r\n\r\n  horizontalPosition: MatSnackBarHorizontalPosition;\r\n  verticalPosition: MatSnackBarVerticalPosition;\r\n\r\n  constructor(private _snackBar: MatSnackBar,private restService: RestService, private ipAddressService : ProfileUpdateService) {}\r\n\r\n  tostMessage(message) {\r\n    this._snackBar.open(message,'close', {\r\n      duration: 10 * 1000,\r\n      horizontalPosition : \"center\",\r\n      verticalPosition : \"top\"\r\n  })\r\n  }\r\n\r\n  // getOTP(data){\r\n  //   console.log(\"data in sign up\", data)\r\n  //   return this.restService.create(RestUrl.verifyOTP, data)\r\n  // }\r\n\r\n  verifyOTP(data): Observable<any> {\r\n    console.log(\"data in sign up\", data)\r\n    return this.restService.create(RestUrl.verifyOTP, data)\r\n  }\r\n\r\n  makeCall(data): Observable<any> {\r\n    return this.restService.create(RestUrl.makeCall, data)\r\n  }\r\n\r\n  // getIPAddress(): Observable<any> {\r\n  //   return this.ipAddressService.getIPAddress(\"http://api.ipify.org?format=json\");\r\n  // }\r\n  getIPAddress(): Observable<any> {\r\n    return this.restService.getIPAddress(\"https://extreme-ip-lookup.com/json/?callback\");\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport { reject } from '../../../../../node_modules/@types/q';\r\nimport { ObservableDataService } from '../../../observables/behaviourSubject.service';\r\nimport { loginService } from '../../../login/login.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirebaseService {\r\n  getFirebaseUserData: any;\r\n  allUserList = [];\r\n\r\n  constructor(public observableService : ObservableDataService, private _loginService : loginService) {\r\n    console.log(firebase, 'firebase');\r\n    \r\n    if(sessionStorage.getItem('userFirebaseData')){\r\n      this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n    }\r\n\r\n    this.getAllUserList();\r\n\r\n    this.messageListener();\r\n  }\r\n\r\n  loginFirebase(data): Promise<any>{\r\n    let promise = new Promise((resolve, reject) => {\r\n      firebase.auth().signInWithEmailAndPassword(data.email, data.password).then(response => {\r\n        console.log(response, 'response');\r\n        if(response.user.uid){\r\n          firebase.database().ref().child('Users').child(response.user.uid).once('value', (snapShot) => {\r\n            console.log(snapShot.val(), 'user data');\r\n            // return snapShot.val();\r\n\r\n            sessionStorage.setItem('userFirebaseData', JSON.stringify(snapShot.val()));\r\n            resolve(snapShot.val());\r\n          })\r\n        }\r\n      }, error=> {\r\n        this.signInFirebase(data);\r\n      })\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  signInFirebase(data) : Promise<any>{\r\n    let promise = new Promise((resolve , reject) => {\r\n      firebase.auth().createUserWithEmailAndPassword(data.email, data.password).then(response => {\r\n        let userData = {\r\n          id: response.user.uid,\r\n          imageURL: '',\r\n          status: '',\r\n          username: data.name,\r\n          email: data.email,\r\n          contactNo: data.password\r\n        }\r\n  \r\n        console.log(response.user.uid, 'local id');\r\n        firebase.database().ref().child('Users').child(response.user.uid).set(userData).then(response => {\r\n          console.log(response);\r\n          sessionStorage.setItem('userFirebaseData', JSON.stringify(userData));\r\n          resolve(userData);\r\n\r\n          // if session storage userId\r\n            if(sessionStorage.getItem('userFirebaseData')){\r\n              let firebaseData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n              let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n              if(firebaseData && userData) {\r\n                let requestObj = {\r\n                  userId: userData.userId,\r\n                  firebaseUserId: firebaseData.id\r\n                }\r\n    \r\n                this._loginService.loginFirebase(requestObj).subscribe(response => {\r\n                  if(response.data && response.data.firebaseUserId){\r\n                    console.log('firebase login successfully');\r\n                  }\r\n                })\r\n              }\r\n            }\r\n            // if session storage userId end\r\n        });\r\n      })\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  sendMessages(message): Promise<any>{\r\n    if(sessionStorage.getItem('userFirebaseData')){\r\n      this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n    }    \r\n    let promise = new Promise((resolve, reject) => {\r\n      let sender = this.getFirebaseUserData.id;\r\n      let receiver = sessionStorage.getItem('receiverId');\r\n      let convId ;\r\n      if(sender >  receiver) {\r\n        convId = receiver + '-' + sender;\r\n      }else {\r\n        convId = sender + '-' + receiver;\r\n      }\r\n      let reqObj = {\r\n        sender: this.getFirebaseUserData.id,\r\n        receiver: sessionStorage.getItem('receiverId'),\r\n        isseen: false,\r\n        message: message,\r\n        // timeStamp: new Date().valueOf()\r\n      }\r\n      let key = firebase.database().ref().child('Chats').push().key;\r\n      if(convId && sender && receiver) {\r\n        firebase.database().ref().child('Chats').child(convId).child(key).set(reqObj).then(sendVal => {\r\n          console.log(sendVal, 'send value');\r\n          resolve(reqObj); \r\n        });\r\n      } \r\n    });\r\n    return promise;\r\n  }\r\n\r\n  getAllMessages(): Promise<any>{\r\n    if(sessionStorage.getItem('userFirebaseData')){\r\n      this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n    }    \r\n    let promise = new Promise((resolve, reject) => {\r\n      let sender = this.getFirebaseUserData.id;\r\n      let receiver = sessionStorage.getItem('receiverId');\r\n      let convId ;\r\n      if(sender >  receiver) {\r\n        convId = receiver + '-' + sender;\r\n      }else {\r\n        convId = sender + '-' + receiver;\r\n      }\r\n      firebase.database().ref('Chats').child(convId).once('value', (snapShot) => {\r\n        console.log(snapShot.val(), 'value');\r\n        let chatList = [];\r\n        if(snapShot.val()){\r\n          Object.values(snapShot.val()).forEach(list => {\r\n            if(list){\r\n              chatList.push(list);\r\n            }\r\n          });\r\n          // return chatList;\r\n          resolve(chatList);\r\n        }       \r\n      })\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  messageListener(){\r\n    if(sessionStorage.getItem('userFirebaseData')){\r\n      this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n    } \r\n    firebase.database().ref().child('Chats').limitToLast(10).on('child_added', snapShot => {\r\n      let sender = this.getFirebaseUserData ? this.getFirebaseUserData.id: null;\r\n      let receiver = sessionStorage.getItem('receiverId');\r\n      let convId ;\r\n      if(sender >  receiver) {\r\n        convId = receiver + '-' + sender;\r\n      }else {\r\n        convId = sender + '-' + receiver;\r\n      }\r\n      if(snapShot.key == convId){\r\n        let value = Object.values(snapShot.val())[Object.values(snapShot.val()).length - 1];\r\n        this.observableService.messageData(value);\r\n        return value\r\n      }\r\n    })\r\n\r\n    firebase.database().ref().child('Chats').on('child_changed', snapShot => {\r\n      if(snapShot.key){\r\n\r\n        let sender = this.getFirebaseUserData ? this.getFirebaseUserData.id: null;\r\n        let receiver = sessionStorage.getItem('receiverId');\r\n        let convId ;\r\n        if(sender >  receiver) {\r\n          convId = receiver + '-' + sender;\r\n        }else {\r\n          convId = sender + '-' + receiver;\r\n        }\r\n\r\n        if(snapShot.key ==  convId){\r\n          let value = Object.values(snapShot.val())[Object.values(snapShot.val()).length - 1];\r\n          this.observableService.messageData(value);\r\n          return value;\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  // get chat list\r\n  getChatList(){\r\n    let promise = new Promise((resolve, reject) => {\r\n      if(sessionStorage.getItem('userFirebaseData')){\r\n        this.getFirebaseUserData = JSON.parse(sessionStorage.getItem('userFirebaseData'));\r\n      } \r\n  \r\n      let chatList = [];\r\n  \r\n      firebase.database().ref('Chats').once('value', snapShot => {\r\n        let allConversationList = snapShot.val();\r\n        if(allConversationList){\r\n          for (let key in allConversationList){\r\n            if(key.includes(this.getFirebaseUserData.id)){\r\n\r\n              let userData: any;\r\n              let lastConversationDetail =  Object.values(allConversationList[key])[Object.values(allConversationList[key]).length - 1];\r\n\r\n              // get user data on login basis \r\n              if(this.getFirebaseUserData && this.getFirebaseUserData.id == lastConversationDetail['sender']){\r\n                userData =  this.allUserList.find(list => list.id == lastConversationDetail['receiver']);\r\n              }else {\r\n                userData =  this.allUserList.find(list => list.id == lastConversationDetail['sender']);\r\n              }\r\n              // get user data end\r\n\r\n              let createChatListObj = {};\r\n              createChatListObj['lastMessage'] = lastConversationDetail['message'];\r\n              createChatListObj['name'] = userData ? userData.username : null;\r\n              createChatListObj['id'] = userData ? userData.id : null;\r\n              createChatListObj['imageURL'] = userData ? userData.imageURL : null;\r\n              createChatListObj['shortName'] = userData ? this.getShortName(userData.username): null;\r\n              createChatListObj['color'] = Math.floor(Math.random()*16777215).toString(16);\r\n              chatList.push(createChatListObj);\r\n            }\r\n          }\r\n\r\n          resolve(chatList);\r\n        }\r\n      })\r\n    });\r\n    return promise;\r\n   \r\n  }\r\n  // get chat list end\r\n\r\n\r\n  getAllUserList(){\r\n    console.log(firebase, 'firebase');\r\n    \r\n    firebase.database().ref('Users').once('value', snapShot => {\r\n      let userList = snapShot.val();\r\n      if(userList) {\r\n        Object.values(snapShot.val()).forEach(list => this.allUserList.push(list));\r\n      }\r\n    })\r\n  }\r\n\r\n  // short name\r\n  getShortName(name){\r\n    if(name){\r\n      let namelist = name.split(' ');\r\n      if(namelist && namelist.length > 1){\r\n        return namelist[0].charAt(0) + namelist[1].charAt(0);\r\n      }else {\r\n        return namelist[0].charAt(0);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {\r\n    HttpInterceptor,\r\n    HttpHandler,\r\n    HttpRequest,\r\n    HttpResponse,\r\n    HttpEvent,\r\n    HttpErrorResponse\r\n  } from \"@angular/common/http\";\r\n  import { Injectable } from \"@angular/core\";\r\n  import { AuthenticationService } from \"../authentication/authentication.service\";\r\n  import { tap, retry, catchError } from 'rxjs/operators';\r\n  import { Observable, throwError } from 'rxjs';\r\n  import { CommonService } from '../commonService/common.service';\r\n\r\n\r\n  @Injectable({\r\n    providedIn: \"root\"\r\n  })\r\n  export class HttpIntercepterBasicAuthService implements HttpInterceptor {\r\n\r\n    constructor(private _commonService: CommonService, private basicAuthenticationService: AuthenticationService) {\r\n\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler) : Observable<HttpEvent<any>>  {\r\n\r\n      let basicAuthHeaderString = this.basicAuthenticationService.getAuthenticatedToken();\r\n      console.log(\"basicAuthHeaderString +++++++++++++ \",basicAuthHeaderString)\r\n\r\n      if (basicAuthHeaderString) {\r\n        console.log(\"if condition\");\r\n        request = request.clone({\r\n          setHeaders: {\r\n            'Authorization': basicAuthHeaderString,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n      } else {\r\n        console.log(\"else condition\");\r\n        request = request.clone({\r\n          setHeaders: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n      }\r\n\r\n      return next.handle(request).pipe(\r\n        tap(\r\n          event => this.handleResponse(request, event),\r\n          error => this.handleError(request, error)\r\n        )\r\n      );\r\n    }\r\n\r\n    handleResponse(req: HttpRequest<any>, event) {\r\n      if (event instanceof HttpResponse) {\r\n           if (event.headers.get('Authorization')) {\r\n                sessionStorage.setItem('token', event.headers.get('Authorization'));\r\n           }\r\n      }\r\n    }\r\n\r\n    handleError(req: HttpRequest<any>, error) {\r\n      let errorMessage = '';\r\n\r\n      if (error.error instanceof ErrorEvent) {\r\n\r\n        // client-side error\r\n\r\n        errorMessage = `Error: ${error.error.message}`;\r\n\r\n      } else {\r\n\r\n        // server-side error\r\n        // this._commonService.tostMessage(errorMessage)\r\n        errorMessage = `Error Code: ${error.error.status}\\nMessage: ${error.error.message}`;\r\n\r\n      }\r\n\r\n      this._commonService.tostMessage(errorMessage)\r\n\r\n\r\n      return throwError(errorMessage);\r\n\r\n      //   if (event instanceof HttpErrorResponse) {\r\n      //       if(event.headers.get('Authorization')){\r\n      //       //  console.log('handleError',event.headers.get('Authorization'));\r\n      //           sessionStorage.setItem('token', event.headers.get('Authorization'));\r\n      //       }\r\n      // }\r\n    }\r\n  }\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable, pipe } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { LoaderService } from '../loader/loader.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderInterceptorService {\r\n\r\n     constructor(private loaderService: LoaderService) { }\r\n\r\n      intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        //  console.log('HttpRequestHttpRequest');\r\n\r\n        this.showLoader();\r\n\r\n        return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\r\n          if (event instanceof HttpResponse) {\r\n            this.onEnd();\r\n          }\r\n        },\r\n          (err: any) => {\r\n            this.onEnd();\r\n        }));\r\n      }\r\n\r\n      private onEnd(): void {\r\n        this.hideLoader();\r\n      }\r\n\r\n      private showLoader(): void {\r\n        this.loaderService.show();\r\n      }\r\n\r\n      private hideLoader(): void {\r\n        this.loaderService.hide();\r\n      }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoaderService {\r\n  private loaderSubject: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n\r\n  get loaderState(){\r\n    return this.loaderSubject.asObservable();\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  show() {\r\n\r\n    this.loaderSubject.next( true );\r\n    // console.log(\"this.loaderSubject show \",this.loaderSubject.subscribe(res=>{\r\n    //   console.log(\"ressssss\",res);\r\n    // }))\r\n  }\r\n\r\n  hide() {\r\n\r\n    this.loaderSubject.next( false );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestService } from '../restApi/rest.service';\r\nimport { RestUrl } from '../../constant/rest-url.constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentService {\r\n\r\n  constructor(private restService: RestService) { }\r\n\r\n  orderPlace(data){\r\n    return this.restService.createPayment(RestUrl.placeOrder, data);\r\n  }\r\n\r\n  walletInfo(data){\r\n    return this.restService.getPayment(RestUrl.walletDetail, data);\r\n  }\r\n\r\n  signatureVerify(data) {\r\n    return this.restService.getPayment(RestUrl.verifySignature, data);\r\n  }\r\n\r\n  updateWalletInfo(data) {\r\n    return this.restService.patch(RestUrl.updateWalletInfo, data);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\n// import { callBackendApi } from '../../constant/rest-url.constants';\r\nimport { HttpHeaders, HttpBackend } from \"@angular/common/http\";\r\nimport { AuthenticationService } from '../authentication/authentication.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ProfileUpdateService {\r\n  getAuthenticatedToken;\r\n  constructor(private http: HttpClient, handler: HttpBackend, private _authenticationService : AuthenticationService) {\r\n     this.http = new HttpClient(handler);\r\n     this.getAuthenticatedToken = this._authenticationService.getAuthenticatedToken()\r\n  }\r\n\r\n  public createProfile = (route: string, body) => {\r\n    console.log(\"route\",route,\" createProfile body\",body);\r\n    let setHeaders = new HttpHeaders({\r\n      'Authorization':  this.getAuthenticatedToken,\r\n    })\r\n    return this.http.post(environment.urlAddress + route, body, {headers : setHeaders});\r\n  };\r\n\r\n  public createFormData = (route: string, body) => {\r\n    console.log(\"route\",route,\" createProfile body\",body);\r\n    let setHeaders = new HttpHeaders({\r\n      'Authorization':  this.getAuthenticatedToken,\r\n    })\r\n    return this.http.post(environment.urlAddress + route, body, {headers : setHeaders})\r\n  //   .pipe(\r\n  //     catchError(this.handleError)\r\n  // );\r\n  };\r\n\r\n  public getIPAddress = (route: string) => {\r\n    console.log(\"**GET getIPAddress **\", \"route\",route);\r\n    let setHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n    // return this.http.get(route,{headers : setHeaders});\r\n    return this.http.get(route,{headers : setHeaders, responseType : 'json'});\r\n\r\n  };\r\n\r\n  handleError(error) {\r\n    let errorMessage = '';\r\n    if (error.error instanceof ErrorEvent) {\r\n        // client-side error\r\n        errorMessage = `Error: ${error.error.message}`;\r\n        alert(\"Client Side Error \"+ errorMessage);\r\n    } else {\r\n        // server-side error\r\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n        alert(\"Server Side Error \"+ errorMessage);\r\n\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n}\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\n// import { callBackendApi } from '../../constant/rest-url.constants';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RestService {\r\n\r\n  private messageSource = new BehaviorSubject(null);\r\n  checkUserData = this.messageSource.asObservable();\r\n\r\n\r\n\r\n  constructor(private http: HttpClient ) { }\r\n\r\n  checkUser(message: string) {\r\n    this.messageSource.next(message)\r\n  }\r\n\r\n\r\n  public create = (route: string, body) => {\r\n    console.log(\"route\",route,\"body\",body);\r\n    return this.http.post(environment.urlAddress + route, body);\r\n  };\r\n\r\n  public get = (route: string) => {\r\n    console.log(\"**GET**\", \"route\",route);\r\n    return this.http.get(environment.urlAddress + route);\r\n  };\r\n\r\n  public getIPAddress = (route: string) => {\r\n    console.log(\"**GET getIPAddress **\", \"route\",route);\r\n    return this.http.get(route);\r\n  };\r\n\r\n  public createPayment = (route: string, body) => {\r\n    console.log(\"route\",route,\"body\",body);\r\n    return this.http.post(environment.paymentUrlAddress + route, body);\r\n  };\r\n\r\n  public getPayment = (route: string, headerParam: any) =>{\r\n    return this.http.get(environment.paymentUrlAddress+ route, {params : headerParam})\r\n  }\r\n  public patch = (route: string, headerParam: any) =>{\r\n    console.log(environment.paymentUrlAddress+ route, 'url');\r\n    return this.http.patch(environment.paymentUrlAddress+ route, {}, {params : headerParam})\r\n  }\r\n\r\n\r\n\r\n  // public delete = (route: string) => {\r\n  //   return this.http.delete(\r\n  //     this.createCompleteRoute(route, environment.urlAddress)\r\n  //   );\r\n  // };\r\n\r\n  // private createCompleteRoute = (route: string, envAddress: string) => {\r\n  //   if (callBackendApi) {\r\n  //     return `${envAddress + route}`;\r\n  //   } else {\r\n  //     return `${route}`;\r\n  //   }\r\n  // };\r\n}\r\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { RegexConstant } from '../shared/constant/regex-constant';\r\nimport { signUpService } from './sign-up.service';\r\nimport {CommonService} from '../shared/service/commonService/common.service'\r\nimport { FirebaseService } from '../shared/service/firebase/firebase.service';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  signUpValidateForm: FormGroup;\r\n  otpForm: FormGroup;\r\n  isVisible:boolean = false;\r\n  loginResponseData;\r\n  message;\r\n\r\n  @Output()\r\n  outputSignUpData: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  constructor(private _formBuilder: FormBuilder, private _signUpService : signUpService, private _commonService : CommonService, public firebaseService: FirebaseService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.signUpValidateForm = this._formBuilder.group({\r\n      name           : ['', [Validators.required]],\r\n      email          : ['', [Validators.required, Validators.email]],\r\n      countryCode    : ['', [Validators.required]],\r\n      contactNo      : ['', [Validators.required, this.mobileNumber]],\r\n      password       : ['', [Validators.required, this.passwordPattern]],\r\n      userType          : ['', [Validators.required]]\r\n    });\r\n\r\n    this.otpForm = this._formBuilder.group({\r\n      otp : ['',[Validators.required]]\r\n    });\r\n\r\n  }\r\n\r\n\r\n  submitForm(value: any){\r\n    for (const key in this.signUpValidateForm.controls) {\r\n        this.signUpValidateForm.controls[key].markAsDirty();\r\n        this.signUpValidateForm.controls[key].updateValueAndValidity();\r\n      }\r\n\r\n      console.log(\"submit Form \",value);\r\n\r\n      this._signUpService.signUp(value).subscribe((responseData) => {\r\n        console.log(\"responseData login \",responseData);\r\n        // responseData.status = 200;\r\n        let resonseMessage = responseData.message;\r\n\r\n        if(responseData.status == 200) {\r\n          this.isVisible = true;\r\n\r\n          // fire base register\r\n          let firebaseLoginReq = {\r\n            email: this.signUpValidateForm.value.email,\r\n            password: this.signUpValidateForm.value.contactNo,\r\n            name: this.signUpValidateForm.value.name\r\n          }\r\n          this.firebaseService.signInFirebase(firebaseLoginReq);\r\n          // fire base register end\r\n        } else {\r\n          this._commonService.tostMessage(resonseMessage)\r\n        }\r\n\r\n        })\r\n  }\r\n\r\n  otpSubmitForm(value: any) {\r\n    console.log(\"submit Form \",value);\r\n\r\n    let requestData = {\r\n      contactNo : this.signUpValidateForm.value.contactNo,\r\n      otp : value.otp,\r\n      userType : this.signUpValidateForm.value.userType\r\n    }\r\n\r\n    this._commonService.verifyOTP(requestData).subscribe((responseData) => {\r\n      console.log(\"responseData login \",responseData);\r\n      responseData.status = 200;\r\n\r\n      let resonseMessage = responseData.message;\r\n\r\n      if(responseData.status == 200) {\r\n        this._commonService.tostMessage(resonseMessage)\r\n        this.isVisible = false;\r\n        this.message = \"User registered and verified Successfully, Please Login!\"\r\n        this.signUpValidateForm.reset();\r\n        // this.outputSignUpData.emit(true);\r\n      } else {\r\n        this._commonService.tostMessage(resonseMessage)\r\n        this.message = \"OTP invalid, please resend your OTP!\"\r\n        this.signUpValidateForm.reset();\r\n        // this.outputSignUpData.emit(false);\r\n      }\r\n\r\n    });\r\n\r\n\r\n    // this.dialogRef.close(value);\r\n  }\r\n\r\n  passwordPattern = (control: FormControl): {[s: string]: boolean} => {\r\n    console.log(\"passwordPattern ----->\",control.value)\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    }else if (control.value.match(RegexConstant.PASSWORD_REGEX)){\r\n      return {};\r\n    }else{\r\n      return { passErr: true, error: true };\r\n    }\r\n  }\r\n\r\n  mobileNumber = (control: FormControl): {[s: string]: boolean} => {\r\n\r\n    console.log(\"control.value ----->\",control.value)\r\n\r\n\r\n    if(!control.value) {\r\n      return { required: true };\r\n    } else if (control.value.match(RegexConstant.ONLY_NUMBER)){\r\n      return {};\r\n    } else {\r\n\r\n      return { mobileErr: true, error: true };\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\"form-wrapper\">\r\n<h2 >{{message}}</h2>\r\n\r\n<form name=\"validateForm\" *ngIf=\"!isVisible\" [formGroup]=\"signUpValidateForm\" novalidate (ngSubmit)=\"submitForm(signUpValidateForm.value)\">\r\n\r\n  <mat-form-field class=\"form-field-width\">\r\n      <mat-label>Full Name</mat-label>\r\n      <input matInput formControlName=\"name\">\r\n      <mat-icon matSuffix class=\"secondary-text\">account_circle</mat-icon>\r\n      <mat-error>\r\n          Name is required\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width mt-2\">\r\n    <mat-label>Select Type</mat-label>\r\n    <mat-select name=\"userType\" formControlName=\"userType\">\r\n      <mat-option value=1 >User</mat-option>\r\n      <mat-option value=2 >Astrolloger</mat-option>\r\n    </mat-select>\r\n    <mat-error *ngIf=\"signUpValidateForm.get('userType').hasError('required')\">\r\n      Login type is required!\r\n  </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n    <mat-label>Select Country Code</mat-label>\r\n    <mat-select name=\"countryCode\" formControlName=\"countryCode\">\r\n      <mat-option value=\"+1\" >+1 (USA)</mat-option>\r\n      <mat-option value=\"+886\" >+886 (Taiwan)</mat-option>\r\n      <mat-option value=\"+91\" >+91 (India)</mat-option>\r\n    </mat-select>\r\n    <mat-error *ngIf=\"signUpValidateForm.get('countryCode').hasError('required')\">\r\n      Country Code is required!\r\n    </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n      <mat-label>Mobile Number</mat-label>\r\n      <input matInput formControlName=\"contactNo\">\r\n      <mat-icon matSuffix class=\"secondary-text\">phone</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('contactNo').hasError('required')\">\r\n          Mobile number is required!\r\n      </mat-error>\r\n      <mat-error\r\n          *ngIf=\"!signUpValidateForm.get('contactNo').hasError('required') &&\r\n                  signUpValidateForm.get('contactNo').hasError('mobileErr')\">\r\n          Please enter a valid mobile number!\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width  mt-2\">\r\n      <mat-label>Email</mat-label>\r\n      <input matInput formControlName=\"email\">\r\n      <mat-icon matSuffix class=\"secondary-text\">mail</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('email').hasError('required')\">\r\n          Email is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('email').hasError('email')\">\r\n          Please enter a valid email address\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n  <mat-form-field class=\"form-field-width mt-2\">\r\n      <mat-label>Password</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"password\">\r\n      <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('password').hasError('required')\">\r\n        Password is required!\r\n      </mat-error>\r\n      <mat-error\r\n            *ngIf=\"!signUpValidateForm.get('password').hasError('required') &&\r\n                    signUpValidateForm.get('password').hasError('passErr')\">\r\n            *Please enter a valid password! <br>\r\n            *minimum length should be 8 digit <br>\r\n            *must contain Numeric and Alpha characters\r\n      </mat-error>\r\n  </mat-form-field>\r\n\r\n\r\n\r\n  <!-- <mat-form-field class=\"form-field-width\">\r\n      <mat-label>Password (Confirm)</mat-label>\r\n      <input matInput type=\"password\" formControlName=\"passwordConfirm\">\r\n      <mat-icon matSuffix class=\"secondary-text\">vpn_key</mat-icon>\r\n      <mat-error *ngIf=\"signUpValidateForm.get('passwordConfirm').hasError('required')\">\r\n          Password confirmation is required\r\n      </mat-error>\r\n      <mat-error *ngIf=\"!signUpValidateForm.get('passwordConfirm').hasError('required') &&\r\n                         signUpValidateForm.get('passwordConfirm').hasError('passwordsNotMatching')\">\r\n          Passwords must match\r\n      </mat-error>\r\n  </mat-form-field> -->\r\n\r\n  <!-- <div class=\"terms\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n      <mat-checkbox name=\"terms\" aria-label=\"Accept\" required>\r\n          <span>Accept</span>\r\n      </mat-checkbox>\r\n      <a href=\"#\">terms and conditions</a>\r\n  </div> -->\r\n\r\n  <button mat-raised-button color=\"primary\" class=\"submit-button mt-5 mr-3\" aria-label=\"CREATE AN ACCOUNT\"\r\n          [disabled]=\"signUpValidateForm.invalid\">\r\n      Sign Up\r\n  </button>\r\n  <button mat-stroked-button color=\"warn\" class=\"submit-button mt-3\" aria-label=\"Cancel\" [mat-dialog-close]=\"\">\r\n    Cancel\r\n  </button>\r\n\r\n</form>\r\n\r\n <!-- OTP Form -->\r\n <div class=\"otp-wrapper\" *ngIf=\"isVisible\">\r\n  <form name=\"otpForm\" [formGroup]=\"otpForm\" novalidate (ngSubmit)=\"otpSubmitForm(otpForm.value)\">\r\n\r\n      <mat-form-field class=\"form-field-width mt-2\">\r\n        <mat-label>OTP</mat-label>\r\n        <input matInput formControlName=\"otp\">\r\n        <mat-icon matSuffix class=\"secondary-text\">code</mat-icon>\r\n        <mat-error *ngIf=\"otpForm.get('otp').hasError('required')\">\r\n            OTP is required!\r\n        </mat-error>\r\n        <!-- <mat-error\r\n            *ngIf=\"!otpForm.get('mobile').hasError('required') &&\r\n                    otpForm.get('mobile').hasError('mobileErr')\">\r\n            Please enter a valid mobile number!\r\n        </mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <button mat-raised-button color=\"primary\" class=\"submit-button mt-3\" aria-label=\"LOGIN\"\r\n        [disabled]=\"otpForm.invalid\">\r\n            Submit\r\n      </button>\r\n\r\n  </form>\r\n</div>\r\n\r\n\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../shared/constant/rest-url.constants';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class signUpService {\r\n\r\n  constructor(private restService: RestService) {}\r\n\r\n  signUp(data): Observable<any> {\r\n    console.log(\"data in sign up\", data)\r\n    return this.restService.create(RestUrl.signUp, data)\r\n  }\r\n\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Observable } from 'rxjs';\r\nimport { LoaderService } from '../shared/service/loader/loader.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n  isSpinning$: Observable<boolean>;\r\n  show : boolean;\r\n  constructor(private spinner: NgxSpinnerService,   private loaderService: LoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // console.log(\"oninit spinner \");\r\n\r\n    // this.show = true;\r\n    // this.spinner.show();\r\n\r\n    this.isSpinning$ = this.loaderService.loaderState;\r\n\r\n    this.isSpinning$.subscribe(res=> {\r\n      console.log(\"res of loader \",res);\r\n      if(res){\r\n        this.show = true;\r\n        this.spinner.show();\r\n      } else {\r\n        this.show = false;\r\n        this.spinner.hide();\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"center\" *ngIf=\"show\">\r\n  <ngx-spinner> </ngx-spinner>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PaymentService } from '../shared/service/payment/payment.service';\r\nimport { HttpParams } from '../../../node_modules/@angular/common/http';\r\nimport { FormGroup, FormControl, Validators } from '../../../node_modules/@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-wallet',\r\n  templateUrl: './wallet.component.html',\r\n  styleUrls: ['./wallet.component.scss']\r\n})\r\nexport class WalletComponent implements OnInit {\r\n\r\n  walletInfo: any;\r\n  viewWallet: boolean = false;\r\n  walletForm: FormGroup;\r\n  rechargeList = [];\r\n  selectedRechargeAmount: any;\r\n  constructor(public paymentService: PaymentService) {\r\n    this.walletForm = new FormGroup({\r\n      walletAmount: new FormControl('', [Validators.required])\r\n    });\r\n\r\n\r\n    // recharge list\r\n    this.rechargeList = [\r\n      {\r\n        symbol: '₹',\r\n        amount: 100,\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 200\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 300\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 500\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 1000\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 2000\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 3000\r\n      },\r\n      {\r\n        symbol: '₹',\r\n        amount: 5000\r\n      }\r\n    ];\r\n    // recharge list end\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getWalletInfo();\r\n  }\r\n\r\n  getWalletInfo(){\r\n    if(sessionStorage.getItem('userData')){\r\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n\r\n      let params = new HttpParams().set('userId', userData.userId);\r\n\r\n      this.paymentService.walletInfo(params).subscribe(response => {\r\n        if(response){\r\n          this.walletInfo = response;\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  addWallet(){\r\n    this.viewWallet = true;\r\n  }\r\n\r\n  rechargeWallet(formData){\r\n    if(formData.valid) {\r\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n      let reqObj = { \r\n        \"amount\": formData.value.walletAmount,\r\n        \"currency\": \"INR\",\r\n        \"userId\": userData.userId,\r\n        \"recieptId\": this.makeOrderid()\r\n     }\r\n\r\n     \r\n      this.paymentService.orderPlace(reqObj).subscribe(response => {\r\n        this.walletForm.patchValue({walletAmount: ''});\r\n        this.selectedRechargeAmount = null;\r\n        console.log(response, 'place order');\r\n        if(response) {\r\n          const options: any = {\r\n            key: 'rzp_test_ZeUhqzQZ4q0Gbg',\r\n            amount: response['amount'], // amount should be in paise format to display Rs 1255 without decimal point\r\n            currency: response['currency'],\r\n            name: '', // company name or product name\r\n            description: '',  // product description\r\n            image: '/assets/images/logo/PNG/font120px.png', // company logo or product image\r\n            order_id: response['id'], // order_id created by you in backend\r\n            modal: {\r\n              // We should prevent closing of the form when esc key is pressed.\r\n              escape: false,\r\n            },\r\n            notes: {\r\n              // include notes if any\r\n            },\r\n            theme: {\r\n              color: '#f9a825'\r\n            }\r\n          };\r\n          options.handler = ((response, error) => {\r\n            options.response = response;\r\n            console.log(response);\r\n            console.log(options);\r\n\r\n            // call your backend api to verify payment signature & capture transaction\r\n            if(response) {\r\n              this.verifySignature(response);\r\n\r\n            }\r\n\r\n          });\r\n          options.modal.ondismiss = (() => {\r\n            // handle the case when user closes the form while transaction is in progress\r\n            console.log('Transaction cancelled.');\r\n          });\r\n          const rzp = new window['Razorpay'](options);\r\n          rzp.open();\r\n        }\r\n      })\r\n    }  \r\n  }\r\n\r\n\r\n  verifySignature(orderDetail){\r\n    if(orderDetail) {\r\n      let params = new HttpParams().set('signature', orderDetail.razorpay_signature).set('orderId', orderDetail.razorpay_order_id).set(\"paymentId\", orderDetail.razorpay_payment_id);\r\n      this.paymentService.signatureVerify(params).subscribe(response => {\r\n        console.log(response, 'response signayture');\r\n        if(response){\r\n          this.updateWallet(orderDetail)\r\n        }\r\n      })\r\n    }  \r\n  }\r\n\r\n  updateWallet(orderInfo){\r\n    if(orderInfo){\r\n      // let params = new HttpParams().set('userId', 'balatwo').set(\"orderId\", orderInfo.razorpay_order_id);\r\n      let userData = JSON.parse(sessionStorage.getItem('userData'));\r\n      let params = {\r\n        userId: userData.userId,\r\n        orderId: orderInfo.razorpay_order_id\r\n      }\r\n      this.paymentService.updateWalletInfo(params).subscribe(response => {\r\n        console.log(response, 'wallet update');\r\n        \r\n      })\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  selectRechargeAmount(rechargeAmount){\r\n    if(rechargeAmount){\r\n      this.selectedRechargeAmount = rechargeAmount.amount;\r\n      this.walletForm.patchValue({\r\n        walletAmount: rechargeAmount.amount\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // make order id\r\n  makeOrderid() {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < 12; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n\r\n    if(result) {\r\n      result = \"recieptId_\"+result;\r\n    }\r\n    console.log(result, 'result');\r\n    return result;\r\n }\r\n  // make order id end\r\n  \r\n  \r\n\r\n}\r\n","<div class=\"wallet\">\r\n   <div class=\"container\">\r\n       <div class=\"row\">\r\n           <div class=\"col-10 offset-md-1\">\r\n              <mat-card class=\"wallet-header\">\r\n                <div class=\"clearfix\">\r\n                        <div class=\"float-left\">\r\n                            <div class=\"wallet-info\">\r\n                                <span class=\"money-symbol\">₹</span>\r\n                                <span class=\"amount\">{{(walletInfo?.amount) ? walletInfo?.amount: '0'}}</span>\r\n                                <span class=\"d-block mt-2\">SaiAstro Wallet Balance</span>\r\n                            </div>\r\n                            <!-- <span>\r\n                                {{walletInfo?.amount}}\r\n                            </span> -->\r\n                        </div>\r\n                        <div class=\"float-right\">\r\n                            <button mat-raised-button color=\"primary\" (click)=\"addWallet()\" class=\"mt-2\">Add Money to Wallet</button>\r\n                        </div>\r\n                    </div>\r\n              </mat-card>\r\n              <mat-card class=\"add-wallet-money\" *ngIf=\"viewWallet\">\r\n                <div class=\"wallet-img-holder\">\r\n                    <img src=\"/assets/images/social/wallet.png\" alt=\"\" class=\"img-fluid\">\r\n                </div>\r\n                <form [formGroup]=\"walletForm\" class=\"wallet-form\">\r\n                    <div class=\"recharge-list mb-5\">\r\n                        <span class=\"list\" *ngFor=\"let list of rechargeList; let i = index\" (click)=\"selectRechargeAmount(list)\" [ngClass]=\"(selectedRechargeAmount == list.amount) ? 'active': '' \">{{list.symbol}} {{list.amount}}</span>\r\n                    </div>\r\n                    <div class=\"field-wrapper\">\r\n                        <mat-form-field class=\"example-full-width w-100\">\r\n                              <input matInput placeholder=\"Enter Amount to be added in wallet\" formControlName=\"walletAmount\">\r\n                        </mat-form-field>\r\n                    </div>                 \r\n                    <div class=\"text-center\">\r\n                        <button mat-raised-button color=\"primary\" [disabled]=\"walletForm.invalid\" (click)=\"rechargeWallet(walletForm)\">Recharge</button>\r\n                    </div>\r\n                </form>\r\n              </mat-card>\r\n           </div>\r\n       </div>  \r\n   </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  urlAddress: 'https://apisaiastroworld.com',\r\n  paymentUrlAddress: 'https://apisaiastroworld.com/payment'\r\n  // urlAddress: 'http://ec2-3-21-75-140.us-east-2.compute.amazonaws.com:3000',\r\n  // paymentUrlAddress: 'http://ec2-3-21-75-140.us-east-2.compute.amazonaws.com:3001'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}