{"version":3,"sources":["webpack:///src/app/Dashboard/astro-question/astro-question.component.ts","webpack:///src/app/Dashboard/astro-question/astro-question.component.html","webpack:///src/app/Dashboard/astro-question/astro-question.service.ts","webpack:///src/app/Dashboard/astro-report/astro-report.component.ts","webpack:///src/app/Dashboard/astro-report/astro-report.component.html","webpack:///src/app/Dashboard/astro-report/astro-report.service.ts","webpack:///src/app/Dashboard/astro-report/edit-report/edit-report.component.ts","webpack:///src/app/Dashboard/astro-report/edit-report/edit-report.component.html","webpack:///src/app/Dashboard/astrologer-dashboard/astrologer-dashboard.component.ts","webpack:///src/app/Dashboard/astrologer-dashboard/astrologer-dashboard.component.html","webpack:///src/app/Dashboard/dashboard-module.module.ts","webpack:///src/app/Dashboard/dashboard-routing.module.ts"],"names":["AstroQuestionComponent","_authService","_formBuilder","_authenticationService","_commonService","_astroReportService","displayedColumns","mode","characters","validateForm","group","firstName","value","disabled","required","lastName","comment","email","mobileNumber","reportSubType","employment","message","dataSource","users","userData","getUser","getQuestionByAstrologer","paginator","sort","reqBody","_id","getQuestionByAstroId","subscribe","responseData","console","log","resonseMessage","responseBody","data","status","obj","map","everyData","push","astrologerId","createdAt","reportType","userId","ngAfterViewInit","tostMessage","logOut","alert","event","filterValue","target","filter","trim","toLowerCase","firstPage","reference","toggle","patchValue","selectedUser","key","controls","markAsDirty","updateValueAndValidity","formData","FormData","append","replyReports","reset","sidenav","close","e","preventDefault","markAsPristine","length","closeDrawer","count","submitForm","resetForm","applyFilter","selector","templateUrl","styleUrls","QuestionReportService","restService","_profileUpdateService","create","createFormData","providedIn","AstroReportComponent","getReportByAstrologer","getReportByAstroId","AstroReportService","EditReportComponent","AstrologerDashboardComponent","_route","navigate","astroReport","astroQuestion","chatUser","DashboardModuleModule","declarations","imports","providers","routes","path","component","canActivate","DashboardRoutingModule","forChild","exports"],"mappings":"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","file":"Dashboard-dashboard-module-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { QuestionReportService } from './astro-question.service';\r\nimport { AuthenticationService } from 'src/app/shared/service/authentication/authentication.service';\r\nimport { CommonService } from 'src/app/shared/service/commonService/common.service';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\n\r\n\r\nexport interface UserData {\r\n  _id: string;\r\n  srNo: string;\r\n  astrologerId: string;\r\n  comment: string;\r\n  createdAt: string;\r\n  employment: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  mobileNumber: string;\r\n  reportSubType: string;\r\n  reportType: number;\r\n  userId: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-astro-question',\r\n  templateUrl: './astro-question.component.html',\r\n  styleUrls: ['./astro-question.component.scss']\r\n})\r\nexport class AstroQuestionComponent implements OnInit {\r\n  displayedColumns: string[] = ['edit','srNo', 'reportSubType', 'firstName', 'mobileNumber'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild('questionSideNav') sidenav: MatSidenav;\r\n  mode = new FormControl('over');\r\n  userData: any;\r\n  validateForm: FormGroup;\r\n  selectedUser;\r\n  users: UserData[];\r\n  characters = 0;\r\n\r\n\r\n  constructor(private _authService : AuthService, private _formBuilder: FormBuilder, private _authenticationService : AuthenticationService, private _commonService: CommonService, private _astroReportService : QuestionReportService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.validateForm = this._formBuilder.group({\r\n      firstName: [{value : null, disabled: true}, [Validators.required]],\r\n      lastName: [{value : null, disabled: true}, [Validators.required]],\r\n      comment: [{value : null, disabled: true}, [Validators.required, Validators.email]],\r\n      mobileNumber   : [{value : null, disabled: true}, [Validators.required]],\r\n      // gender: [{value : null, disabled: true}, [Validators.required]],\r\n      reportSubType: [{value : null, disabled: true}, [Validators.required]],\r\n      employment: [{value : null, disabled: true}, [Validators.required]],\r\n      message: [null, [Validators.required]]\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource(this.users);\r\n    this.userData = this._authenticationService.getUser();\r\n    this.getQuestionByAstrologer();\r\n\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator =  this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getQuestionByAstrologer() {\r\n\r\n    if(this.userData != null) {\r\n\r\n      let reqBody = {\r\n        \"astrologerId\" : this.userData._id\r\n      }\r\n\r\n      this._astroReportService.getQuestionByAstroId(reqBody).subscribe((responseData)=> {\r\n        console.log(\"getQuestionByAstroId ResponseBody \",responseData);\r\n        let resonseMessage = responseData.message;\r\n        let responseBody = responseData.data;\r\n        if(responseData.status == 200) {\r\n          let obj = []\r\n           responseBody.map((everyData) => {\r\n            obj.push({\r\n              _id : everyData._id,\r\n              astrologerId: everyData.astrologerId,\r\n              comment: everyData.comment,\r\n              createdAt: everyData.createdAt,\r\n              employment: everyData.employment,\r\n              firstName: everyData.firstName,\r\n              lastName: everyData.lastName,\r\n              mobileNumber: everyData.mobileNumber,\r\n              reportSubType: everyData.reportSubType,\r\n              reportType: everyData.reportType,\r\n              userId: everyData.userId\r\n            });\r\n            this.users = obj;\r\n          })\r\n          console.log(\"this.users \",this.users)\r\n          this.dataSource = new MatTableDataSource(this.users);\r\n          this.ngAfterViewInit();\r\n          this._commonService.tostMessage(resonseMessage)\r\n        } else if(responseData.status == 300){\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this._authService.logOut();\r\n        } else{\r\n          this._commonService.tostMessage(resonseMessage);\r\n        }\r\n      })\r\n    } else {\r\n      alert(\"Astro login required\")\r\n    }\r\n  }\r\n\r\n\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  editQuestion(reference,data){\r\n    reference.toggle();\r\n    console.log(\"Side bar data\", data);\r\n    this.validateForm.patchValue({\r\n      firstName :  data.firstName,\r\n      lastName :  data.lastName,\r\n      comment :  data.comment,\r\n      mobileNumber : data.mobileNumber,\r\n      // gender :  data.gender,\r\n      reportSubType : data.reportSubType,\r\n      employment :  data.employment\r\n    });\r\n    this.selectedUser = data;\r\n  }\r\n\r\n  submitForm(value: any) {\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n      console.log(\"submit Form \",value);\r\n      console.log(\"this.selectedUser \",this.selectedUser);\r\n\r\n      const formData: FormData = new FormData();\r\n      formData.append('message', value['message'] );\r\n      formData.append('userId', this.selectedUser.userId );\r\n      formData.append('astrologerId', this.selectedUser.astrologerId);\r\n      formData.append('queryId', this.selectedUser._id);\r\n      formData.append('reportType', this.selectedUser.reportType);\r\n\r\n      this._astroReportService.replyReports(formData).subscribe((responseData)=>{\r\n        console.log(\"responseDataa \",responseData);\r\n        let resonseMessage = responseData.message;\r\n        if(responseData.status == 200) {\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this.validateForm.reset();\r\n          this.sidenav.close();\r\n        } else if(responseData.status == 300){\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this._authService.logOut();\r\n        } else{\r\n          this._commonService.tostMessage(resonseMessage);\r\n        }\r\n    });\r\n  }\r\n\r\n  resetForm(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    this.validateForm.controls['message'].reset();\r\n    for (const key in this.validateForm.controls) {\r\n      this.validateForm.controls[key].markAsPristine();\r\n      this.validateForm.controls[key].updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  count(value){\r\n    this.characters = 0 + value.length;\r\n  }\r\n\r\n  closeDrawer(reference){\r\n    reference.toggle();\r\n    this.validateForm.reset();\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"drawer-container\">\r\n  <mat-sidenav #questionSideNav [mode]=\"mode.value\" position=\"end\" disableClose>\r\n    <!-- <p><button mat-button >Toggle</button></p>\r\n    <p><mat-icon> </mat-icon></p> -->\r\n    <button mat-mini-fab color=\"primary\" class=\"close-drawer\" aria-label=\"Close Menu\" (click)=\"closeDrawer(questionSideNav)\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n\r\n\r\n    <div class=\"form-wrapper\">\r\n      <div class=\"separator mb-5\">\r\n        <span class=\"edit-form-title text \">Reply Question Form</span>\r\n      </div>\r\n      <form  name=\"validateForm\" [formGroup]=\"validateForm\" novalidate>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>First Name</mat-label>\r\n          <input matInput formControlName=\"firstName\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Last Name</mat-label>\r\n          <input matInput formControlName=\"lastName\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Mobile Number</mat-label>\r\n          <input matInput formControlName=\"mobileNumber\" required>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Gender</mat-label>\r\n          <input matInput formControlName=\"gender\" required>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Report Type</mat-label>\r\n          <input matInput formControlName=\"reportSubType\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Employment</mat-label>\r\n          <input matInput formControlName=\"employment\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Question</mat-label>\r\n            <textarea matInput formControlName=\"comment\" required></textarea>\r\n\r\n          </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-full-width\">\r\n          <mat-label>Answer</mat-label>\r\n          <textarea matInput formControlName=\"message\"maxlength=\"2000\" #message (keyup)=\"count(message.value)\" required></textarea>\r\n          <mat-hint align=\"start\">{{characters}} / 2000</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <div class=\"mt-5\">\r\n          <button mat-raised-button color=\"primary\" class=\"submit-button mt-3 mr-5\" aria-label=\"LOGIN\"\r\n          [disabled]=\"validateForm.invalid\" (click)=\"submitForm(validateForm.value)\">\r\n            Create\r\n          </button>\r\n\r\n          <button mat-stroked-button color=\"warn\" class=\"mt-3\" (click)=\"resetForm($event)\">\r\n            Reset\r\n          </button>\r\n          </div>\r\n\r\n      </form>\r\n    </div>\r\n\r\n  </mat-sidenav>\r\n\r\n<mat-sidenav-content >\r\n  <div class=\"container  wrapper-box\">\r\n    <button class=\"my-3\" mat-mini-fab color=\"primary\" routerLink=\"/dashboard\"><mat-icon>keyboard_arrow_left</mat-icon></button>\r\n    <div class=\"separator mb-1\">\r\n      <span class=\"dashboard-title text \">Questions</span>\r\n    </div>\r\n    <mat-form-field>\r\n      <mat-label>Filter</mat-label>\r\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n    </mat-form-field>\r\n\r\n    <div class=\"mat-elevation-z8 mb-5\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <!-- Edit Column -->\r\n        <ng-container matColumnDef=\"edit\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\r\n        <td class=\"edit-report\" mat-cell *matCellDef=\"let row\" data-label=\"Edit\" (click)=\"editQuestion(questionSideNav,row)\"><mat-icon> edit </mat-icon> </td>\r\n      </ng-container>\r\n\r\n        <!-- ID Column -->\r\n        <ng-container matColumnDef=\"srNo\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> SrNo. </th>\r\n          <td mat-cell *matCellDef=\"let row; let i = index\" data-label=\"SrNo.\"> {{i + 1}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Progress Column -->\r\n        <ng-container matColumnDef=\"reportSubType\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Type </th>\r\n          <td mat-cell *matCellDef=\"let row\" data-label=\"Report Type\"> {{row.reportSubType}}</td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"firstName\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n          <td mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.firstName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"mobileNumber\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Mobile Number </th>\r\n          <td mat-cell *matCellDef=\"let row\" data-label=\"Mobile Number\"> {{row.mobileNumber}} </td>\r\n        </ng-container>\r\n\r\n\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n        <!-- Row shown when there is no matching data. -->\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n    </div>\r\n    </div>\r\n</mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../..//shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../../shared/constant/rest-url.constants';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ProfileUpdateService } from 'src/app/shared/service/restApi/profileUpdate.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class QuestionReportService {\r\n\r\n  constructor(private restService: RestService, private _profileUpdateService : ProfileUpdateService) {}\r\n\r\n  getQuestionByAstroId(data): Observable<any> {\r\n    return this.restService.create(RestUrl.getQuestionByAstroId, data)\r\n  }\r\n\r\n  replyReports(data): Observable<any> {\r\n    return this._profileUpdateService.createFormData(RestUrl.replyReports, data)\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AstroReportService } from './astro-report.service'\r\nimport { AuthenticationService } from 'src/app/shared/service/authentication/authentication.service';\r\nimport { CommonService } from 'src/app/shared/service/commonService/common.service';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\n\r\nexport interface UserData {\r\n  _id: string;\r\n  srNo: string;\r\n  astrologerId: string;\r\n  comment: string;\r\n  createdAt: string;\r\n  employment: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  mobileNumber: string;\r\n  reportSubType: string;\r\n  reportType: number;\r\n  userId: string;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-astro-report',\r\n  templateUrl: './astro-report.component.html',\r\n  styleUrls: ['./astro-report.component.scss']\r\n})\r\nexport class AstroReportComponent implements OnInit, AfterViewInit {\r\n  displayedColumns: string[] = ['edit','srNo', 'reportSubType', 'firstName', 'mobileNumber'];\r\n  dataSource: MatTableDataSource<UserData>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild('reportSideNav') sidenav: MatSidenav;\r\n\r\n  mode = new FormControl('over');\r\n  userData;\r\n  validateForm: FormGroup;\r\n  selectedUser;\r\n  users: UserData[];\r\n\r\n  characters = 0;\r\n\r\n\r\n  constructor(private _authService : AuthService, private _commonService: CommonService, private _astroReportService : AstroReportService, private _authenticationService : AuthenticationService, private _formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.validateForm = this._formBuilder.group({\r\n      firstName: [{value : null, disabled: true}, [Validators.required]],\r\n      lastName: [{value : null, disabled: true}, [Validators.required]],\r\n      comment: [{value : null, disabled: true}, [Validators.required, Validators.email]],\r\n      mobileNumber   : [{value : null, disabled: true}, [Validators.required]],\r\n      reportSubType: [{value : null, disabled: true}, [Validators.required]],\r\n      employment: [{value : null, disabled: true}, [Validators.required]],\r\n      message: [null, [Validators.required]],\r\n      // attachment: [null, [Validators.required]]\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource(this.users);\r\n    this.userData = this._authenticationService.getUser();\r\n    this.getReportByAstrologer();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  getReportByAstrologer() {\r\n\r\n    if(this.userData != null) {\r\n      let reqBody = {\r\n        \"astrologerId\" : this.userData._id\r\n      }\r\n      this._astroReportService.getReportByAstroId(reqBody).subscribe((responseData)=>{\r\n        console.log(\"getQuestionByAstroId ResponseBody \",responseData);\r\n        let resonseMessage = responseData.message;\r\n        let responseBody = responseData.data;\r\n        if(responseData.status == 200) {\r\n          let obj = []\r\n           responseBody.map((everyData) => {\r\n            obj.push({\r\n              _id : everyData._id,\r\n              astrologerId: everyData.astrologerId,\r\n              comment: everyData.comment,\r\n              createdAt: everyData.createdAt,\r\n              employment: everyData.employment,\r\n              firstName: everyData.firstName,\r\n              lastName: everyData.lastName,\r\n              mobileNumber: everyData.mobileNumber,\r\n              reportSubType: everyData.reportSubType,\r\n              reportType: everyData.reportType,\r\n              userId: everyData.userId\r\n            });\r\n            this.users = obj;\r\n          })\r\n          console.log(\"this.users \",this.users)\r\n          this.dataSource = new MatTableDataSource(this.users);\r\n          this.ngAfterViewInit();\r\n          this._commonService.tostMessage(resonseMessage)\r\n        } else if(responseData.status == 300){\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this._authService.logOut();\r\n        } else{\r\n          this._commonService.tostMessage(resonseMessage);\r\n        }\r\n      })\r\n    } else {\r\n      alert(\"Astro login required\")\r\n    }\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  editQuestion(reference,data) {\r\n    reference.toggle();\r\n    console.log(\"Side bar data\", data);\r\n    this.validateForm.patchValue({\r\n      firstName :  data.firstName,\r\n      lastName :  data.lastName,\r\n      comment :  data.comment,\r\n      mobileNumber : data.mobileNumber,\r\n      // gender :  data.gender,\r\n      reportSubType : data.reportSubType,\r\n      employment :  data.employment\r\n    });\r\n    this.selectedUser = data;\r\n  }\r\n\r\n  submitForm(value: any) {\r\n    for (const key in this.validateForm.controls) {\r\n        this.validateForm.controls[key].markAsDirty();\r\n        this.validateForm.controls[key].updateValueAndValidity();\r\n      }\r\n      console.log(\"submit Form \",value);\r\n      console.log(\"this.selectedUser \",this.selectedUser);\r\n\r\n      const formData: FormData = new FormData();\r\n      formData.append('message', value['message'] );\r\n      // formData.append('attachment', value['attachment']);\r\n      formData.append('userId', this.selectedUser.userId );\r\n      formData.append('astrologerId', this.selectedUser.astrologerId);\r\n      formData.append('queryId', this.selectedUser._id);\r\n      formData.append('reportType', this.selectedUser.reportType);\r\n\r\n      this._astroReportService.replyReports(formData).subscribe((responseData)=>{\r\n        console.log(\"responseDataa \",responseData);\r\n        let resonseMessage = responseData.message;\r\n        if(responseData.status == 200) {\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this.validateForm.reset();\r\n          this.sidenav.close();\r\n        } else if(responseData.status == 300){\r\n          this._commonService.tostMessage(resonseMessage);\r\n          this._authService.logOut();\r\n        } else{\r\n          this._commonService.tostMessage(resonseMessage);\r\n        }\r\n    });\r\n  }\r\n\r\n  resetForm(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    this.validateForm.controls['message'].reset();\r\n    // this.validateForm.controls['attachment'].reset();\r\n    for (const key in this.validateForm.controls) {\r\n      this.validateForm.controls[key].markAsPristine();\r\n      this.validateForm.controls[key].updateValueAndValidity();\r\n    }\r\n  }\r\n\r\n  count(value){\r\n    this.characters = 0 + value.length;\r\n  }\r\n\r\n  closeDrawer(reference){\r\n    reference.toggle();\r\n    this.validateForm.reset();\r\n  }\r\n\r\n}\r\n","<mat-sidenav-container class=\"drawer-container\">\r\n  <mat-sidenav #reportSideNav [mode]=\"mode.value\" position=\"end\" disableClose>\r\n    <button mat-mini-fab color=\"primary\" class=\"close-drawer\" aria-label=\"Close Menu\" (click)=\"closeDrawer(reportSideNav)\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n\r\n\r\n    <div class=\"form-wrapper\">\r\n      <div class=\"separator mb-5\">\r\n        <span class=\"edit-form-title text \">Reply Report Form</span>\r\n      </div>\r\n      <form  name=\"validateForm\" [formGroup]=\"validateForm\" novalidate>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>First Name</mat-label>\r\n          <input matInput formControlName=\"firstName\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Last Name</mat-label>\r\n          <input matInput formControlName=\"lastName\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Mobile Number</mat-label>\r\n          <input matInput formControlName=\"mobileNumber\" required>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Gender</mat-label>\r\n          <input matInput formControlName=\"gender\" required>\r\n        </mat-form-field> -->\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Report Type</mat-label>\r\n          <input matInput formControlName=\"reportSubType\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Employment</mat-label>\r\n          <input matInput formControlName=\"employment\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Question</mat-label>\r\n            <textarea matInput formControlName=\"comment\" required></textarea>\r\n\r\n          </mat-form-field>\r\n\r\n        <mat-form-field class=\"form-field-full-width\">\r\n          <mat-label>Answer</mat-label>\r\n          <textarea matInput formControlName=\"message\" maxlength=\"4000\" #message (keyup)=\"count(message.value)\" required></textarea>\r\n          <mat-hint align=\"start\">{{characters}} / 4000</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <!-- <mat-form-field class=\"form-field-width\">\r\n          <mat-label>Upload Report</mat-label>\r\n          <ngx-mat-file-input formControlName=\"attachment\" required [accept]=\"'.pdf'\"></ngx-mat-file-input>\r\n          <mat-icon matSuffix>folder</mat-icon>\r\n          <mat-hint align=\"start\"><strong>* PDF Format Only</strong> </mat-hint>\r\n          <mat-error *ngIf=\"validateForm.get('attachment').hasError('attachment')\">\r\n            Upload Report is required!\r\n          </mat-error>\r\n        </mat-form-field> -->\r\n\r\n        <div class=\"mt-5\">\r\n          <button mat-raised-button color=\"primary\" class=\"submit-button mt-3 mr-5\" aria-label=\"LOGIN\"\r\n          [disabled]=\"validateForm.invalid\" (click)=\"submitForm(validateForm.value)\">\r\n            Create\r\n          </button>\r\n\r\n          <button mat-stroked-button color=\"warn\" class=\"mt-3\" (click)=\"resetForm($event)\">\r\n            Reset\r\n          </button>\r\n          </div>\r\n\r\n      </form>\r\n    </div>\r\n  </mat-sidenav>\r\n\r\n\r\n\r\n\r\n<mat-sidenav-content>\r\n  <div class=\"container wrapper-box\">\r\n    <button class=\"my-3\" mat-mini-fab color=\"primary\" routerLink=\"/dashboard\"><mat-icon>keyboard_arrow_left</mat-icon></button>\r\n    <div class=\"separator mb-1\">\r\n      <span class=\"dashboard-title text \">Reports</span>\r\n    </div>\r\n    <mat-form-field>\r\n      <mat-label>Filter</mat-label>\r\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n    </mat-form-field>\r\n\r\n    <div class=\"mat-elevation-z8 mb-5\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n\r\n        <!-- Edit Column -->\r\n        <ng-container matColumnDef=\"edit\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit </th>\r\n          <td class=\"edit-report\" mat-cell *matCellDef=\"let row\" data-label=\"Edit\" (click)=\"editQuestion(reportSideNav,row)\"><mat-icon> edit </mat-icon> </td>\r\n        </ng-container>\r\n\r\n          <!-- ID Column -->\r\n          <ng-container matColumnDef=\"srNo\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> SrNo. </th>\r\n            <td mat-cell *matCellDef=\"let row; let i = index\" data-label=\"SrNo.\"> {{i + 1}} </td>\r\n          </ng-container>\r\n\r\n          <!-- Progress Column -->\r\n          <ng-container matColumnDef=\"reportSubType\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Report Type </th>\r\n            <td mat-cell *matCellDef=\"let row\" data-label=\"Report Type\"> {{row.reportSubType}}</td>\r\n          </ng-container>\r\n\r\n          <!-- Name Column -->\r\n          <ng-container matColumnDef=\"firstName\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\r\n            <td mat-cell *matCellDef=\"let row\" data-label=\"Name\"> {{row.firstName}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"mobileNumber\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Mobile Number </th>\r\n            <td mat-cell *matCellDef=\"let row\" data-label=\"Mobile Number\"> {{row.mobileNumber}} </td>\r\n          </ng-container>\r\n\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n        <!-- Row shown when there is no matching data. -->\r\n        <tr class=\"mat-row\" *matNoDataRow>\r\n          <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n        </tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"></mat-paginator>\r\n    </div>\r\n    </div>\r\n</mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from '../..//shared/service/restApi/rest.service';\r\nimport { RestUrl } from '../../shared/constant/rest-url.constants';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ProfileUpdateService } from 'src/app/shared/service/restApi/profileUpdate.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AstroReportService {\r\n\r\n  constructor(private restService: RestService, private _profileUpdateService : ProfileUpdateService) {}\r\n\r\n  getReportByAstroId(data): Observable<any> {\r\n    return this.restService.create(RestUrl.getReportByAstroId, data)\r\n  }\r\n\r\n  replyReports(data): Observable<any> {\r\n    return this._profileUpdateService.createFormData(RestUrl.replyReports, data)\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-report',\r\n  templateUrl: './edit-report.component.html',\r\n  styleUrls: ['./edit-report.component.scss']\r\n})\r\nexport class EditReportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>edit-report works!</p>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'\r\n@Component({\r\n  selector: 'app-astrologer-dashboard',\r\n  templateUrl: './astrologer-dashboard.component.html',\r\n  styleUrls: ['./astrologer-dashboard.component.scss']\r\n})\r\nexport class AstrologerDashboardComponent implements OnInit {\r\n\r\n  constructor(private _route : Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  astroReport() {\r\n    this._route.navigate(['dashboard/astroReport']);\r\n  }\r\n\r\n  astroQuestion() {\r\n    this._route.navigate(['dashboard/astroQuestion']);\r\n  }\r\n\r\n  chatUser(){\r\n    this._route.navigate(['/chat'])\r\n  }\r\n\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n<div class=\"astro-dashboard-wrapper\">\r\n  <div class=\"separator my-5\">\r\n    <span class=\"dashboard-title text \">Dashboard</span>\r\n  </div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-3 my-3\">\r\n    <mat-card class=\"card1\" (click)=\"astroReport()\">\r\n      <mat-icon>assignment</mat-icon>\r\n      <h1>Report</h1>\r\n        <div class=\"go-corner\" href=\"#\">\r\n          <div class=\"go-arrow\">\r\n            →\r\n          </div>\r\n        </div>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"col-md-3 my-3\">\r\n    <mat-card class=\"card1\" (click)=\"astroQuestion()\">\r\n       <mat-icon>question_answer</mat-icon>\r\n      <h1>Question </h1>\r\n        <div class=\"go-corner\" href=\"#\">\r\n          <div class=\"go-arrow\">\r\n            →\r\n          </div>\r\n        </div>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"col-md-3 my-3\">\r\n    <mat-card class=\"card1\">\r\n      <span><mat-icon>call</mat-icon></span>\r\n      <h1>Call </h1>\r\n        <div class=\"go-corner\" href=\"#\">\r\n          <div class=\"go-arrow\">\r\n            →\r\n          </div>\r\n        </div>\r\n    </mat-card>\r\n  </div>\r\n  <div class=\"col-md-3 my-3\">\r\n    <mat-card class=\"card1\" (click)=\"chatUser();\">\r\n      <span><mat-icon>chat</mat-icon></span>\r\n      <h1>Chat </h1>\r\n        <div class=\"go-corner\" href=\"#\">\r\n          <div class=\"go-arrow\">\r\n            →\r\n          </div>\r\n        </div>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n</div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '../material-module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { AstrologerDashboardComponent } from './astrologer-dashboard/astrologer-dashboard.component';\r\nimport { AuthGuard } from '../auth/canActivateAuth.gaurd';\r\nimport { AstroReportComponent } from './astro-report/astro-report.component';\r\nimport { EditReportComponent } from './astro-report/edit-report/edit-report.component';\r\nimport { AstroQuestionComponent } from './astro-question/astro-question.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AstrologerDashboardComponent,\r\n    AstroReportComponent,\r\n    EditReportComponent,\r\n    AstroQuestionComponent\r\n  ],\r\n  imports: [\r\n    DashboardRoutingModule,\r\n    CommonModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    AuthGuard\r\n  ]\r\n})\r\nexport class DashboardModuleModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AstrologerDashboardComponent } from './astrologer-dashboard/astrologer-dashboard.component';\r\nimport { AstroReportComponent } from './astro-report/astro-report.component';\r\nimport { AstroQuestionComponent } from './astro-question/astro-question.component';\r\n\r\n\r\nimport { AuthGuard } from '../auth/canActivateAuth.gaurd'\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  {path: '', component: AstrologerDashboardComponent},\r\n  {path: 'astroReport', component: AstroReportComponent, canActivate: [AuthGuard]},\r\n  {path: 'astroQuestion', component: AstroQuestionComponent, canActivate: [AuthGuard]},\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n"]}